export const CacheType =
{
    Search: 1,
    ObjId: 2
};

export function get(token, type) {
    if (!token) 
    const cached = localStorage.getItem(getKey(token, type));
    if (!cached) {
        return;
    }}

export 

function getKey(token, type) {
    switch (type) {
        case CacheType.Search:
            return "cache:" + token;
        
    }}
import * as Frame from './frame.js';
import * as Cache from './cache.js';

const baseUrl = "https://collectionapi.metmuseum.org/public/collection/v1/";

export 

export 

export 

export 

export 

export 

export function updateCartItems() {
    let cart = localStorage.getItem('cart');
    if (cart !== null ) 
}

export 
export 

export 

export 

export 

        import * as Search from './search.js';
        import * as Config from './config.js';

        async function artSearch(searchToken) {
            const arts = await Search.retrieve(searchToken);) }

        document.addEventListener('DOMContentLoaded', async event => {
            const params = (new URL(document.location)).searchParams;
            const searchQuery = params.get('q');
            if (!searchQuery) 
            document.getElementById('search').value = searchQuery;
            const searchToken = searchQuery;//.split(',');
            const searchInfo = document.getElementById("search-info");
            searchInfo.innerText = `Searching for “${searchQuery}”...`;
            let resultCount = 0;
            try {
                resultCount = await artSearch(searchToken);});
        document.addEventListener('DOMContentLoaded', Config.updateCartItems());

        
         /*document.getElementsByClassName('search-form')[0].addEventListener('submit', event => {
             const searchInput = document.getElementById('search');
             if (!searchInput.value) {
                 searchInput.style.border = "1px solid red";
                 event.preventDefault();
             }
         });*/
    import * as Cache from './cache.js';

const baseUrl = "https://collectionapi.metmuseum.org/public/collection/v1/";

export async function retrieve(searchToken) {

    const cached = Cache.get(searchToken, Cache.CacheType.Search);
    if (cached) 

    try {
        if (searchToken === undefined) 
        const fetched = await fetchData(searchToken);}

async function fetchData(searchToken) {
    const idList = await fetchSearch(searchToken);}



async function fetchSearch(searchToken) {
    const request = `${baseUrl}search?q=${searchToken.replace(' ', '+')}&hasImages=true&artistOrCulture=true`;
    const data = await getJson(request);}




async function getJson(url) {
    const response = await fetch(url);}
