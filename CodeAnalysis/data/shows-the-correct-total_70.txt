import { calculatePrice } from './frame.js';

const searchLimit = 100;
const cartKey = 'cart';

export ;

export 

;




export function calculateTotalCartPrice() {
    let cart = getCart();
    let cart_price = 0;

    if (cart != null) {
        for (const it of cart) {

            cart_price += calculatePrice(it.printSize, it.frameStyle, it.frameWidth, it.matWidth);

        }
    }

    return (Math.round((cart_price + Number.EPSILON) * 100) / 100);
}

export function getCart() {

    let cart = JSON.parse(window.localStorage.getItem(cartKey));

    if (cart === null || cart.length == 0) 

    return cart;
}

export 






export 


export 
import { calculateTotalCartPrice, getCart } from '/cache.js';


window.localStorage.setItem('cart', JSON.stringify([
            {objId: 111, printSize: 'S', frameStyle: 'natural', frameWidth: 20, matWidth: 50},
            {objId: 222, printSize: 'M', frameStyle: 'shabby', frameWidth: 30, matWidth: 30},
            {objId: 222, printSize: 'L', frameStyle: 'elegant', frameWidth: 20, matWidth: 50},
            ])
        );


const select = document.getElementById('country');
const shipping = document.getElementById('price-shipping');
const subtotal = document.getElementById('price-subtotal');
const total = document.getElementById('price-total');
const cart = getCart();
let cart_price = calculateTotalCartPrice();
let countries;


async function getCountries() {
    const response = await fetch(`https://web-engineering.big.tuwien.ac.at/s20/a2/shipping`);
    const responseData = await response.json();
    return responseData;
};


function updateCosts() {
    let c = select.value;
    for (const i in countries) {
        let obj = countries[i];
        if(obj['country'] == c ) {
            let costs = (obj['cost'] / 100);
            shipping.innerText = ( costs ).toFixed(2);
            total.innerText = ( cart_price + costs).toFixed(2);
            break;
        }
    }
}



if(!cart)  else {
    subtotal.innerText = (cart_price).toFixed(2);
}


getCountries().then(response => {

    countries = response['destinations'];

    for (const i in countries) {
        let obj = countries[i];
        select.options[select.options.length] = new Option(obj['displayName'], obj['country'], false, false);      
    }
    updateCosts();
})
.catch( );


select.addEventListener('change', updateCosts);







export 

export 

export function calculatePrice(printSize, frameStyle, frameWidth, matWidth) {

    let price = 0.0;

    let basePrice = 30;
    let framePrice = frameStyle == 'classic' ? 1 : frameStyle == 'natural' ? 0.80 : frameStyle == 'shabby' ? 0.90 ;
    let matPrice = 0.05;

    price = (frameWidth/10)*framePrice + (matWidth/10)*matPrice + basePrice;

    if(printSize == 'M') {
        price = price * 2;
    }
    if(printSize == 'L' )

    return (Math.round((price + Number.EPSILON) * 100) / 100);
}
