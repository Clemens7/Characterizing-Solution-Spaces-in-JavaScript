export const CacheType =
{
    Search: 1,
    ObjId: 2
};

export function get(token, type) {
    if (!token) 
    const cached = localStorage.getItem(getKey(token, type));
    if (!cached) {
        return;
    }}

export function set(token, type, content) {
    if (!content) 
    if (!token) 
    localStorage.setItem(getKey(token, type), JSON.stringify(content));
}

function getKey(token, type) {
    switch (type) {
        case CacheType.Search:
            return "cache:" + token;
        
    }}
import * as Frame from './frame.js';
import * as Cache from './cache.js';

const baseUrl = "https://collectionapi.metmuseum.org/public/collection/v1/";

export 

export 

export 

export 

export 

export 

export function updateCartItems() {
    let cart = localStorage.getItem('cart');
    if (cart !== null ) 
}

export 
export 

export 

export 

export 

        import * as Search from './search.js';
        import * as Config from './config.js';

        async function artSearch(searchToken) {
            const arts = await Search.retrieve(searchToken);
            if (arts === undefined || arts === null) 
            createTiles(arts);
            return arts.length;
        }

        document.addEventListener('DOMContentLoaded', async event => {
            const params = (new URL(document.location)).searchParams;
            const searchQuery = params.get('q');
            if (!searchQuery) 
            document.getElementById('search').value = searchQuery;
            const searchToken = searchQuery;//.split(',');
            const searchInfo = document.getElementById("search-info");
            searchInfo.innerText = `Searching for “${searchQuery}”...`;
            let resultCount = 0;
            try {
                resultCount = await artSearch(searchToken);
            }
            finally {
                searchInfo.innerText = `Found ${resultCount} artwork${resultCount != 1 ? "s" } for “${searchQuery}”`;
            }
        });
        document.addEventListener('DOMContentLoaded', Config.updateCartItems());

        function createTiles(arts) {

            const gallery = document.getElementById("gallery");

            for (let i = 0; i < arts.length; i++) {
                const div1 = document.createElement("div");
                div1.className = "thumb";
                const a = document.createElement("a");
                a.href = "config.html?objectID=" + arts[i].objectID;
                a.id = "object-" + i;
                div1.appendChild(a);
                const img = document.createElement("img");
                img.src = arts[i].primaryImageSmall;//primaryImage;
                img.alt = arts[i].title;
                img.id = "object-image-" + i;
                a.appendChild(img);
                const div2 = document.createElement("div");
                div2.className = "museum-label";
                a.appendChild(div2);
                const spanArtist = document.createElement("span");
                const spanTitle = document.createElement("span");
                const spanDate = document.createElement("span");
                spanArtist.className = "artist";
                spanArtist.innerText = arts[i].artistDisplayName;
                spanTitle.className = "title";
                spanTitle.innerText = arts[i].title;
                spanDate.className = "date";
                spanDate.innerText = arts[i].objectDate;
                div2.appendChild(spanArtist);
                div2.appendChild(spanTitle);
                div2.appendChild(document.createTextNode(", "));
                div2.appendChild(spanDate);

                gallery.appendChild(div1);
            }
        }
         /*document.getElementsByClassName('search-form')[0].addEventListener('submit', event => {
             const searchInput = document.getElementById('search');
             if (!searchInput.value) {
                 searchInput.style.border = "1px solid red";
                 event.preventDefault();
             }
         });*/
    import * as Cache from './cache.js';

const baseUrl = "https://collectionapi.metmuseum.org/public/collection/v1/";

export async function retrieve(searchToken) {

    const cached = Cache.get(searchToken, Cache.CacheType.Search);
    if (cached) 

    try {
        if (searchToken === undefined) 
        const fetched = await fetchData(searchToken);
        Cache.set(searchToken, Cache.CacheType.Search, fetched);
        return fetched;
    }}

async function fetchData(searchToken) {
    const idList = await fetchSearch(searchToken);
    if (!idList) 
    return await fetchIds(idList);
}

async function fetchIds(idList) {
    let arrayIndex = 0;
    const promises = [];
    for (let i = 0; arrayIndex < 100 && i < idList.length; i++) {
        const promise = fetchItem(idList[i]);
        if (promise) {
            promises.push(promise);
            arrayIndex++;
        }
    }
    const array = await Promise.all(promises);
    return array;
}

async function fetchSearch(searchToken) {
    const request = `${baseUrl}search?q=${searchToken.replace(' ', '+')}&hasImages=true&artistOrCulture=true`;
    const data = await getJson(request);
    return data.objectIDs;
}

async function fetchItem(id) {
    return await getJson(`${baseUrl}objects/${id}`);
}


async function getJson(url) {
    const response = await fetch(url);
    return await response.json();
}
