
    import * as CountriesAPI from './countries-api.js';
    import { Country } from './countries.js'
    import { calculatePrice } from "./frame.js"

    let countries;
    let subTotal;

    async function printCountries(subTotal) {

      countries = await CountriesAPI.retrieve();

      document.getElementById("pay-button").disabled = true;
      var selectCountry = document.getElementById("country");


      for (let country1 of countries) {
        var option = document.createElement("option");
        option.text = country1.displayName;
        option.value = country1.country;
        selectCountry.add(option);

      }
      const countries1 = Array.from(document.getElementById('country').options).map(o => o.text);
      console.log(countries1);
      console.log(selectCountry);
    }
    const selectElement = document.querySelector('#country');
    selectElement.addEventListener('change', );

    function calculateSubtotal(cart) {
      let price = 0;
      for (let item of cart) {
        price += calculatePrice(item.printSize, item.frameStyle, item.frameWidth, item.matWidth)
      }
      return price;
    }

    document.addEventListener('DOMContentLoaded', event => {

      let cart = JSON.parse(localStorage.getItem('cart'));

      if (cart === null || cart.length === 0)  else {
        const resultSubTotal = document.querySelector('#price-subtotal');
        subTotal = calculateSubtotal(cart);
        resultSubTotal.textContent = `${subTotal}`;
        printCountries(subTotal);
      }
    })
  import { Country } from "./countries.js";

export async function retrieve() {
    const url = `https://web-engineering.big.tuwien.ac.at/s20/a2/shipping`;
    let countries = [];
    try {
        const response = await fetch(url);
        const rawData = await response.json();
        const responseCountries = await rawData.destinations;

        countries = responseCountries.map(
            country => new Country(country.country,
                country.displayName,
                country.cost,
            )
        );



        return countries;
    }}


/*

        for (let x in responseCountries.destinations) {
            country = new Country(responseCountries.destinations[x].country, responseCountries.destinations[x].displayName, responseCountries.destinations[x].cost);
            countries.push(country);
        }

export class Country {
    constructor(country, displayName, cost) {
        this.country = country;
        this.displayName = displayName;
        this.cost = cost;
    }
}export 

export 

export function calculatePrice(printSize, frameStyle, frameWidth, matWidth) {
    let multiplicator = {
        S: 1,
        M: 2,
        L: 3.5
    }

    let frameStyleCost = {
        classic: 1,
        natural: 0.8,
        shabby: 0.9,
        elegant: 0.85
    }

    let base = 30;

    let frameCost = frameStyleCost[frameStyle] * frameWidth
    let matCost = 0.05 * matWidth

    let price = (base + frameCost + matCost) * multiplicator[printSize]
    return (Math.round((price + Number.EPSILON) * 100) / 100);
}

