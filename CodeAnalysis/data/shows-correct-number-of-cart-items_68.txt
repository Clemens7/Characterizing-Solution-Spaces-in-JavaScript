
const URL = 'https://collectionapi.metmuseum.org';
const GET_OBJECT_API = '/public/collection/v1/objects';
const CURRENT_URL = window.location.href;
const CONFIG_SIDE = "/config.html";
const CART_SIDE = "/cart.html"
let SERVER_URL;
let configobjectID = "";


const outerContainer = document.getElementsByClassName('cart-item');
const cartPreview = document.getElementsByClassName('cart-preview');
const imageView = document.getElementsByClassName('image-link');
const image = document.getElementsByClassName('cart-thumb');
const museumLabel = document.getElementsByClassName('museum-label');
const artist = document.getElementsByClassName('artist');
const title = document.getElementsByClassName('title');
const date = document.getElementsByClassName('date');
const frameDesc = document.getElementsByClassName('frame-description');
const cartPrice = document.getElementsByClassName('cart-price');
const itemPrice = document.getElementById('price-0');
const cartRemove = document.getElementsByClassName('cart-remove');

class Image {
    static HtmlNumber = 0;
    

    static 

    static 

    static 

    static generateHTMLCartTotal(){
        const cartTotal = document.createElement('div');
        cartTotal.className = 'cart-total';
        const totalPriceContainer = document.createElement('div');
        totalPriceContainer.className = 'price';
        totalPriceContainer.innerText = 'Total: € ';
        const totalPrice = document.createElement('span');
        totalPrice.id = 'price-total';
        totalPrice.innerText= '0';
        const checkoutButton = document.createElement('button');
        checkoutButton.className = 'checkout-button';
        checkoutButton.type = 'button';
        checkoutButton.id = 'checkout-button';
        checkoutButton.innerText = 'Checkout';
        checkoutButton.onclick = ;

        const shoppingCart = JSON.parse(localStorage.getItem('cart'));
        if(shoppingCart === null)

        let expectedTotal = 0;
        /*if(LSLength !== null){
            for (const item of LSLength) {
                expectedTotal += calculatePrice(item.printSize, item.frameStyle, item.frameWidth, item.matWidth);
            }
        } else {
            expectedTotal = 0;
        }*/
        totalPrice.innerHTML = expectedTotal;


        cartTotal.appendChild(totalPriceContainer);
        totalPriceContainer.appendChild(totalPrice);
        cartTotal.appendChild(checkoutButton);
        return cartTotal;
    }
}

class Storage{
    static 

    static 

}

document.addEventListener("DOMContentLoaded",()=>{

    
    const urlParams = new URLSearchParams( window.location.search);

    /*if (urlParams.has('objectID')) {
        objectID = urlParams.get('objectID');
    }*/
    
    /*const cart = new Cart();

    cart.getItems().then(cart => {
        Storage.saveProducts(cart);
    });    */
});






















function init() {

    const shoppingCart = JSON.parse(localStorage.getItem('cart'));
    if(shoppingCart!==null && shoppingCart!== undefined && shoppingCart !== "") {
        const cartTotalItem = document.getElementById('cart-total-items');
        cartTotalItem.innerHTML = shoppingCart.length;


        let totalCont = Image.generateHTMLCartTotal();
        document.getElementById('cart').appendChild(totalCont);

        for (let i = 0; i < shoppingCart.length; i++) 
    }
}

init();const URL = 'https://collectionapi.metmuseum.org';
const GET_OBJECT_API = '/public/collection/v1/objects';

const CURRENT_URL = window.location.href;
let configObjectID = "";
const CONFIG_SIDE = "/config.html";
const SEARCH_SIDE = "./search.html";
const CART_SIDE = "/cart.html";
let SERVER_URL;

const previewImage = document.getElementById('preview-image');
const label = document.getElementById('image-label');
let price = document.getElementById('price');
let total_size = document.getElementById('total-size');
let print_size_s = document.getElementById('print-size-s');
let print_size_m = document.getElementById('print-size-m');
let print_size_l = document.getElementById('print-size-l');

let frame_style_classic = document.getElementById('frame-style-classic');
let frame_style_natural = document.getElementById('frame-style-natural');
let frame_style_shabby = document.getElementById('frame-style-shabby');
let frame_style_elegant = document.getElementById('frame-style-elegant');

let frameRange = document.querySelector('input[type="range"][id="frameWidthR"]');
let matRange = document.querySelector('input[type="range"][id="matWidthR"]');

let mat_color_ivory = document.getElementById('mat-color-ivory');
let mat_color_mint = document.getElementById('mat-color-mint');
let mat_color_wine = document.getElementById('mat-color-wine');
let mat_color_indigo = document.getElementById('mat-color-indigo');
let mat_color_coal = document.getElementById('mat-color-coal');

const preview_container = document.getElementById('preview-container');


class Image {

    static 

    static 
}







































function loadLocalStorageImages(key) {
    let pictures = localStorage["objectID:"+key].split(';;;');
    const image = JSON.parse(pictures);
    getSearchIDsSuccessCallback(image, key);
}

function init() {
    const shoppingCart = JSON.parse(localStorage.getItem('cart'));
    if(shoppingCart!==null && shoppingCart!== undefined && shoppingCart !== "") {
        document.getElementById('cart-link').innerHTML = "Cart (" +shoppingCart.length + ")";
    }


    let newUrl = window.location.href;
    if (newUrl.indexOf('?') !== -1) {
        newUrl = newUrl.substring(0, newUrl.indexOf('?'));
    }
    SERVER_URL = newUrl.substring(0, newUrl.length - CONFIG_SIDE.length);
    let objectID = '';

    const urlParams = new URLSearchParams(window.location.search);

    {
        if (urlParams.has('objectID')) {
            objectID = urlParams.get('objectID');
        }

    if (urlParams.has('printSize')) 
     if(urlParams.has('frameStyle'))
     
     if(urlParams.has('frameWidth'))
    if(urlParams.has('matColor'))
    if(urlParams.has('matWidth'))

    }
    if (objectID !== undefined && objectID != null && objectID !== '') {
        console.log('search with "' + objectID + '" as parameter');
        configObjectID = objectID;

        const currentUrlRequest = URL + GET_OBJECT_API + "/" + objectID;

        if (localStorage["objectID:"+objectID] && localStorage["objectID:"+objectID] !== "") {
            loadLocalStorageImages(objectID);
        }


    }
}

init();
const URL = 'https://collectionapi.metmuseum.org';
const SEARCH_API = '/public/collection/v1/search';
const GET_OBJECT_API = '/public/collection/v1/objects';
const CONFIG_SIDE = "/config.html";
const SEARCH_SIDE = "/search.html";
let SERVER_URL;
const CURRENT_URL = window.location.href;

const searchInfo = document.getElementById('search-info');
const gallery = document.getElementById('gallery');

let foundPictureAmount = 0;
let searchTerm = "";
let urlHasParam = false;

class Image {
    static HtmlNumber = 0;
    constructor(id, title, artist, date, link, src) {
        this.id = id;
        this.title = title;
        this.artist = artist;
        this.date = date;
        this.link = link;
        this.src = src;
        this.htmlNumber = Image.HtmlNumber++;
    }

    static fillObjectFromImageResponse(responsePicture) {
        let image = new Image();
        image.id = responsePicture.objectID;
        image.title = responsePicture.title;
        image.artist = responsePicture.artistDisplayName;
        image.date = responsePicture.objectDate;
        if (urlHasParam) {
            image.link = SERVER_URL + CONFIG_SIDE + "?objectID=" + responsePicture.objectID;
        }
        image.src = responsePicture.primaryImageSmall;
        return image;
    }


    static generateHTMLImage (image) {
        const outerContainer = document.createElement('div');
        outerContainer.className = "thumb";
        const thumbnailUrlContainer = document.createElement('a');
        thumbnailUrlContainer.href = image.link;
        thumbnailUrlContainer.id = "object-" + image.id;

        const img = document.createElement('img');
        img.src = image.src;

        const innerContainer = document.createElement('div');
        innerContainer.className = 'museum-label';
        const imgArtist = document.createElement('span');
        imgArtist.innerText = image.artist;
        imgArtist.className = "artist";
        const imgTitle = document.createElement('span');
        imgTitle.innerText = image.title + ', ';
        imgTitle.className = "title";
        const imgDate = document.createElement('span');
        imgDate.innerText = image.date;
        imgDate.className = "date";

        outerContainer.appendChild(thumbnailUrlContainer);
        thumbnailUrlContainer.appendChild(img);
        thumbnailUrlContainer.appendChild(innerContainer);

        innerContainer.appendChild(imgArtist);
        innerContainer.appendChild(imgTitle);
        innerContainer.appendChild(imgDate);

        return outerContainer;
    }
}

async function getRequest(url, callback, callbackObject) {
    try {
        const response = await fetch(url);
        const rawData = await response.json();
        callback(rawData, callbackObject);
        return rawData;
    }}



function getPictureObjectSuccessCallback(response, localStorageKey) {
    let image = Image.fillObjectFromImageResponse(response);
    if (localStorageKey) 
    let htmlImage = Image.generateHTMLImage(image);
    gallery.appendChild(htmlImage);
}



function init() {
    const shoppingCart = JSON.parse(localStorage.getItem('cart'));
    if(shoppingCart!==null && shoppingCart!== undefined && shoppingCart !== "") {
        document.getElementById('cart-link').innerHTML = "Cart (" +shoppingCart.length + ")";
    }

    let newUrl = window.location.href;
    if (newUrl.indexOf('?') !== -1) 
    SERVER_URL = newUrl.substring(0, newUrl.length - SEARCH_SIDE.length);


    let url = URL + SEARCH_API + '?hasImages=true';
    let q;
    /* const form = document.querySelector('form.search-form');--- ursprüngliche version inclusive versuche um fragwürdige Tests zu satisfyen
        form.addEventListener('submit', event => {
            event.preventDefault();
            if (searchInput.value) {
                searchInput.style.border = '0px';
                searchTerm = searchInput.value.replace("+", " ");
                searchInfo.innerHTML = 'Searching for “' + searchTerm + '”...';
                getRequest(urlRequest + '&q=' + searchTerm, doNothing).then(
                    (response) => {
                        getSearchIDsSuccessCallback(response);
                    })
            } else {
                searchInput.style.border = '1px solid red';
            }
        });*/

    const queryString = window.location.search;
    const urlParams = new URLSearchParams(queryString);

    if (urlHasParam.toString() !== "") {
        urlHasParam = true;
    }
    if (urlParams.has('q')) 

    if (queryString !== '' )  else {
        foundPictureAmount = 12;
        let defaultPics =  [39799, 459055, 437853, 435809, 436535, 360018, 634108, 459080, 435882, 271890, 459054, 436105]

        for (let i = 0; i < defaultPics.length && i < 100; i++) {
            let urlRequest = URL + GET_OBJECT_API + '/' + defaultPics[i];

            getRequest(urlRequest, getPictureObjectSuccessCallback);
        }
    }
}

init();