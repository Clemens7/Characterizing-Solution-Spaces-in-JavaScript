


        import {calculatePrice, render} from "./frame.js";

        const wrapper = document.getElementById('cart');

        let sumTotal = 0;


        const checkoutButton = document.getElementById('checkout-button');
        const total = document.getElementById('price-total');
        const empty = document.createElement('h1');
        empty.innerHTML = 'There are no items in your shopping cart. <br><br>';
        const cartLink = document.getElementById('cart-link');
        const objectAPI = 'https://collectionapi.metmuseum.org/public/collection/v1/objects/';




        checkoutButton.addEventListener('click', );

        document.addEventListener('DOMContentLoaded', event => {

            if (!isEmpty()) {
                showItems();
            }

        });


        function isEmpty() {
            console.log(JSON.parse(localStorage.getItem('cart')));
            if (localStorage.getItem('cart') == null || JSON.parse(localStorage.getItem('cart')).length === 0) 
            return false;
        }


        async function getImageObject(imgID) {
            let picture = JSON.parse(localStorage.getItem(imgID));

            if (!picture) 
            return picture;
        }


        async function showItems() {
            const currentCart = JSON.parse(localStorage.getItem('cart'));
            cartLink.innerText = "Cart (" + currentCart.length + ")"
            for (let object of currentCart) {

                let img = await getImageObject(object.objectID);

                console.log(object.printSize);
                console.log(object.frameStyle);
                console.log(object.frameWidth);
                console.log(object.matWidth);
                let imgPrice = calculatePrice(object.printSize, object.frameStyle, object.frameWidth, object.matWidth);
                sumTotal += imgPrice;
                total.textContent = sumTotal.toFixed(2) + "";

                const cartItem = document.createElement('div');
                cartItem.className = 'cart-item';

                const picture = document.createElement('img');
                picture.className = "cart-thumb";
                picture.setAttribute("src", img.primaryImageSmall);
                picture.setAttribute("id", "preview-" + img.objectID);

                const preview = document.createElement('div');
                preview.className = "cart-preview";
                preview.setAttribute("id", "preview-container-" + img.objectID);

                picture.addEventListener('load', () => render(picture, preview, object.printSize, object.frameStyle, object.frameWidth, object.matColor, object.matWidth));

                const link = document.createElement('a');
                link.setAttribute("href", "config.html?objectID=" + img.objectID + "&printSize=" + object.printSize + "&frameStyle=" + object.frameStyle + "&frameWidth=" + object.frameWidth + "&matColor=" + object.matColor + "&matWidth=" + object.matWidth);

                link.appendChild(picture);
                preview.appendChild(link);
                cartItem.appendChild(preview);

                const label = document.createElement('div');
                label.className = 'museum-label';
                label.innerHTML = `<div class="cart-price">€ <span id="price-${img.objectID}">${imgPrice.toFixed(2)}</span></div>`;

                const info = document.createElement('div');
                info.innerHTML = `
                    <span class="artist">${img.artistDisplayName}</span>
                    <span class="title">${img.title}</span>,
                    <span class="date">${img.objectDate}</span>
                    <br><br>`;

                let pSize = "";
                if (object.printSize == "S")
                    pSize = "Small";
                else if (object.printSize == "M")
                    pSize = "Medium";

                let descr = pSize + " print in a " + object.frameWidth/10 + " cm " + object.frameStyle + " frame";
                if (object.matWidth != 0)
                    descr += " with a " + object.matWidth/10 + " cm " + object.matColor + " mat";
                descr += ".";

                const description = document.createElement('span');
                description.className = "frame-description";
                description.innerText = descr;
                info.appendChild(description);
                label.insertBefore(info, label.firstChild);

                console.log(description.innerText);


                const removeButton = document.createElement('button');
                removeButton.className = 'cart-remove';
                removeButton.onclick = ;

                label.appendChild(removeButton);
                cartItem.appendChild(label);
                wrapper.insertBefore(cartItem, wrapper.firstChild);

            }
        }

        

        

    

      import {render, calculatePrice} from "./frame.js";

      const cartLink = document.getElementById("cart-link");
      const objectAPI = 'https://collectionapi.metmuseum.org/public/collection/v1/objects/';
      const frameWidthInput = document.getElementsByName("frameWidth")[0];
      const frameWidthSlider = document.getElementsByName("frameWidthR")[0];
      const matWidthInput = document.getElementsByName("matWidth")[0];
      const matWidthSlider = document.getElementsByName("matWidthR")[0];
      const previewContainer = document.getElementById("preview-container");
      const previewImage = document.getElementById("preview-image");
      const imgLabel = document.getElementById("image-label");
      const printSizes = document.getElementById("print-sizes");
      const price = document.getElementById("price");
      const sLabel = document.getElementById("print-size-s-label");
      const mLabel = document.getElementById("print-size-m-label");
      const lLabel = document.getElementById("print-size-l-label");

      const frameStyles = document.getElementsByName("frameStyle");

      const matColors = document.getElementsByName("matColor");

      const addToCart = document.getElementById("add-cart");

      addToCart.addEventListener('click', );

      matColors.forEach(matColor=>{matColor.addEventListener('change', )});

      frameStyles.forEach(frameStyle=>{frameStyle.addEventListener('change', )});

      printSizes.addEventListener('change', );

      frameWidthInput.addEventListener('change', );

      frameWidthSlider.addEventListener('change', );

      matWidthInput.addEventListener('change', );

      matWidthSlider.addEventListener('change', );


      async function getImageObject(imgID) {
          let picture = JSON.parse(localStorage.getItem(imgID));
          if (!picture) 
          return picture;
      }

      document.addEventListener('DOMContentLoaded', async event => {

          console.log(parseFloat((0.3551).toFixed(1)));

          const cart = localStorage.getItem('cart');
          if (!cart) {
              cartLink.innerText = "Cart";
          }

          if(getParameterByName("objectID")==null)

          const img = await getImageObject(getParameterByName("objectID"));
          const picture = img.primaryImageSmall;


          if (picture) {
              if (getParameterByName("printSize")) 

              if (getParameterByName("frameStyle"))
                  

              if (getParameterByName("frameWidth")) 

              if(getParameterByName("matColor"))
                  

              if(getParameterByName("matWidth")) 
              previewImage.setAttribute("src", picture);
              previewImage.addEventListener('load', ()=> {
                  updateImage();
              });

              imgLabel.innerHTML = `
                    <span class="artist">${img.artistDisplayName}</span>
                    <span class="title">${img.title}</span>,
                    <span class="date">${img.objectDate}</span>`;

          }
      });

      function updateImage(){
          render(previewImage, previewContainer, getCheckedRadio("printSize"), getCheckedRadio("frameStyle"), frameWidthInput.value*10, getCheckedRadio("matColor"), matWidthInput.value*10);
          price.innerText = "€ "+calculatePrice(getCheckedRadio("printSize"), getCheckedRadio("frameStyle"), frameWidthInput.value*10, matWidthInput.value*10).toFixed(2);
      }

      function getParameterByName(name) {
          const url = window.location.href;
          name = name.replace(/[\[\]]/g, '\\$&');
          var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
              results = regex.exec(url);
          if (!results) return null;
          if (!results[2]) 
          return decodeURIComponent(results[2].replace(/\+/g, ' '));
      }

      function getCheckedRadio(rbGroupName) {
          var rb = document.getElementsByName(rbGroupName);

          for (let i = 0; i < rb.length; i++) {
              if (rb[i].checked) {
                  return rb[i].value;
              }
          }}



  export function getPrintSizes(img) {
    let S = [297, 297]; // A4
    let M = [420, 420]; // A3
    let L = [594, 594]; // A2

    const w = img.naturalWidth;
    const h = img.naturalHeight;

    if (h > w) {
        S[0] = Math.floor(w * S[1] / h);
        M[0] = Math.floor(w * M[1] / h);
        L[0] = Math.floor(w * L[1] / h);
    } else {
        S[1] = Math.floor(h * S[0] / w);
        M[1] = Math.floor(h * M[0] / w);
        L[1] = Math.floor(h * L[0] / w);
    }

    return { S: S, M: M, L: L };
}

export function render(img, container, printSize, frameStyle, frameWidth, matColor, matWidth) {
    const printSizes = getPrintSizes(img);
    const w = printSizes[printSize][0];
    const h = printSizes[printSize][1];

    let x;
    if (w > h) {
        x = container.offsetWidth / (w + 2 * matWidth + 2 * frameWidth);
    } else {
        x = container.offsetHeight / (h + 2 * matWidth + 2 * frameWidth);
    }

    const frameImageSlices = {
        classic: 115,
        natural: 75,
        shabby: 120,
        elegant: 107
    };

    const matColors = {
        ivory: '#fffff0',
        mint: '#e0e6d4',
        wine: '#50222d',
        indigo: '#29434c',
        coal: '#333a3d',
    };

    img.style.boxSizing = 'border-box';
    img.width = (w + 2 * matWidth + 2 * frameWidth) * x;
    img.height = (h + 2 * matWidth + 2 * frameWidth) * x;
    img.style.borderImageSource = `url(frame-styles/${frameStyle}.jpg)`;
    img.style.borderImageSlice = frameImageSlices[frameStyle];
    img.style.borderWidth = `${frameWidth * x}px`;
    img.style.backgroundColor = matColors[matColor];
    img.style.padding = `${matWidth * x}px`;
}

export function calculatePrice(printSize, frameStyle, frameWidth, matWidth) {
    let price = 30.0;

    const stylePrices = {
        classic: 1.00,
        natural: 0.80,
        shabby: 0.90,
        elegant: 0.85
    };

    const sizePrices = {
        S: 1.0,
        M: 2.0,
        L: 3.5
    };

    let woodCost = stylePrices[frameStyle] * (frameWidth/10);
    let matCost = 0.05 * (matWidth/10);

    price += woodCost + matCost;

    return (Math.round((price*sizePrices[printSize] + Number.EPSILON) * 100) / 100);
}


        const searchForm = document.getElementById('search-form');
        const searchButton = document.getElementById('search-button');
        const searchInput = document.getElementById('search');
        const searchInfo = document.getElementById('search-info');
        const standardSearchInfo = 'Search our collection of more than 400,000 artworks.';
        const metAPIURL = 'https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&q=';
        const objectAPI = 'https://collectionapi.metmuseum.org/public/collection/v1/objects/';
        const imageGallery = document.getElementById('gallery');
        const cartLink = document.getElementById("cart-link");

        document.addEventListener('DOMContentLoaded', event => {
            const cart = localStorage.getItem('cart');
            if(!cart){
                cartLink.innerText = "Cart";
            }


          searchInput.value = '';

          const params = (new URL(document.location)).searchParams;
          const query = params.get('q');
          console.log(query);

          if(!query) 

          const q = serializeQuery(query);

          startSearch(query,q);

        });

        searchForm.addEventListener('submit', );

        function serializeQuery(query){

          let query_parts = query.split(' ');
          let q = '';

          for( let part of query_parts){
            q+= part + '+';
          }

          q = q.substr(0,q.length-1);

          return q;
        }

        function startSearch(query, q){
          searchInfo.innerHTML = `Searching for “${query}”...`;
          console.log('This is the query q: ' + q );

          imageGallery.innerHTML = '';
          if(q != ''){
            console.log('calling search Images');
            searchImages(query,q);
          }

        }


        async function fetchImageData(id){
          console.log('checking if picture is in local storage');
          let picture = JSON.parse(localStorage.getItem(id));

          console.log(picture);

          if(!picture) 

          return picture;
        }

        async function searchImages(query,q){

          let response = await fetch(metAPIURL + q);
          let data = await response.json();
          let artwork = 'artwork';

          if(data.total != 1){
            artwork += 's';
          }



          let ids = data.objectIDs;

          if (!ids) 


          createPromises(ids,`Found ${data.total} ${artwork} for “${query}”`);


        }

        function createPromises(ids, searchString = standardSearchInfo){
          let promises = new Array();

          let i = 0;
          for(let id of ids){
            let p = new Promise((resolve,reject) => resolve(fetchImageData(id)));
            promises.push(p);
            i++;
            if (i == 100) 
          }


          console.log('resolving promises');

          Promise.all(promises)
                  .then((results) => {
                    for(let i = 0; i < results.length && i < 100; i++ ){
                      displayImage(results[i]);
                    }
                  }).then(() => {
            searchInfo.innerHTML = searchString;
          });
        }

        function displayImage(picture){

          const div = document.createElement('div');
          div.className = 'thumb';
          const link = document.createElement('a');
          link.id = 'object-' + picture.objectID;
          link.href = './config.html?objectID=' + picture.objectID;

          div.appendChild(link);

          imageGallery.appendChild(div);

          const image = document.createElement('img');
          image.src = picture.primaryImageSmall;
          image.id = 'object-image-' + picture.objectID;
          image.alt = '';
          image.src = picture.primaryImageSmall;


          const museumLabel = document.createElement('div');
          museumLabel.className = 'museum-label';
          museumLabel.innerHTML = `<span class="artist">${picture.artistDisplayName}</span>
            <span class="title">${picture.title}</span>,
            <span class="date">${picture.objectDate}</span>`;


          link.appendChild(image);
          link.appendChild(museumLabel);
        }





    