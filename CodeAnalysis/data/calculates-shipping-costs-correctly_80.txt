export class Artwork {


    

}import {Artwork} from "./artwork.js";
import {Cart} from "./cart.js";



export 

export 

function getCartStorageKey() {
    return "cart";
}

export function retrieveCart() {
    let key = getCartStorageKey();
    if (key in localStorage) {
        let cart = new Cart(JSON.parse(localStorage[key]));
        console.log(`Stored cart has ${cart.items.length} items`);
        return cart;
    }
}

export 

import * as Cache from './cache.js';
import {calculatePrice} from './frame.js';

export class Cart {

    constructor(items) {
        this.items = items;
    }

    isEmpty() {
        return this.getItemCount() === 0;
    }

    getItemCount(){
        if(this.items === undefined)
            
        return this.items.length;
    }

    

    getTotalPrice() {
        let total = 0;
        this.items.map(item => {
            let itemPrice = calculatePrice(item.printSize, item.frameStyle, item.frameWidth, item.matWidth);
            total += itemPrice * 100;
        });
        return total;
    }
}
        import * as Util from './util.js';
        import * as Cache from './cache.js';

        if (Cache.retrieveCart().isEmpty()) 

        let destinations;

        async function fetchShippingCosts() {
            const response = await fetch("https://web-engineering.big.tuwien.ac.at/s20/a2/shipping");
            const rawData = await response.json();
            destinations = await rawData.destinations;
            console.log(destinations);
            destinations.map(destination => {
                const option = document.createElement("option");
                option.value = destination.country;
                option.innerText = destination.displayName;
                document.getElementById("country").append(option);
            });
        }

        document.getElementById("price-subtotal").innerText = Util.formatPrice(Cache.retrieveCart().getTotalPrice());

        fetchShippingCosts();

        let select = document.getElementById("country");
        select.addEventListener('change', evt => {
            let cart = Cache.retrieveCart();
            let selectedOption = select.options[select.selectedIndex].value;
            let destination = destinations.find(value => value.country === selectedOption);
            document.getElementById("price-shipping").innerText = Util.formatPrice(destination.cost);
            document.getElementById("price-total").innerText = Util.formatPrice(cart.getTotalPrice() + destination.cost);
        });


    export 

export 

export function calculatePrice(printSize, frameStyle, frameWidth, matWidth) {
    let price = 30.0;
    switch (frameStyle) {
        case 'classic':
            price += frameWidth * 0.1;
            break;
        case 'natural':
            price += frameWidth * 0.08;
            break;
        
        
    }
    price += matWidth * 0.005;
    switch (printSize) {
        
        case 'M':
            price *= 2;
            break;
        case 'L':
            price *= 3.5;
            break;
    }
    return (Math.round((price + Number.EPSILON) * 100) / 100);
}export 

export function formatPrice(cost) {
    return (cost / 100).toFixed(2);
}