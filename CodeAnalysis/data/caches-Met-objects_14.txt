
    import * as frame from './frame.js';

    function getDescription(product) {
      let string = '';

      if (product.printSize == 'L') 
      if (product.printSize == 'M') string = 'Medium';
      if (product.printSize == 'S') string = 'Small';

      string += ' print in a ' + (product.frameWidth / 10) + ' cm ' + product.frameStyle + ' frame';
      if (product.matWidth && product.matWidth > 0) {
        string += ' with a ' + (product.matWidth / 10) + ' cm ' + product.matColor + ' mat';
      }

      return string + '.';
    }

    async function displayCart(cartData) {
      if (cartData.length == 0)  else {

        let html = '';
        let totalPrice = 0.0;
        for (const product of cartData) {
          let data = await getObject(product.objectID);

          let artist = data.artistDisplayName;
          let title = data.title;
          let date = data.objectDate;
          let image = data.primaryImageSmall;
          let description = getDescription(product);
          let price = frame.calculatePrice(product.printSize, product.frameStyle, product.frameWidth, product.matWidth);
          totalPrice += price;

          html += '<div class="cart-item">';

          html += '<div class="cart-preview" id="preview-container-' + product.objectID + '">';
          html += '<a href="config.html?objectID=' + product.objectID + '&printSize=' + product.printSize + '&frameStyle=' + product.frameStyle + '&frameWidth=' + product.frameWidth + '&matColor=' + product.matColor + '&matWidth=' + product.matWidth + '">';
          html += '<img class="cart-thumb" src="' + image + '" id="preview-' + product.objectID + '" alt="Image of ' + title + '">';
          html += '</a>';
          html += '</div>';

          html += '<div class="museum-label">';
          html += '<div>';
          html += '<span class="artist">' + artist + '</span>';
          html += '<span class="title">' + title + '</span>, ';
          html += '<span class="date">' + date + '</span>';
          html += '<br><br>';
          html += '<span class="frame-description">' + description + '</span>';
          html += '</div>';

          html += '<div class="cart-price">€ <span id="price-' + product.objectID + '">' + price.toFixed(2) + '</span></div>';
          html += '<button class="cart-remove" onclick="removeProductFromCart(' + product.objectID + ')"></button>';
          html += '</div>';

          html += '</div>';

        }

        html += '<div class="cart-total">';
        html += '<label class="price"> Total: € <span id="price-total">' + totalPrice.toFixed(2) + '</span></label>';
        html += '<a href="checkout.html"><button type="button" class="checkout-button" id="checkout-button">Checkout</button></a>';
        html += '</div>';

        document.getElementById('cart').innerHTML = html;

        cartData.map(product => {
          frame.render(
            document.getElementById('preview-' + product.objectID),
            document.getElementById('preview-container-' + product.objectID),
            product.printSize, product.frameStyle, product.frameWidth, product.matColor, product.matWidth
          );
        });
      }
    }

    
    window.removeProductFromCart = removeProductFromCart;


    let cartData = getCartData();
    console.log(cartData);
    updateNavigationText(cartData);
    displayCart(cartData);

  
    import { render, calculatePrice, getPrintSizes } from "./frame.js";

    

    function prepareListeners() {

      let frameWidthInputs = document.getElementById("frame-width-fieldset").getElementsByTagName("input");
      for (const input of frameWidthInputs) {
        input.addEventListener("change", );
      }

      let frameStyleInputs = document.getElementById("frame-style-fieldset").getElementsByTagName("input");
      for (const input of frameStyleInputs) {
        input.addEventListener("click", updatePreview);
      }

      let matWidthInputs = document.getElementById("mat-width-fieldset").getElementsByTagName("input");
      for (const input of matWidthInputs) {
        input.addEventListener("change", );
      }

      let printSizeInputs = document.getElementById("print-size-fieldset").getElementsByTagName("input");
      for (const input of printSizeInputs) {
        input.addEventListener("click", updatePreview);
      }

      let matColorInputs = document.getElementById("mat-color-fieldset").getElementsByTagName("input");
      for (const input of matColorInputs) {
        input.addEventListener("click", updatePreview);
      }

      document.getElementById("config-form").addEventListener("submit", );
    }

    

    function getPrintSize() {
      const img = document.getElementById("preview-image");
      let printS = document.getElementById("print-size-s-label");
      let printM = document.getElementById("print-size-m-label");
      let printL = document.getElementById("print-size-l-label");
      const printSize = getPrintSizes(img);

      printS.innerHTML = `${printSize["S"][0] / 100} x ${printSize["S"][1] / 100} cm`;
      printM.innerHTML = `${printSize["M"][0] / 100} x ${printSize["M"][1] / 100} cm`;
      printL.innerHTML = `${printSize["L"][0] / 100} x ${printSize["L"][1] / 100} cm`;
    }

    function getTotalSize() {
      const size = getRadioValue(document.getElementsByName("printSize"));
      const frameWidth = document.getElementsByName("frameWidth")[0].value;
      const matWidth = document.getElementsByName("matWidth")[0].value;
      const img = document.getElementById("preview-image");
      const printSize = getPrintSizes(img);
      const totalWidth = printSize[size][0] / 100 + 2 * frameWidth + 2 * matWidth;
      const totalHeight = printSize[size][1] / 100 + 2 * frameWidth + 2 * matWidth;

      let total = document.getElementById("total-size");
      total.innerHTML = `${totalWidth} x ${totalHeight} cm`;
    }

    function getRadioValue(radio) {
      for (let i = 0; i < radio.length; i++) {
        if (radio[i].checked)
          return radio[i].value;
      }}

    function updatePreview() {
      const img = document.getElementById('preview-image');
      const container = document.getElementById('preview-container');
      const frameStyle = getRadioValue(document.getElementsByName('frameStyle'));
      const frameWidth = document.getElementsByName('frameWidth')[0].value;
      const printSize = getRadioValue(document.getElementsByName('printSize'));
      const matColor = getRadioValue(document.getElementsByName('matColor'));
      const matWidth = document.getElementsByName('matWidth')[0].value;

      render(img, container, printSize, frameStyle, frameWidth, matColor, matWidth);
      getPrintSize();
      getTotalSize();

      let price = document.getElementById("price");
      price.innerHTML = `€ ${calculatePrice(printSize, frameStyle, frameWidth, matWidth).toFixed(2)}`;
    }

    

    

    function configureFrameConfig(urlParams) {
      if (urlParams.has('printSize')) 

      if (urlParams.has('frameWidth')) 

      if (urlParams.has('frameStyle')) 

      if (urlParams.has('matWidth')) 

      if (urlParams.has('matColor')) 
    }

    async function displayFrameConfig() {
      const urlParams = new URLSearchParams(window.location.search);
      let objectFound = false;
      if (urlParams.has('objectID')) {
        let artResponse = await getObject(urlParams.get('objectID'));
        if (artResponse.title != null) {
          if (artResponse.primaryImageSmall !== "") {
            objectFound = true;
            JSON.stringify(artResponse);
            var image = document.images[1];
            var downloadingImage = new Image();
            downloadingImage.onload = function () {
              image.src = this.src;
              updatePreview();
            };
            downloadingImage.src = artResponse.primaryImageSmall;
            JSON.stringify(artResponse);
            document.getElementById('image-label').innerHTML = artResponse.creditLine + " " + artResponse.artistDisplayName + " " + artResponse.title + " " + artResponse.objectDate;
            configureFrameConfig(urlParams);
          }
        }
      }
      if (!objectFound) 
    }

    


    let cartData = getCartData();
    prepareListeners();
    displayFrameConfig();
    updateNavigationText(cartData);
    updatePreview();

  export function getPrintSizes(img) {
    let S = [297, 297]; // A4
    let M = [420, 420]; // A3
    let L = [594, 594]; // A2

    const w = img.naturalWidth;
    const h = img.naturalHeight;

    if (h > w)  else {
        S[1] = Math.floor(h * S[0] / w);
        M[1] = Math.floor(h * M[0] / w);
        L[1] = Math.floor(h * L[0] / w);
    }

    return { S: S, M: M, L: L };
}

export function render(img, container, printSize, frameStyle, frameWidth, matColor, matWidth) {
    const printSizes = getPrintSizes(img);
    const w = printSizes[printSize][0];
    const h = printSizes[printSize][1];

    let x;
    if (w > h)  else {
        x = container.offsetHeight / (h + 2 * matWidth + 2 * frameWidth);
    }

    const frameImageSlices = {
        classic: 115,
        natural: 75,
        shabby: 120,
        elegant: 107
    };

    const matColors = {
        ivory: '#fffff0',
        mint: '#e0e6d4',
        wine: '#50222d',
        indigo: '#29434c',
        coal: '#333a3d',
    };

    img.style.boxSizing = 'border-box';
    img.width = (w + 2 * matWidth + 2 * frameWidth) * x;
    img.height = (h + 2 * matWidth + 2 * frameWidth) * x;
    img.style.borderImageSource = `url(frame-styles/${frameStyle}.jpg)`;
    img.style.borderImageSlice = frameImageSlices[frameStyle];
    img.style.borderWidth = `${frameWidth * x}px`;
    img.style.backgroundColor = matColors[matColor];
    img.style.padding = `${matWidth * x}px`;
}

export function calculatePrice(printSize, frameStyle, frameWidth, matWidth) {
    let price = 30.00;

    if (frameStyle === "classic")
    if (frameStyle === "natural"){
        price += 0.8*frameWidth + matWidth*0.05;
    }
    if (frameStyle === "shabby")
    if (frameStyle === "elegant"){
        price += 0.85*frameWidth + matWidth*0.05;
    }
    console.log("Price: " + price);

    if (printSize === "M")
        price = price*2;

    if (printSize === "L")
        

    return (Math.round((price + Number.EPSILON) * 100) / 100);
}
function getCartData() {
  let storageData = localStorage.getItem('cart');
  if (!storageData) 
  return JSON.parse(storageData);
}

function updateNavigationText(cartData) {
  if (cartData.length == 0)  else {
    document.getElementById('cart-link').innerText = 'Cart (' + cartData.length + ')';

  }
}




async function getObject(objectID){
  let object;
  if(!localStorage.getItem(objectID)) else {
    return JSON.parse(localStorage.getItem(objectID));
  }
    

    

    async function searchArt(queryString) {

      let searchText = 'Searching for “' + queryString.split('+').join(' ') + '”...';
      document.getElementById("search-info").innerText = searchText;

      let searchResults = await fetchSearchData(queryString);

      displayProducts(searchResults.objectIDs);

      let artworkText = searchResults.total == 1  : " artworks for “";
      searchText = "Found " + searchResults.total + artworkText + queryString.split('+').join(' ') + '”';
      document.getElementById("search-info").innerText = searchText;

    }

    async function fetchSearchData(searchParam) {
      let response = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?q=${searchParam}&hasImages=true`);
      let data = await response.json();
      return data;
    }

    let cartData = getCartData();
    updateNavigationText(cartData);

    var parseQueryString = function () {

      var str = window.location.search;
      var objURL = {};

      str.replace(
        new RegExp("([^?=&]+)(=([^&]*))?", "g"),
        function ($0, $1, $2, $3) {
          objURL[$1] = $3;
        }
      );

      return objURL;
    };

    async function displayProducts(objects) {
      let html = '';

      await Promise.all(objects.map(async (objectID, i) => {
        if (i >= 100) 

        let product = await getObject(objectID);

        html += '<div class="thumb">';
        html += '<a href="config.html?objectID=' + product.objectID + '" id="object-' + i + '">';
        html += '<img src="' + product.primaryImageSmall + '" alt="' + product.title + '" id="object-image-' + i + '">';
        html += '<div class="museum-label">';
        html += '<span class="artist">' + product.artistDisplayName + '</span>';
        html += '<span class="title">' + product.title + '</span>, ';
        html += '<span class="date">' + product.objectDate + '</span>';
        html += '</div>';
        html += '</a>';
        html += '</div>';

        document.getElementById("gallery").innerHTML = html;

      }));
    }



    if (window.location.href.indexOf("?q=") > -1) {
      var params = parseQueryString();
      let queryString = params["q"];
      console.log(queryString);
      searchArt(queryString);
    }

  