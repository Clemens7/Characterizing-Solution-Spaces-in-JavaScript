import * as ShippingCache from '../cache/artmart-shipping-cache.js'

export async function get_all_available_shipping_destinations() {
    const url = api_url();
    try{
        const response = await fetch(url);
        const rawData = await response.json();
        const destinations = await rawData.destinations;

        ShippingCache.store_destinations(destinations);
        return destinations;
    }}

export async function get_shipping_cost(country) {
    let shipping_cost = ShippingCache.retrieve_shipping_cost(country);
    if(shipping_cost){
        return shipping_cost.cost;
    }}

function api_url() {
    const SHIPPING_API_URL = 'https://web-engineering.big.tuwien.ac.at/s20/a2/shipping';
    return SHIPPING_API_URL;
}

import { ShippingCost } from "../artmart-shipping/shipping-cost.js";

export function retrieve_shipping_cost(country) {
    const key = country;
    if(key in localStorage){
        let shipping_cost = JSON.parse(localStorage[key]);
        return shipping_cost;
    }
}

export function store_destinations(destinations) {
    for (const destination of destinations) {
        const key = destination;
        localStorage[key.country] = JSON.stringify(key);
    }
}

export 

export 

export 


    let cart = JSON.parse(localStorage.getItem('cart'));
    if(!cart) 
    if (cart.length == 0) import {calculatePrice} from '../frame.js';
import * as ASApi from '../artmart-shipping/artmart-shipping-api.js';


document.addEventListener('DOMContentLoaded', async () => {
        document.getElementById('pay-button').disabled = true;
        if ('cart' in localStorage) {
            calculate_subtotal_items_costs();
            await get_all_shipping_destinations();
            await calculate_shipping_costs();
            calculate_total_costs();
        }
});

let countrySelect = document.getElementById('country');
countrySelect.addEventListener('change', );

async function get_all_shipping_destinations() {
    let destinations = await ASApi.get_all_available_shipping_destinations();
    let countrySelect = document.getElementById('country');
    for (let destination of destinations) {
        let optionTag = document.createElement('option');
        optionTag.value = destination.country;
        optionTag.innerText = destination.displayName;
        countrySelect.appendChild(optionTag);
    }
}

function calculate_subtotal_items_costs() {
    let sum = 0;
    const cart = JSON.parse(localStorage.getItem('cart'));
    for (const item of cart) {
        let temp = calculatePrice(item.printSize, item.frameStyle, item.frameWidth, item.matWidth);
        if (!isNaN(temp)) {
            sum += temp;
        }
    }
    document.getElementById('price-subtotal').innerHTML = sum.toFixed(2)
}

async function calculate_shipping_costs() {
    let tag = document.getElementById('country');
    let destination = tag.options[tag.selectedIndex].value;
    document.getElementById('price-shipping').innerHTML = (await ASApi.get_shipping_cost(destination) / 100).toFixed(2);
}

function calculate_total_costs() {
    let totalCosts = 0.0;
    totalCosts += Number.parseFloat(document.getElementById('price-subtotal').innerText);
    totalCosts += Number.parseFloat(document.getElementById('price-shipping').innerText);
    document.getElementById('price-total').innerHTML = totalCosts + '';
    enable_button();
}

function enable_button() {
    if (document.getElementById('pay-button').disabled === true) {
        document.getElementById('pay-button').disabled = false;
    }
}export 


export 


export function calculatePrice(printSize, frameStyle, frameWidth, matWidth) {
    let price = 0.0;
    const framePrices = {
        'classic': 1,
        'natural': 0.8,
        'shabby': 0.9,
        'elegant': 0.85
    };
    price += 30;
    price += framePrices[frameStyle] * frameWidth / 10;
    price += 0.05 * matWidth / 10;
    if (printSize === 'M')
        price *= 2;
    else if (printSize === 'L')
        price *= 3.5;

    return parseFloat((Math.round((price + Number.EPSILON) * 100) / 100).toFixed(2));
}
export class ShippingCost{
    
}