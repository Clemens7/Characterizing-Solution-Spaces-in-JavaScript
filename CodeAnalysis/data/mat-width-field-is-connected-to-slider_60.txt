import { calculatePrice, getPrintSizes, render } from './frame.js';

window.onload = async function () {

  var url = new URL(window.location.href);
  var objectId = url.searchParams.get("objectID");
  var printSize = url.searchParams.get("printSize");
  var frameStyle = url.searchParams.get("frameStyle");
  var frameWidth = url.searchParams.get("frameWidth");
  var matColor = url.searchParams.get("matColor");
  var matWidth = url.searchParams.get("matWidth");

  if(objectId == null || objectId == "") 
  if(printSize == null )
    printSize = "M";
  if(frameStyle == null )
    frameStyle = "natural";
  if(frameWidth == null )
    frameWidth = 40
  if(matColor == null )
    matColor = "mint";
  if(matWidth == null )
    matWidth = 55;

  switch(printSize) {
    
    case 'M': document.getElementById("print-size-m").checked = true;
      break;
    
  }

  if(frameWidth != null) {
    if(frameWidth < 20)  else if(frameWidth > 50) 
    document.getElementById("frameWidth").value = Math.round(frameWidth) / 10;
    document.getElementById("rangeFrameWidth").value = Math.round(frameWidth) / 10;
  }

  switch(frameStyle) {
    
    case 'natural': document.getElementById("frame-style-natural").checked = true;
      break;
    
    
  }

  if(matWidth != null) {
    if(matWidth < 0)  else if(matWidth > 100) 
    document.getElementById("matWidth").value = Math.round(matWidth) / 10;
    document.getElementById("rangeMatWidth").value = Math.round(matWidth) / 10;
  }

  switch(matColor) {
    
    case 'mint': document.getElementById("mat-color-mint").checked = true;
      break;
    
    
    
  }

  document.getElementById("price").innerHTML = "€ " + calculatePrice(printSize, frameStyle, frameWidth, matWidth).toFixed(2);

  var shoppingCart2 = [];
  var shoppingCartObjects = JSON.parse(localStorage.getItem('cache'));

  if (shoppingCartObjects == null){
    shoppingCartObjects = [];
  }

  var filteredShoppingCartObjects = shoppingCartObjects.filter();

  if (filteredShoppingCartObjects.length > 1)

  if (filteredShoppingCartObjects.length == 0){
      this.console.error("No object with the given ID");
  }

  var fetchedObject = filteredShoppingCartObjects[0];

  this.console.log(fetchedObject);



  /* if(shoppingCartObjects != null && shoppingCartObjects.objectID == objectId){
    fetchedObject = shoppingCartObjects; */

  if(!fetchedObject) {

    var myResponse = await fetch('https://collectionapi.metmuseum.org/public/collection/v1/objects/' + objectId);
    fetchedObject = await myResponse.json();
    const metObject = {"objectID": objectId, "primaryImageSmall": fetchedObject.primaryImageSmall, "artistDisplayName": fetchedObject.artistDisplayName, "title": fetchedObject.title, "objectDate": fetchedObject.objectDate};
    this.console.log("metObject:",metObject);
    shoppingCartObjects.unshift(metObject);
    localStorage.setItem('cache', JSON.stringify(shoppingCartObjects));

    /* localStorage.setItem('cache', JSON.stringify({'objectID': objectId, 'primaryImageSmall': myObject.primaryImageSmall, 'artistDisplayName': myObject.artistDisplayName, 'title': myObject.title, 'objectDate': myObject.objectDate})); */
  }

  var imgSrc = fetchedObject.primaryImageSmall;

  if(imgSrc == "" || imgSrc == null) 

  var myImg = document.getElementById("preview-image");
  myImg.src = imgSrc;
  document.getElementById("image-label").innerHTML = "<b>" + fetchedObject.artistDisplayName + "</b><br><i>" + fetchedObject.title + "</i>, " + fetchedObject.objectDate;

  myImg.onload = function () {
    var sizes = getPrintSizes(myImg);

    document.getElementById("print-size-s-label").innerHTML = "Small<br>" + sizes.S[0]/10 + " × " + sizes.S[1]/10 + " cm";
    document.getElementById("print-size-m-label").innerHTML = "Medium<br>" + sizes.M[0]/10 + " × " + sizes.M[1]/10 + " cm";
    document.getElementById("print-size-l-label").innerHTML = "Large<br>" + sizes.L[0]/10 + " × " + sizes.L[1]/10 + " cm";

    render(myImg, document.getElementById("preview-container"), printSize, frameStyle, frameWidth, matColor, matWidth);

    var totalWidth = sizes[printSize][0]/10+frameWidth*0.2+matWidth*0.2;
    var totalHeight = sizes[printSize][1]/10+frameWidth*0.2+matWidth*0.2;
    document.getElementById("total-size").innerHTML = totalWidth + " × " + totalHeight + " cm";
  }

  var myCart = JSON.parse(localStorage.getItem('cart'));
  if(myCart.length != 0) }//window.onload done.

document.getElementById("frameWidth").onchange = 

document.getElementById("matWidth").onchange = function () {
  var matWidth = document.getElementById("matWidth").value;
  if(matWidth < 0)  else if(matWidth > 10) 
  document.getElementById("matWidth").value = Math.round(matWidth * 10) / 10;
  document.getElementById("rangeMatWidth").value = Math.round(matWidth * 10) / 10;
  update();
}

document.getElementById('print-size-s').onclick = update;
document.getElementById('print-size-m').onclick = update;
document.getElementById('print-size-l').onclick = update;

document.getElementById('frame-style-classic').onclick = update;
document.getElementById('frame-style-natural').onclick = update;
document.getElementById('frame-style-shabby').onclick = update;
document.getElementById('frame-style-elegant').onclick = update;

document.getElementById('mat-color-ivory').onclick = update;
document.getElementById('mat-color-mint').onclick = update;
document.getElementById('mat-color-wine').onclick = update;
document.getElementById('mat-color-indigo').onclick = update;
document.getElementById('mat-color-coal').onclick = update;

document.getElementById("frameWidth").oninput = 
document.getElementById("rangeFrameWidth").oninput = 

document.getElementById("matWidth").oninput = function () {
  document.getElementById("rangeMatWidth").value = document.getElementById("matWidth").value;
}
document.getElementById("rangeMatWidth").oninput = 

document.getElementById("config-form").onsubmit = 

function update() {
  var checks = getChecks();
  var myImg = document.getElementById("preview-image");
  render(myImg, document.getElementById("preview-container"), checks[0], checks[1], checks[2], checks[3], checks[4]);
  document.getElementById("price").innerHTML = "€ " + calculatePrice(checks[0], checks[1], checks[2], checks[4]).toFixed(2);
  var sizes = getPrintSizes(myImg);

  var totalWidth = (sizes[checks[0]][0]/10+checks[2]*0.2+checks[4]*0.2).toFixed(1);
  var totalHeight = (sizes[checks[0]][1]/10+checks[2]*0.2+checks[4]*0.2).toFixed(1);
  document.getElementById("total-size").innerHTML = totalWidth + " × " + totalHeight + " cm";
}

function getChecks() {
  var size, style, fWidth, mColor, mWidth;
  if(document.getElementById("print-size-s").checked)
    
  else if(document.getElementById("print-size-m").checked)
    size = 'M';

  if(document.getElementById("frame-style-classic").checked)
    
  else if(document.getElementById("frame-style-natural").checked)
    style = 'natural';

  fWidth = document.getElementById("frameWidth").value*10;

  if(document.getElementById("mat-color-ivory").checked)
    
  else if(document.getElementById("mat-color-mint").checked)
    mColor = 'mint';

  mWidth = document.getElementById("matWidth").value*10;

  return [size, style, fWidth, mColor, mWidth];
}
export function getPrintSizes(img) {
    let S = [297, 297]; // A4
    let M = [420, 420]; // A3
    let L = [594, 594]; // A2

    const w = img.naturalWidth;
    const h = img.naturalHeight;

    if (h > w)  else {
        S[1] = Math.floor(h * S[0] / w);
        M[1] = Math.floor(h * M[0] / w);
        L[1] = Math.floor(h * L[0] / w);
    }

    return { S: S, M: M, L: L };
}

export function render(img, container, printSize, frameStyle, frameWidth, matColor, matWidth) {
    const printSizes = getPrintSizes(img);
    const w = printSizes[printSize][0];
    const h = printSizes[printSize][1];

    let x;
    if (w > h) {
        x = container.offsetWidth / (w + 2 * matWidth + 2 * frameWidth);
    }

    const frameImageSlices = {
        classic: 115,
        natural: 75,
        shabby: 120,
        elegant: 107
    };

    const matColors = {
        ivory: '#fffff0',
        mint: '#e0e6d4',
        wine: '#50222d',
        indigo: '#29434c',
        coal: '#333a3d',
    };

    img.style.boxSizing = 'border-box';
    img.width = (w + 2 * matWidth + 2 * frameWidth) * x;
    img.height = (h + 2 * matWidth + 2 * frameWidth) * x;
    img.style.borderImageSource = `url(frame-styles/${frameStyle}.jpg)`;
    img.style.borderImageSlice = frameImageSlices[frameStyle];
    img.style.borderWidth = `${frameWidth * x}px`;
    img.style.backgroundColor = matColors[matColor];
    img.style.padding = `${matWidth * x}px`;
}

export function calculatePrice(printSize, frameStyle, frameWidth, matWidth) {
    let price = 30.00;
    switch(frameStyle){
      
      case 'natural':price+=((frameWidth/10)*0.8); break;
      
      
      
    }
    price+=((matWidth/10)*0.05);
    switch(printSize){
      
      case 'M':price*=2; break;
      
      
    }
    return (Math.round((price + Number.EPSILON) * 100) / 100);
}
