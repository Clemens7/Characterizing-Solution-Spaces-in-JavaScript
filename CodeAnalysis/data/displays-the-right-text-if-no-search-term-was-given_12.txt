export const MET_API = 'https://collectionapi.metmuseum.org/public/collection/v1/'

export const fetchObject = async id => {
  console.log(`Fetch object with id ${id} from API`)
  const request = await fetch(`${MET_API}objects/${id}`)
  const response = await request.json()

  if (response.message)  else {
    return response
  }}

export const getObject = async (id, cache) => {
  return cache.getById(id) || await fetchObject(id)
}

export const getSearchResults = 

class Cache {
  constructor() {
    this.objects = JSON.parse(localStorage.getItem('cache') ||Â '[]')
  }

  getById(id) {
    return this.objects.find()
  }

  
}

export const cache = new Cache()

    import { getSearchResults, getObject, cache } from '/met-api.js'

    const search = 

    const showHighlights = async () => {
      const request = await fetch(`/highlights.json`)
      const { highlights: ids } = await request.json()
      const results = ids.map(async id => getObject(id, cache))

      Promise.all(results).then()
    }

    const renderArtworks = 

    document.querySelector('.search-form').addEventListener('submit', )

    const term = new URL(window.location).searchParams.get('q')
    if (term)  else {
      showHighlights()
    }

    let cart = JSON.parse(localStorage.getItem('cart'));

    if(cart != null 


  