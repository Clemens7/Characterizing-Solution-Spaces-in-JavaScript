/*
store Artworks in Cart

export const CART = {
    KEY: 'cart',
    contents: [],
    init() {
        let _contents = localStorage.getItem(CART.KEY);
        if (_contents) {
            CART.contents = JSON.parse(_contents);
        }
    },
    ,
    ,
    ,
    ,
    
};

/*
Cache responses from the Met API's Object endpoint
export const localPictures = {
    KEY: 'pictures',
    contents: [],
    init() {
        let _contents = localStorage.getItem(localPictures.KEY);
        if (_contents) {
            localPictures.contents = JSON.parse(_contents);
        }
    },
    ,
    ,

    ,

    ,
};
import * as DOM from './dom-helper.js';

export class PreviewContainer {
    

    


    
}import { CART } from './artmart-cache.js';

CART.init();

export function setCartCount() {
    if (CART.isEmpty()) {
        document.getElementById('cart-link').innerText = 'Cart';
    }
}import * as Frame from '../frame.js';
import {PreviewContainer} from './cart-dom.js';
import * as SearchAPI from './search-api.js'
import {CART} from "./artmart-cache.js";
import {localPictures} from './artmart-cache.js ';

(function () {
    CART.init();
    console.log(CART);
    localPictures.init();
    if (CART.contents.length == 0) {
        noCartItemsHTML();
    }
})();






















function noCartItemsHTML() {
    let main = document.getElementsByTagName("main")[0];
    main.insertBefore(document.createElement("h2"), document.getElementById('cart'));
    document.getElementsByTagName("h2")[0].innerText = "There are no items in your shopping cart.";
    document.getElementById("checkout-button").setAttribute("disabled", "");
}

export class Picture {
    
}

export class Artwork {
    
}
export 

export 

export 
export 

export 

export 
import { Picture } from './datastructures.js';

export 



export 
import { Picture } from './datastructures.js';
import * as DOM from './dom-helper.js';

export class ResultDocumentContainer {
    constructor(containerID = 'gallery') {
        this.container = document.getElementById(containerID);
        if (!this.container) 
    }

    clear() {
        this.container.innerHTML = '';
    }

    addResultToDocument(result) {
        this.container.appendChild(createResultElement(result));

        function createResultElement(result) {
            return DOM.container([
                DOM.setAttributes(DOM.container([
                    DOM.setAttributes(document.createElement('img'), { src: result.image_small }),
                    DOM.container([
                        DOM.textElement('span', result.artist, 'artist'),
                        DOM.textElement('span', `${result.title}, `, 'title'),
                        DOM.textElement('span', result.date, 'date')
                    ], 'div', 'museum-label'),
                ], 'a'), { id: `object-${result.id}`, href: `./config.html?objectID=${result.id}` })
            ], 'div', 'thumb');
        }
    }
}
    import { Picture } from './datastructures.js';
    import { ResultDocumentContainer } from './search-result-dom.js';
    import * as SearchAPI from './search-api.js';
    import { localPictures } from './artmart-cache.js ';
    import { setCartCount } from './cart-number.js';

    localPictures.init();

    

    async function pictureHighlights() {
        const resultContainer = new ResultDocumentContainer();
        resultContainer.clear();

        const url = './highlights.json';
        let pictures = [];
        try {
            const response = await fetch(url);
            const rawData = await response.json();
            const responsePicturesIDs = await rawData.highlights;

            if (!responsePicturesIDs)  else {
                for (let i = 0; i < 100 && i < responsePicturesIDs.length; i++) {
                    let picture = localPictures.retrieve(responsePicturesIDs[i])[0];

                    if (typeof picture == 'undefined')  else {
                        pictures.push(picture);
                        resultContainer.addResultToDocument(picture);
                    }
                }
            }
        } 
    }


    document.addEventListener('DOMContentLoaded', event => {
        const param = (new URL(document.location)).searchParams;
        const searchQuery = param.get('q');

        setCartCount();

        if (!searchQuery) {
            pictureHighlights();
            return;
        }})

    const form = document.querySelector('.search-form');
    form.addEventListener('submit', 