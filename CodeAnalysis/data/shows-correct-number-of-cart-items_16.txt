import { cache } from "./cache.js";

class ArtService {

    constructor() {
        this.museumUrl = "https://collectionapi.metmuseum.org/public/collection/v1";
        this.shippingUrl = "https://web-engineering.big.tuwien.ac.at/s20/a2";
    }

    getShipping = 

    getArtObject = 

    getArtObjectPromises = 
    
    getArtObjects = 

    search = 

    getHighlightObjectPromises = 

    getQueryParams = 

}

export class ShippingInfo {
    
}

export class ArtObject {
    
}

export const artService = new ArtService();class Cache {

    load = function (key) {
        if (key in localStorage) {
            return JSON.parse(localStorage[key]);
        }
    }

    store = 

    addToCart = 

    removeFromCart = 

    clearCart = 

    getCartItems = function () {
        const cart = this.load("cart");

        return cart ? cart ;
    }

    cartLength = 
}

export const cache = new Cache();import { artService } from "./artService.js";
import { cache } from "./cache.js";
import * as domHelper from "./dom-helper.js"
import * as frame from "./frame.js"
import * as header from "./header.js"

function loadItems() {
    const cartItems = cache.getCartItems();
    if(cartItems.length > 0)
    else{
        setEmptyCartMessage();
    }
}

function setEmptyCartMessage(){
    const cart = document.getElementById("cart");
    let textNode = domHelper.textElement("div","There are no items in your shopping cart.");
    domHelper.setAttributes(textNode,{"style":"padding: 2rem;"})
    cart.prepend(textNode);

    const button = document.getElementById("checkout-button");
    button.disabled = true;
}







loadItems();import { artService } from "./artService.js";
import { cache } from "./cache.js";
import * as domHelper from "./dom-helper.js"
import * as frame from "./frame.js";


const frameWidth = document.getElementById("frameWidth");
const frameWidthR = document.getElementById("frameWidthR");
const matWidth = document.getElementById("matWidth");
const matWidthR = document.getElementById("matWidthR");
const frameStyleRadios = document.getElementsByName("frameStyle");
let selectedFrameStyle = "natural";
const matColorRadios = document.getElementsByName("matColor");
let selectedMatColor = "mint";
const printSizeRadios = document.getElementsByName("printSize");
let selectedPrintSize = "M";
const previewImage = document.getElementById("preview-image");
const previewContainer = document.getElementById("preview-container");
const previewImageLabel = document.getElementById("image-label");
 const price = document.getElementById("price");
 const totalSize = document.getElementById("total-size");
 const addToCartButton = document.getElementById("buy");


function addEventListeners(){
    frameWidth.addEventListener("change", , false)
    frameWidthR.addEventListener("input", , false)

    matWidth.addEventListener("change", , false)
    matWidthR.addEventListener("input", , false)


    frameStyleRadios.forEach(
        frameStyle => frameStyle.addEventListener("input", , false)
    );

    matColorRadios.forEach(
        matColor => matColor.addEventListener("input", , false)
    );

    printSizeRadios.forEach(
        printSize => printSize.addEventListener("input", , false)
    );

    previewImage.addEventListener("load", function(){
        setSizes(previewImage);
        renderImage();
    }, false);

    addToCartButton.addEventListener("click", )
} 






function renderImage(){
   frame.render(previewImage, previewContainer, selectedPrintSize, selectedFrameStyle, frameWidth.value*10, selectedMatColor, matWidth.value*10)
   price.innerText = "€ " + frame.calculatePrice(selectedPrintSize, selectedFrameStyle, frameWidth.value*10, matWidth.value*10).toFixed(2);
   calculateTotalSize();
}

function calculateTotalSize(){
    const sizes = frame.getPrintSizes(previewImage);

    let totalWidth = 2 * frameWidth.value + 2 * matWidth.value;
    let totalHeight = 2 * frameWidth.value + 2 * matWidth.value;
    
    totalWidth +=  sizes[selectedPrintSize][0]/10;
    totalHeight +=  sizes[selectedPrintSize][1]/10;

    totalWidth = (Math.round((totalWidth + Number.EPSILON) * 100) / 100);
    totalHeight = (Math.round((totalHeight + Number.EPSILON) * 100) / 100);

    totalSize.innerHTML = totalWidth + " × " + totalHeight + " cm";
}

function setSizes(){
    const sizes = frame.getPrintSizes(previewImage);

    document.getElementById("print-size-s-label").innerHTML = "Small<br>" + sizes.S[0]/10 +" × " + sizes.S[1]/10 + " cm";
    document.getElementById("print-size-m-label").innerHTML = "Medium<br>" + sizes.M[0]/10 +" × " + sizes.M[1]/10 + " cm";
    document.getElementById("print-size-l-label").innerHTML = "Large<br>" + sizes.L[0]/10 +" × " + sizes.L[1]/10 + " cm";
}

async function loadImage(objectID){
    const image = await artService.getArtObject(objectID);
    
    if(!image.objectID)
    

    domHelper.setAttributes(previewImage, {
        "src": image.imgUrl, 
        "title": image.title,
        "alt": image.title});
    previewImage.dataset.objectid = image.objectID;

    
    createImageDescription(image);
};

function createImageDescription(artObject){

    const artist = document.createElement('span');
    artist.setAttribute('class', 'artist');
    artist.innerText = artObject.artist;

    const title = document.createElement('span');
    title.setAttribute('class', 'title');
    title.innerText = artObject.title;

    const date = document.createElement('span');
    date.setAttribute('class', 'date');
    date.innerText = artObject.date;

    previewImageLabel.appendChild(artist);
    previewImageLabel.appendChild(title);
    previewImageLabel.append(' , ');
    previewImageLabel.appendChild(date);

};



function setQueryParams(){
    const params = artService.getQueryParams("objectID", "printSize", "frameWidth", "frameStyle", "matWidth", "matColor");


    for(let param in params){
        if(params[param])
            params[param] = params[param].toLowerCase() 
    }

    if(params.printSize)

    if(params.frameWidth)

    if(params.matWidth)

    if(params.frameStyle)

    if(params.matColor)

    loadImage(params.objectID);
}

setQueryParams();

addEventListeners();



export 

export function setAttributes(element, attributes) {
    for(let key in attributes) {
        if(typeof(attributes[key]) === 'object')  else {
            element[key] = attributes[key];
        }
    }
    return element;
}

export function textElement(tag, text) {
    const element = document.createElement(tag);
    element.innerText = text;
    return element;
}

export export 

export 

export 
import { cache } from "./cache.js";

export function displayCartNumber(){
    const items = cache.getCartItems();
    const cartLink = document.getElementById("cart-link");

    if(items.length > 0)
    else{
        cartLink.innerText = "Cart";
    }
}

displayCartNumber();import { artService } from "./artService.js";

async function createElementsArtObjects(artObjectPromises, term) {
    const gallery = document.getElementById('gallery');
    gallery.innerHTML = '';
    let i = 0;
    for (let artObjectPromise of artObjectPromises) {
        gallery.appendChild(createArtObjectElement(await artObjectPromise));

        if (term) 
    }
    if (term) 
}

function createArtObjectElement(artObject) {
    const thumbnailURLContainer = document.createElement('div');
    thumbnailURLContainer.setAttribute('class', 'thumb');

    const link = document.createElement('a');
    link.setAttribute('href', `./config.html?objectID=${artObject.objectID}`);
    link.setAttribute('id', 'object-' + artObject.objectID);

    const img = document.createElement('img');
    img.setAttribute('src', artObject.imgUrl);
    img.setAttribute('alt', artObject.title);
    img.setAttribute('id', 'object-image-' + artObject.objectID);

    const labelContainer = document.createElement('div');
    labelContainer.setAttribute('class', 'museum-label');

    const artist = document.createElement('span');
    artist.setAttribute('class', 'artist');
    artist.innerText = artObject.artist;

    const title = document.createElement('span');
    title.setAttribute('class', 'title');
    title.innerText = artObject.title;

    const date = document.createElement('span');
    date.setAttribute('class', 'date');
    date.innerText = artObject.date;

    labelContainer.appendChild(artist);
    labelContainer.appendChild(title);
    labelContainer.append(', ');
    labelContainer.appendChild(date);

    link.appendChild(img);
    link.appendChild(labelContainer);

    thumbnailURLContainer.appendChild(link);
    return thumbnailURLContainer;
}





async function searchAndDisplay(q) {
    if (q )  else {
        const highlightPromises = await artService.getHighlightObjectPromises();
        createElementsArtObjects(highlightPromises);
    }
}

document.addEventListener('DOMContentLoaded', event => {
    const urlParams = artService.getQueryParams("q");
    const q = urlParams.q;

    const search = document.getElementById("search");
    search.value = q;

    searchAndDisplay(q);
});