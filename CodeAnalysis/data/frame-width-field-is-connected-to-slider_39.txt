

    window.addEventListener("load", function () {

      if (JSON.parse(localStorage.getItem("cart")) != null ) 
    });

    import * as Frame from './frame.js';

    var urlParams = new URLSearchParams(window.location.search);
    var objectID = urlParams.get('objectID');
    var printSize = urlParams.get('printSize');
    var frameStyle = urlParams.get('frameStyle');
    var frameWidth = urlParams.get('frameWidth');
    var matColor = urlParams.get('matColor');
    var matWidth = urlParams.get('matWidth');

    var requests = [];

    if(objectID === null)else{
      requests.push(fetch('https://collectionapi.metmuseum.org/public/collection/v1/objects/' + objectID))

      Promise.all(requests)
              .then(function (responses) {
                return responses.map(function (response) {
                  return response.json();
                });
              }).then(function (data) {
        for(var element in data){
          console.log(data);
          data[element].then(function (result){
            console.log(result);
            if(result.message === "ObjectID not found"||result.message === "could not parse objectID")else{
              makePicturewithTitle(result);
            }
          });
        }
      }).catch();
    }


    function makePicturewithTitle(data) {
      var artist;
      var title;
      var objectDate;

      if(data.artistDisplayName !== null){
        artist = data.artistDisplayName + "\n"
      }
      if(data.title !== null){
        title = data.title + ", "
      }
      if(data.objectDate !== null){
        objectDate = data.objectDate
      }

      var label = artist + title + objectDate;
      document.getElementById("image-label").innerText = label;
      document.getElementById("preview-image").setAttribute("src", data.primaryImageSmall);
    }

    if(printSize !== null)
    if(frameStyle !== null)
    if(frameWidth !== null)
    if(matColor !== null)
    if(matWidth !== null)

    document.getElementById("framewidthnumber").addEventListener("change", function(){
      if(document.getElementById("framewidthnumber").value < 2)else if(document.getElementById("framewidthnumber").value > 5)

      document.getElementById("framewidthnumber").value = Math.round(document.getElementById("framewidthnumber").value*10)/10;

      document.getElementById("framewidthrange").value = document.getElementById("framewidthnumber").value;

      renderPictureAndPriceAndSize();
    });

    document.getElementById("framewidthrange").addEventListener("change", );

    document.getElementById("matwidthnumber").addEventListener("change", );

    document.getElementById("matwidthrange").addEventListener("change", );

    document.getElementById("sizes").addEventListener("change", )

    document.getElementById("sizes").addEventListener("change", )

    document.getElementById("sizes").addEventListener("change", )

    document.getElementById("framestyle").addEventListener("change", )

    document.getElementById("matcolor").addEventListener("change", )


    function renderPictureAndPriceAndSize() {
      var sizes = Frame.getPrintSizes(document.getElementById("preview-image"));

      document.getElementById("print-size-s-label").innerText = "Small" + "\n" + sizes.S[0]/10 + " x " + sizes.S[1]/10 + " cm"
      document.getElementById("print-size-m-label").innerText = "Medium" + "\n" + sizes.M[0]/10 + " x " + sizes.M[1]/10 + " cm"
      document.getElementById("print-size-l-label").innerText = "Large" + "\n" + sizes.L[0]/10 + " x " + sizes.L[1]/10 + " cm"

      Frame.render(document.getElementById("preview-image"), //Image Object
                   document.getElementById("preview-container"), //Container Object
                   document.querySelector('input[name="printSize"]:checked').value,  //Image Size - Radiobutton
                   document.querySelector('input[name="frameStyle"]:checked').value,  //Frame Style - Radiobutton
                   document.getElementById("framewidthrange").value, //Frame Width
                   document.querySelector('input[name="matColor"]:checked').value,  //Mat Color - Radiobutton
                   document.getElementById("matwidthrange").value  //Mat Width
      )

      var price = Frame.calculatePrice(
              document.querySelector('input[name="printSize"]:checked').value, //Image Size - Radiobutton
              document.querySelector('input[name="frameStyle"]:checked').value,  //Frame Style - Radiobutton
              document.getElementById("framewidthrange").value*10, //Frame Width
              document.getElementById("matwidthrange").value*10  //Mat Width
      )

      document.getElementById("price").innerText = "â‚¬ " + price;

      var totalheight = 0;
      var totalwidth = 0;

      if(document.querySelector('input[name="printSize"]:checked').value === 'S')else if(document.querySelector('input[name="printSize"]:checked').value === 'M'){
        totalwidth = sizes.M[0]/10;
        totalheight = sizes.M[1]/10;
      }

      totalwidth += ((document.getElementById("framewidthrange").value * 2) + (document.getElementById("matwidthrange").value * 2));
      totalheight += ((document.getElementById("framewidthrange").value * 2) + (document.getElementById("matwidthrange").value * 2));

      totalwidth = Math.round((totalwidth + Number.EPSILON) * 10) / 10;
      totalheight = Math.round((totalheight + Number.EPSILON) * 10) / 10;

      document.getElementById("total-size").innerText = totalwidth + " x " + totalheight + " cm";

    }

    document.getElementById("preview-image").addEventListener("load", function () {
      renderPictureAndPriceAndSize();
    })

    document.getElementById("config-form").addEventListener("submit", )


  export function getPrintSizes(img) {
    let S = [297, 297]; // A4
    let M = [420, 420]; // A3
    let L = [594, 594]; // A2

    const w = img.naturalWidth;
    const h = img.naturalHeight;

    if (h > w)  else {
        S[1] = Math.floor(h * S[0] / w);
        M[1] = Math.floor(h * M[0] / w);
        L[1] = Math.floor(h * L[0] / w);
    }

    return { S: S, M: M, L: L };
}

export function render(img, container, printSize, frameStyle, frameWidth, matColor, matWidth) {
    const printSizes = getPrintSizes(img);
    const w = printSizes[printSize][0];
    const h = printSizes[printSize][1];

    let x;
    if (w > h) {
        x = container.offsetWidth / (w + 2 * matWidth + 2 * frameWidth);
    }

    const frameImageSlices = {
        classic: 115,
        natural: 75,
        shabby: 120,
        elegant: 107
    };

    const matColors = {
        ivory: '#fffff0',
        mint: '#e0e6d4',
        wine: '#50222d',
        indigo: '#29434c',
        coal: '#333a3d',
    };

    img.style.boxSizing = 'border-box';
    img.width = (w + 2 * matWidth + 2 * frameWidth) * x;
    img.height = (h + 2 * matWidth + 2 * frameWidth) * x;
    img.style.borderImageSource = `url(frame-styles/${frameStyle}.jpg)`;
    img.style.borderImageSlice = frameImageSlices[frameStyle];
    img.style.borderWidth = `${frameWidth * x}px`;
    img.style.backgroundColor = matColors[matColor];
    img.style.padding = `${matWidth * x}px`;
}

export function calculatePrice(printSize, frameStyle, frameWidth, matWidth) {
    let price = 30.0;
    frameWidth = frameWidth/10;
    matWidth = matWidth/10;

    if(frameStyle === "classic")else if(frameStyle === "natural"){
        price += 0.8 * frameWidth;
    }

    price += 0.05 * matWidth;

    if (printSize === 'M'){
        price *= 2;
    }

    return (Math.round((price + Number.EPSILON) * 100) / 100).toFixed(2);
}
