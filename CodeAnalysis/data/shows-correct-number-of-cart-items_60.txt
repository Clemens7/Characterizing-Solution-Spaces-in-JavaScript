import { getPrintSizes, render, calculatePrice } from './frame.js';

var price = 0.0;
let cacheList = [];
var cachedMetArray = [];
const baseURL = 'https://collectionapi.metmuseum.org/public/collection/v1/objects/';

document.addEventListener('DOMContentLoaded', event => {
    start();
    async function start() {
        if (window.localStorage.getItem('cart') == "[]" ) {
            displayEmptyItems();
            return;
        }}
})










function displayEmptyItems() {
    const cartContainer = document.querySelector('.cart');
    cartContainer.innerText = "There are no items in your shopping cart.";
    const cartTotal = document.createElement('div');
    cartTotal.setAttribute('class', 'cart-total');
    cartTotal.innerHTML =
        `<div class="price">Total: € <span id="price-total">0</span></div>
    <button type="button" id="checkout-button">Checkout</button>
    `;
    const payButton = cartTotal.querySelector('#checkout-button');
    cartTotal.style.display = "none";
    payButton.disabled = true;
    cartContainer.appendChild(cartTotal);
}






import { calculatePrice, getPrintSizes, render } from './frame.js';

window.onload = async function () {

  var url = new URL(window.location.href);
  var objectId = url.searchParams.get("objectID");
  var printSize = url.searchParams.get("printSize");
  var frameStyle = url.searchParams.get("frameStyle");
  var frameWidth = url.searchParams.get("frameWidth");
  var matColor = url.searchParams.get("matColor");
  var matWidth = url.searchParams.get("matWidth");

  if(objectId == null || objectId == "") 
  if(printSize == null )
    printSize = "M";
  if(frameStyle == null )
    frameStyle = "natural";
  if(frameWidth == null )
    frameWidth = 40
  if(matColor == null )
    matColor = "mint";
  if(matWidth == null )
    matWidth = 55;

  switch(printSize) {
    
    case 'M': document.getElementById("print-size-m").checked = true;
      break;
    
  }

  if(frameWidth != null) {
    if(frameWidth < 20)  else if(frameWidth > 50) 
    document.getElementById("frameWidth").value = Math.round(frameWidth) / 10;
    document.getElementById("rangeFrameWidth").value = Math.round(frameWidth) / 10;
  }

  switch(frameStyle) {
    
    case 'natural': document.getElementById("frame-style-natural").checked = true;
      break;
    
    
  }

  if(matWidth != null) {
    if(matWidth < 0)  else if(matWidth > 100) 
    document.getElementById("matWidth").value = Math.round(matWidth) / 10;
    document.getElementById("rangeMatWidth").value = Math.round(matWidth) / 10;
  }

  switch(matColor) {
    
    case 'mint': document.getElementById("mat-color-mint").checked = true;
      break;
    
    
    
  }

  document.getElementById("price").innerHTML = "€ " + calculatePrice(printSize, frameStyle, frameWidth, matWidth).toFixed(2);

  var shoppingCart2 = [];
  var shoppingCartObjects = JSON.parse(localStorage.getItem('cache'));

  if (shoppingCartObjects == null)

  var filteredShoppingCartObjects = shoppingCartObjects.filter(object => object.objectID == objectId);

  if (filteredShoppingCartObjects.length > 1)

  if (filteredShoppingCartObjects.length == 0)

  var fetchedObject = filteredShoppingCartObjects[0];

  this.console.log(fetchedObject);



  /* if(shoppingCartObjects != null && shoppingCartObjects.objectID == objectId){
    fetchedObject = shoppingCartObjects; */

  if(!fetchedObject) 

  var imgSrc = fetchedObject.primaryImageSmall;

  if(imgSrc == "" || imgSrc == null) 

  var myImg = document.getElementById("preview-image");
  myImg.src = imgSrc;
  document.getElementById("image-label").innerHTML = "<b>" + fetchedObject.artistDisplayName + "</b><br><i>" + fetchedObject.title + "</i>, " + fetchedObject.objectDate;

  myImg.onload = function () {
    var sizes = getPrintSizes(myImg);

    document.getElementById("print-size-s-label").innerHTML = "Small<br>" + sizes.S[0]/10 + " × " + sizes.S[1]/10 + " cm";
    document.getElementById("print-size-m-label").innerHTML = "Medium<br>" + sizes.M[0]/10 + " × " + sizes.M[1]/10 + " cm";
    document.getElementById("print-size-l-label").innerHTML = "Large<br>" + sizes.L[0]/10 + " × " + sizes.L[1]/10 + " cm";

    render(myImg, document.getElementById("preview-container"), printSize, frameStyle, frameWidth, matColor, matWidth);

    var totalWidth = sizes[printSize][0]/10+frameWidth*0.2+matWidth*0.2;
    var totalHeight = sizes[printSize][1]/10+frameWidth*0.2+matWidth*0.2;
    document.getElementById("total-size").innerHTML = totalWidth + " × " + totalHeight + " cm";
  }

  var myCart = JSON.parse(localStorage.getItem('cart'));
  if(myCart.length != 0)   
}//window.onload done.

document.getElementById("frameWidth").onchange = 

document.getElementById("matWidth").onchange = 

document.getElementById('print-size-s').onclick = update;
document.getElementById('print-size-m').onclick = update;
document.getElementById('print-size-l').onclick = update;

document.getElementById('frame-style-classic').onclick = update;
document.getElementById('frame-style-natural').onclick = update;
document.getElementById('frame-style-shabby').onclick = update;
document.getElementById('frame-style-elegant').onclick = update;

document.getElementById('mat-color-ivory').onclick = update;
document.getElementById('mat-color-mint').onclick = update;
document.getElementById('mat-color-wine').onclick = update;
document.getElementById('mat-color-indigo').onclick = update;
document.getElementById('mat-color-coal').onclick = update;

document.getElementById("frameWidth").oninput = 
document.getElementById("rangeFrameWidth").oninput = 

document.getElementById("matWidth").oninput = 
document.getElementById("rangeMatWidth").oninput = 

document.getElementById("config-form").onsubmit = 




export 

export 

export 
class Artwork{
    constructor(artist, title, image, date){
        this.artist = artist;
        this.title = title;
        this.image = image;
        this.date = date;
    }
}

var ids;
window.onload = init();
function init(){
  const urlParams = new URLSearchParams(window.location.search);
  if(urlParams.has('q'))else{
    urlParams.set('q','');
    retrieveTerm('');
  }
  try{
    var cart = JSON.parse(window.localStorage.getItem("cart"));
    if(cart.length===0){
    }
  }

  const form = document.querySelector('#searchForm')
  form.addEventListener('submit' , )
}

async function retrieveID(searchTerm) {
    let ids;

    if(searchTerm == null || searchTerm === ''){
        ids = [39799, 459055, 437853, 435809, 436535, 360018, 634108, 459080, 435882, 271890, 459054, 436105];
    }
    return ids;
}

async function retrieveImage(ids){
    let images = new Array();

    for(let id of ids){
        const url = `https://collectionapi.metmuseum.org/public/collection/v1/objects/${id}`;
        try{
            const response = await fetch(url);
            const rawData = await response.json();
            images.push(new Artwork(rawData.artistDisplayName, rawData.title, rawData.primaryImageSmall, rawData.objectDate));
            renderImage(new Artwork(rawData.artistDisplayName, rawData.title, rawData.primaryImageSmall, rawData.objectDate));
            if(images.length == 100)
          }
        
    }
    return images;
}

function renderImage(image){
  const artContainer = document.getElementById('gallery');

    const thumb = document.createElement('div');
    thumb.className = 'thumb';
    const link = document.createElement('a');
    link.href ='config.html?objectID='+ids[0];
    const img = document.createElement('img');
    img.src = image.image;
    const museumLabel = document.createElement('div');
    museumLabel.className = 'museum-label';
    const artist = document.createElement('span');
    artist.innerHTML = image.artist;
    artist.className = 'artist';
    const title = document.createElement('span');
    title.className = 'title';
    title.innerHTML = image.title+", "+image.date;
    /*const date = document.createElement('span');
    date.innerHTML = ',' + image.date;
    date.className = 'date';*/

    thumb.appendChild(link);
    link.appendChild(img);
    link.appendChild(museumLabel);
    museumLabel.appendChild(artist);
    museumLabel.appendChild(title);
    artContainer.appendChild(thumb);
}

async function retrieveTerm(searchTerm){
    ids = await retrieveID(searchTerm);
    console.log(ids)
    if(ids===null)
    else{
      const images = await retrieveImage(ids);
      console.log(images);
      if(images.length == 1)
      else if (searchTerm == ''){}
      return images;
    }}
