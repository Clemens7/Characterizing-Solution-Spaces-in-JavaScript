import {Object} from "./object.js"
import * as ArtworkCache from './artwork-cache.js';

export 


export 

export async function retrieveObject(objectID) {
    if (!objectID) 
    let object = ArtworkCache.retrieveStorage(objectID);
    if (object) {
        return object;
    }}






export 

export function retrieveStorage(objectID) {
    if (objectID in localStorage) {
        console.log(`Retrieving ${objectID} from local storage`);
        return JSON.parse(localStorage[objectID]);
    }
}
    import * as Cart from './cart.js';
    import * as Frame from './frame.js';
    import * as API from './art-api.js';

    Cart.updateCartString();

    let cartElement = document.getElementById('cart');
    let cartItemElement = document.querySelector('.cart-item');
    let checkoutButton = document.getElementById('checkout-button');
    let totalElement = document.getElementById('price-total');

    if (Cart.getItems().length == 0)  else {
      checkoutButton.disabled = false;
    }

    (async () => {
      const items = Cart.getItems();
      console.log("Items:");
      console.log(items);
      let totalPrice = 0;
      for (let index = 0; index < items.length; index++) {
        const item = items[index];
        console.log("obj #" + index);
        const obj = await API.retrieveObject(item.objectID);
        console.log(obj);

        const itemDiv = document.createElement("div");
        itemDiv.classList.add("cart-item");

        let printText = "";
        switch (item.printSize) {
          case "S":
            printText = "Small print";
            break;
          case "M":
            printText = "Medium print";
            break;
          
        }

        let descText = `in a ${item.frameWidth / 10} cm ${item.frameStyle} frame`;
        let matText = '';
        if (item.matWidth > 0) { 
          matText = ` with a ${item.matWidth / 10} cm ${item.matColor} mat.`;
        }
        
      
      itemDiv.innerHTML = `
          <div class="cart-preview" id="preview-container-${index}">
            <a href="config.html?${new URLSearchParams(item)}">
              <img class="cart-thumb" src="${obj.primaryImageSmall}" id="preview-${index}">
            </a>
          </div>
          <div class="museum-label">
            <div>
              <span class="artist">${obj.artistDisplayName}</span>
              <span class="title">${obj.title}</span>,
              <span class="date">${obj.objectDate}</span>
              <br><br>
              <span class="frame-description">${printText} ${descText}${matText}</span>
            </div>
            <div class="cart-price">€ <span id="price-${index}">0</span></div>
            <button class="cart-remove" onclick="removeItem(${index});"></button>
          </div>`;
      cartElement.insertBefore(itemDiv, cartElement.firstChild);

      const previewImg = document.getElementById("preview-" + index);
      const container = document.getElementById("preview-container-" + index);
      Frame.render(previewImg, container, item.printSize, item.frameStyle, item.frameWidth, item.matColor, item.matWidth);

      const price = Frame.calculatePrice(item.printSize, item.frameStyle, item.frameWidth, item.matWidth);
      document.getElementById("price-" + index).innerHTML = `${price.toFixed(2)}`;
      totalPrice += price;
    }
      document.getElementById("price-total").innerHTML = `${totalPrice.toFixed(2)}`;
    }) ();

    window.removeItem = 
  import * as Frame from './frame.js';

export 

export function getItems() {
    let cart = localStorage.getItem('cart');
    if (!cart) 
    return JSON.parse(cart);
}

export function updateCartString() {
    let cartLink = document.getElementById('cart-link');
    let noOfItems = getItems().length;
    let cartString = '';
    if (noOfItems > 0) cartString = ` (${noOfItems})`;
    cartLink.innerText = `Cart${cartString}`;
}

export 

export 
    import * as Frame from './frame.js';
    import * as API from './art-api.js';
    import * as Cart from './cart.js';

    Cart.updateCartString();
      
    const params = new URLSearchParams(window.location.search);
    const objectID = params.get('objectID');
    
    applyParams(params);

    if(objectID == null)

    API.retrieveObject(objectID).then(result => {
       if(result.message)
        document.getElementById("preview-image").src = result.primaryImageSmall;
        updateConfig();
        const imageLabel = document.getElementById("image-label");
        imageLabel.innerHTML = `
          <span class="artist">${result.artistDisplayName}</span>
          <span class="title">${result.title}</span>,
          <span class="date">${result.objectDate}</span>`;      
    })

    function applyParams(params){
       const form = document.getElementById("config-form"); 
       form["printSize"].value = params.get("printSize") || "S"; 
       form["frameStyle"].value = params.get("frameStyle") || "classic"; 
       form["frameWidth"].value = params.get("frameWidth") / 10 || 5; 
       form["frameWidthR"].value = params.get("frameWdith") / 10 | 5; 
       form["matWidth"].value = params.get("matWidth") / 10 || 3;
       form["matWidth"].value = params.get("matWidth") / 10 || 3;  
       form["matColor"].value = params.get("matColor") || "Mint"; 
    }

    window.updateConfig = function(){
      const form = document.getElementById("config-form");
      const previewImg = document.getElementById("preview-image");
      const container = document.getElementById("preview-container");
      const printSize = form["printSize"].value;
      const frameStyle = form["frameStyle"].value;
      const frameWidth = form["frameWidth"].value * 10;
      const matColor = form["matColor"].value;
      const matWidth = form["matWidth"].value * 10;

      const printSizes = Frame.getPrintSizes(previewImg);
      document.getElementById('print-size-s-label').innerHTML = `Small<br>${printSizes.S[0]/10} × ${printSizes.S[1]/10} cm</label>`;
      document.getElementById('print-size-m-label').innerHTML = `Medium<br>${printSizes.M[0]/10} × ${printSizes.M[1]/10} cm</label>`;
      document.getElementById('print-size-l-label').innerHTML = `Large<br>${printSizes.L[0]/10} × ${printSizes.L[1]/10} cm</label>`;
      
      Frame.render(previewImg, container, printSize, frameStyle, frameWidth, matColor, matWidth);

      document.getElementById("price").innerText = `€ ${Frame.calculatePrice(printSize, frameStyle, frameWidth, matWidth).toFixed(2)}`;
      document.getElementById('total-size').innerText = `${(printSizes[printSize][0] + 2 * frameWidth + 2 * matWidth)/10} × ${(printSizes[printSize][1] + 2 * frameWidth + 2 * matWidth)/10} cm`; 
    }

window.updateFrameWidth = 

   window.updateMatWidth = 

    window.addToCart = 
  export function getPrintSizes(img) {
    let S = [297, 297]; // A4
    let M = [420, 420]; // A3
    let L = [594, 594]; // A2

    const w = img.naturalWidth;
    const h = img.naturalHeight;

    if (h > w)  else {
        S[1] = Math.floor(h * S[0] / w);
        M[1] = Math.floor(h * M[0] / w);
        L[1] = Math.floor(h * L[0] / w);
    }

    return { S: S, M: M, L: L };
}

export function render(img, container, printSize, frameStyle, frameWidth, matColor, matWidth) {
    const printSizes = getPrintSizes(img);
    const w = printSizes[printSize][0];
    const h = printSizes[printSize][1];

    let x;
    if (w > h)  else {
        x = container.offsetHeight / (h + 2 * matWidth + 2 * frameWidth);
    }

    const frameImageSlices = {
        classic: 115,
        natural: 75,
        shabby: 120,
        elegant: 107
    };

    const matColors = {
        ivory: '#fffff0',
        mint: '#e0e6d4',
        wine: '#50222d',
        indigo: '#29434c',
        coal: '#333a3d',
    };

    img.style.boxSizing = 'border-box';
    img.width = (w + 2 * matWidth + 2 * frameWidth) * x;
    img.height = (h + 2 * matWidth + 2 * frameWidth) * x;
    img.style.borderImageSource = `url(frame-styles/${frameStyle}.jpg)`;
    img.style.borderImageSlice = frameImageSlices[frameStyle];
    img.style.borderWidth = `${frameWidth * x}px`;
    img.style.backgroundColor = matColors[matColor];
    img.style.padding = `${matWidth * x}px`;
}

export function calculatePrice(printSize, frameStyle, frameWidth, matWidth) {
    
    let price = ((30 + getCostForFrame(frameStyle) * (frameWidth/10)) + (0.05 * (matWidth / 10)))* getMultiplier(printSize);  

    return Math.round(price * 100) / 100;
}
function getMultiplier(size){
     const sizes = {
        "S" : 1, 
        "M": 2, 
        "L": 3.5
    }; 
    return sizes[size];
}

function getCostForFrame(frame){
    const costs = {
        "classic" : 1, 
        "natural" : 0.8, 
        "shabby" : 0.9, 
        "elegant" : 0.85
    }; 
    return costs[frame]; 
}import * as ArtAPI from './art-api.js'; 

export class Object{
    
}
      import * as ArtAPI from './art-api.js';
      import * as Cart from './cart.js';

      Cart.updateCartString();

      document.addEventListener('DOMContentLoaded', event => {
          const params = (new URL(document.location)).searchParams;
          const objectQuery = params.get('q');
          if (!objectQuery) 
          document.getElementById('search').value = objectQuery;
          const heading = document.getElementById('search-info');
          heading.innerText = `Searching for “${objectQuery}”...`;
          ArtAPI.retrieveObjectIDs(objectQuery)
              .then(objects => {
                  heading.innerText = `Found ${counter(objects)} artwork${plural(counter(objects))} for “${objectQuery}”`;
                  for (let objectId of objects) {
                      ArtAPI.retrieveObject(objectId)
                          .then(object => {
                              display(object);
                          });
                  }
              });
      });

      function display(object) {
          const gallery = document.getElementById('gallery');
          gallery.innerHTML += `
                      <div class="thumb">
                          <a href="config.html?objectID=${object.objectID}" id="object-0">
                          <img src="${object.primaryImageSmall.toString()}" alt="" id="object-image-0">
                          <div class="museum-label">
                          <span class="artist">${object.artistDisplayName.toString()}</span>
                          <span class="title">${object.title.toString()}</span>,
                          <span class="date">${object.objectDate.toString()}</span>
                          </div>
                          </a>
                          </div>`;
      }

      function counter(data) {
          if (!data) 
          return data.length;
      }

      function plural(num) {
          if (num !== 1) return 's';
      }

  