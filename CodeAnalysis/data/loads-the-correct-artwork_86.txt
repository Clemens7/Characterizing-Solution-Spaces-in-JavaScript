import { retrieveData } from './search-api.js';
import * as SearchCache from './search-cache.js' ;
import * as Frame from './frame.js';

const museumLabel = document.getElementById('image-label');

let slider = document.querySelectorAll('input[type=range]');
let numberBox = document.querySelectorAll('input[type=number]');
let sizeSelector = document.querySelectorAll('input[name=printSize]');
let frameSelector = document.querySelectorAll('input[name=frameStyle]');
let matSelector = document.querySelectorAll('input[name=matColor]');
let objectID = 39799;
let printSize = 'M';
let frameStyle = 'classic';
let frameWidth = 4.0;
let matColor = 'mint';
let matWidth = 5.5;

document.addEventListener('DOMContentLoaded', async () => {
  SearchCache.cartCache();

  const params = (new URL(document.location)).searchParams;
  if (params.get('objectID')) {
    objectID = params.get('objectID');
  }
  if (params.get('printSize')) 
  if (params.get('frameStyle')) 
  if (params.get('frameWidth')) 
  if (params.get('matColor')) 
  if (params.get('matWidth')) 

  sizeSelector.value = printSize;
  document.getElementById('print-size-s').checked = printSize === 'S';
  document.getElementById('print-size-m').checked = printSize === 'M';
  document.getElementById('print-size-l').checked = printSize === 'L';

  document.getElementById('frame-style-classic').checked = frameStyle === 'classic';
  document.getElementById('frame-style-natural').checked = frameStyle === 'natural';
  document.getElementById('frame-style-shabby').checked = frameStyle === 'shabby';
  document.getElementById('frame-style-elegant').checked = frameStyle === 'elegant';

  document.getElementById('mat-color-ivory').checked = matColor === 'ivory';
  document.getElementById('mat-color-mint').checked = matColor === 'mint';
  document.getElementById('mat-color-wine').checked = matColor === 'wine';
  document.getElementById('mat-color-indigo').checked = matColor === 'indigo';
  document.getElementById('mat-color-coal').checked = matColor === 'coal';

  slider[0].value = Math.min(Math.max(frameWidth, 2), 5);
  numberBox[0].value =  Math.min(Math.max(frameWidth, 2), 5);
  slider[1].value = Math.min(Math.max(matWidth, 0), 10);
  numberBox[1].value = Math.min(Math.max(matWidth, 0), 10);

  const artwork = await retrieveData(objectID);
  if (!artwork || !artwork['primaryImageSmall']) 
  domCreate(artwork);

  const previewImage = document.getElementById('preview-image');
  previewImage.addEventListener('load', () => {
    const printSizes = Frame.getPrintSizes(previewImage);
    document.getElementById('print-size-s-label').innerHTML = `Small<br>${printSizes['S'][0]/10} × ${printSizes['S'][1]/10} cm`;
    document.getElementById('print-size-m-label').innerHTML = `Medium<br>${printSizes['M'][0]/10} × ${printSizes['M'][1]/10} cm`;
    document.getElementById('print-size-l-label').innerHTML = `Large<br>${printSizes['L'][0]/10} × ${printSizes['L'][1]/10} cm`;
  });

  Frame.render(document.getElementById('preview-image'), document.getElementById('preview-container'), printSize, frameStyle, frameWidth, matColor, matWidth);
  setPrice();
});

for (let i=0; i<sizeSelector.length; i++) {
  sizeSelector[i].addEventListener('input', );
}

for (let i=0; i<frameSelector.length; i++) {
  frameSelector[i].addEventListener('input', );
}

for (let i=0; i<matSelector.length; i++) {
  matSelector[i].addEventListener('input', );
}

numberBox[0].addEventListener('input', );

numberBox[1].addEventListener('input', );

slider[0].addEventListener('input', );

slider[1].addEventListener('input', );





addEventListener('input', );

function setPrice() {
  document.getElementById('price').innerHTML = `€ ${Frame.calculatePrice(printSize, frameStyle, frameWidth, matWidth).toFixed(2)}`;
  let {width, height} = Frame.calculateSize(printSize, frameWidth, matWidth);
  document.getElementById('total-size').innerHTML = `${width} × ${height} cm`;
}

const form = document.getElementById('config-form');
form.addEventListener('keypress', );

function domCreate(artwork){
  const imageContainer = document.getElementById('preview-container');
  const item = document.createElement('img');
  item.src = artwork['primaryImageSmall'];
  item.alt = artwork['title'];
  item.id = "preview-image";
  imageContainer.prepend(item);
  museumLabel.innerHTML =`<span class="artist">${artwork.artistDisplayName}</span>
  <span class="title">${artwork.title}</span>,
  <span class="date">${artwork.objectDate}</span>`;
}

            window.updateFrameWidth = 
            window.updateMatWidth = 
            
            
          export function getPrintSizes(img) {
  let S = [297, 297]; // A4
  let M = [420, 420]; // A3
  let L = [594, 594]; // A2

  const w = img.naturalWidth;
  const h = img.naturalHeight;

  if (h > w)  else {
    S[1] = Math.floor(h * S[0] / w);
    M[1] = Math.floor(h * M[0] / w);
    L[1] = Math.floor(h * L[0] / w);
  }

  return { S: S, M: M, L: L };
}

export function render(img, container, printSize, frameStyle, frameWidth, matColor, matWidth) {
  const printSizes = getPrintSizes(img);
  const w = printSizes[printSize][0];
  const h = printSizes[printSize][1];

  let x;
  if (w > h)  else {
    x = container.offsetHeight / (h + 2 * matWidth + 2 * frameWidth);
  }

  const frameImageSlices = {
    classic: 115,
    natural: 75,
    shabby: 120,
    elegant: 107
  };

  const matColors = {
    ivory: '#fffff0',
    mint: '#e0e6d4',
    wine: '#50222d',
    indigo: '#29434c',
    coal: '#333a3d',
  };

  img.style.boxSizing = 'border-box';
  img.width = (w + 2 * matWidth + 2 * frameWidth) * x;
  img.height = (h + 2 * matWidth + 2 * frameWidth) * x;
  img.style.borderImageSource = `url(frame-styles/${frameStyle}.jpg)`;
  img.style.borderImageSlice = frameImageSlices[frameStyle];
  img.style.borderWidth = `${frameWidth * x}px`;
  img.style.backgroundColor = matColors[matColor];
  img.style.padding = `${matWidth * x}px`;
}

export function calculatePrice(printSize, frameStyle, frameWidth, matWidth) {
  let price = 30.0;
  switch (frameStyle) {
    case 'classic':
    price += frameWidth * 1.0;
    break;
    
    
    
  }
  price += matWidth * 0.05;
  if (printSize === 'M') price *= 2.0;
  if (printSize === 'L') 
  return (Math.round((price + Number.EPSILON) * 100) / 100);
}

export function calculateSize(printSize, frameWidth, matWidth) {
  let printSizes = getPrintSizes(document.getElementById('preview-image'));
  let width = printSizes[printSize][0]/10 + parseFloat(frameWidth, 10) + parseFloat(matWidth, 10);
  let height = printSizes[printSize][1]/10 + parseFloat(frameWidth, 10) + parseFloat(matWidth, 10);
  return { width:(Math.round((width + Number.EPSILON) * 10) / 10), height:(Math.round((height + Number.EPSILON) * 10) / 10)};
}
import * as SearchCache from './search-cache.js';

async function retrieveData(objID){
  let artwork = SearchCache.retrieveFromLocal(objID);
  if(artwork)
  try{
    const dataFromApi = await retrieveDataFromApi(objID);
    if(!dataFromApi['objectID'])
    SearchCache.storeInLocal(objID, dataFromApi);
    return dataFromApi;
  }}



async function retrieveDataFromApi(objectID){
  const response = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${objectID}`);
  const data = await response.json();
  return data;
};






export { searchIdFromApi, retrieveData, retrieveHighlights };


function retrieveFromLocal(key){
  if(key in localStorage)
}



function storeInLocal(key, value){
  localStorage[key] = JSON.stringify(value);
}


function cartCache(){
  const cartCached = retrieveFromLocal("cart");
  if(cartCached 
}

export { retrieveFromLocal, storeInLocal, cartCache };
