
        import * as Cart from './cart.js';
        import * as MetMuseum from './met_museum.js';
        import * as Frame from './frame.js';

        Cart.countProducts();

        const elementCart = document.getElementById("cart");

        if(Cart.isEmpty())else{
            document.getElementById('checkout-button').disabled = false;
        }

        (async() =>{
            let totalPrice = 0;
            const cartItems = Cart.getCartItems();
            for(let index = 0; index < cartItems.length; index++){
                const product = cartItems[index];
                const obj = await MetMuseum.getObject(product.objectID);

                const newItem = document.createElement("div");
                newItem.classList.add("cart-item");
                const toPrintSize = {'S':'Small', 'M':'Medium', 'L':'Large'};
                const printText = toPrintSize[product.printSize] + ' print';
                const frameText = 'in a ' + product.frameWidth/10 + ' cm ' + product.frameStyle + ' frame';
                var matText = '';
                if(product.matWidth>0){
                    matText=' with a ' + product.matWidth/10 + ' cm ' + product.matColor + ' mat.';
                }
                newItem.innerHTML=`
                    <div class="cart-preview" id="preview-container-${index}">
                        <a href="config.html?${new URLSearchParams(product)}">
                            <img class="cart-thumb" src="${obj.primaryImageSmall}" id="preview-${index}" alt="${obj.title}">
                        </a>
                    </div>
                    <div class="museum-label">
                        <div>
                            <span class="artist">${obj.artistDisplayName}</span>
                            <span class="title">${obj.title}</span>,
                            <span class="date">${obj.objectDate}</span>
                            <br><br>
                            <span class="frame-description">${printText} ${frameText}${matText}</span>
                        </div>
                        <div class="cart-price">€ <span id="price-${index}">0</span></div>
                        <button class="cart-remove" onclick="removeItem(${index});"></button>
                    </div>`;
                    elementCart.insertBefore(newItem, elementCart.firstChild);

                    const imagePreview = document.getElementById("preview-" + index);
                    const containerPreview = document.getElementById("preview-container-" + index);
                    Frame.render(imagePreview, containerPreview,product.printSize, product.frameStyle, product.frameWidth, product.matColor, product.matWidth);
                    const price = Frame.calculatePrice(product.printSize, product.frameStyle, product.frameWidth,product.matWidth);

                    totalPrice = totalPrice + price;
                    document.getElementById("price-" + index).innerHTML = price.toFixed(2);
            }
            document.getElementById("price-total").innerHTML = totalPrice.toFixed(2);
        })();

        window.removeItem = 
    export 

export function getCartItems(){
    var cart = JSON.parse(localStorage.getItem('cart'));
    if(!cart)
    return cart;
}

export function isEmpty(){
    let tempItems = getCartItems();
    if(tempItems.length<1)
    else{
        return false;
    }
}

export function countProducts(){
    const cartLink = document.getElementById("cart-link");
    const countProd = getCartItems().length;
    if(countProd<=0)else{
        cartLink.innerHTML = 'Cart (' + countProd + ")";
    }
}

export 

export 

    import * as Cart from './cart.js';
    import * as Frame from './frame.js';
    import * as Met_museum from './met_museum.js';

    Cart.countProducts();

    const urlParams = new URLSearchParams(window.location.search);
    const objectID = urlParams.get('objectID');
    const form = document.getElementById('config-form');

    form['printSize'].value = urlParams.get('printSize') || 'M';
    form['frameStyle'].value = urlParams.get('frameStyle') || 'classic';
    form['frameWidth'].value = form['frameWidthR'].value = urlParams.get('frameWidth') / 10 || 4;
    form['matColor'].value = urlParams.get('matColor') || 'mint';

    if (urlParams.get('matWidth'))  else {
      form['matWidth'].value = form['matWidthR'].value = 5.5;
    }

    Met_museum.getObject(objectID).then(obj => {

      if (obj == null) 

      document.title = `${obj.artistDisplayName}, ${obj.title}, ${obj.objectDate} | Artmart`;
      document.getElementById("object-id").value = obj.objectID;

      const previewImg = document.getElementById("preview-image");
      previewImg.src = obj.primaryImageSmall;

      const imageLabel = document.getElementById("image-label");
      
      imageLabel.innerHTML = `
          <span class="artist">${obj.artistDisplayName}</span>
          <span class="title">${obj.title}</span>,
          <span class="date">${obj.objectDate}</span>`

      window.render();
    });

    window.updateFrameWidth = 

    window.updateMatWidth = 

    

    window.render = function () {
      const form = document.getElementById('config-form');
      const previewImg = document.getElementById("preview-image");
      const container = document.getElementById("preview-container");
      const printSize = form['printSize'].value;
      const frameStyle = form['frameStyle'].value;
      const frameWidth = form['frameWidth'].value * 10;
      const matColor = form['matColor'].value;
      const matWidth = form['matWidth'].value * 10;
      Frame.render(previewImg, container, printSize, frameStyle, frameWidth, matColor, matWidth);

      const printSizes = Frame.getPrintSizes(previewImg);
      const totalWidth = printSizes[printSize][0] + 2 * frameWidth + 2 * matWidth;
      const totalHeight = printSizes[printSize][1] + 2 * frameWidth + 2 * matWidth;

      document.getElementById("print-size-s-label").innerHTML = `Small <br>${printSizes['S'][0] / 10} × ${printSizes['S'][1] / 10} cm`
      document.getElementById("print-size-m-label").innerHTML = `Medium<br>${printSizes['M'][0] / 10} × ${printSizes['M'][1] / 10} cm`
      document.getElementById("print-size-l-label").innerHTML = `Large <br>${printSizes['L'][0] / 10} × ${printSizes['L'][1] / 10} cm`
      document.getElementById('total-size').innerHTML = `${totalWidth / 10} × ${totalHeight / 10} cm`;

      const price = Frame.calculatePrice(printSize, frameStyle, frameWidth, matWidth);
      document.getElementById('price').innerHTML = `€ ${price.toFixed(2)}`;
    }

    window.addEventListener("resize", render);

    window.addToCart = 
  export function getPrintSizes(img) {
    let S = [297, 297]; // A4
    let M = [420, 420]; // A3
    let L = [594, 594]; // A2

    const w = img.naturalWidth;
    const h = img.naturalHeight;

    if (h > w)  else {
        S[1] = Math.floor(h * S[0] / w);
        M[1] = Math.floor(h * M[0] / w);
        L[1] = Math.floor(h * L[0] / w);
    }

    return { S: S, M: M, L: L };
}

export function render(img, container, printSize, frameStyle, frameWidth, matColor, matWidth) {
    const printSizes = getPrintSizes(img);
    const w = printSizes[printSize][0];
    const h = printSizes[printSize][1];

    let x;
    if (w > h)  else {
        x = container.offsetHeight / (h + 2 * matWidth + 2 * frameWidth);
    }

    const frameImageSlices = {
        classic: 115,
        natural: 75,
        shabby: 120,
        elegant: 107
    };

    const matColors = {
        ivory: '#fffff0',
        mint: '#e0e6d4',
        wine: '#50222d',
        indigo: '#29434c',
        coal: '#333a3d',
    };

    img.style.boxSizing = 'border-box';
    img.width = (w + 2 * matWidth + 2 * frameWidth) * x;
    img.height = (h + 2 * matWidth + 2 * frameWidth) * x;
    img.style.borderImageSource = `url(frame-styles/${frameStyle}.jpg)`;
    img.style.borderImageSlice = frameImageSlices[frameStyle];
    img.style.borderWidth = `${frameWidth * x}px`;
    img.style.backgroundColor = matColors[matColor];
    img.style.padding = `${matWidth * x}px`;
}

export function calculatePrice(printSize, frameStyle, frameWidth, matWidth) {

    let price1 = 0;

  var size = {
        'S' : 1,
        'M' : 2,
        'L' : 3.5
    };

    var frame_costs = {
        'classic' : 1,
        'natural' : 0.8,
        'shabby' : 0.9,
        'elegant' : 0.85
    };

    const price = (30 + frame_costs[frameStyle] * (frameWidth / 10) + 0.05 * (matWidth / 10)) * size[printSize];


    return (Math.round((price + Number.EPSILON) * 100) / 100);
}const met_url = "https://collectionapi.metmuseum.org/public/collection/v1/";

export async function getObject(objectID){
    let object = JSON.parse(localStorage.getItem(objectID));
    if(!object)
    return object;
}


    import * as Cart from './cart.js'
    Cart.countProducts();
  const pictureElement = document.querySelector('.gallery');
const searchButton = document.querySelector('.search-button');
const searchItems = document.getElementById('search');
var count = 0;
let artworks = [];
const highlights = [39799, 459055, 437853, 435809, 436535, 360018, 634108, 459080, 435882, 271890, 459054, 436105];
const loc = window.location.href.split('?')[0];



const heading = document.getElementById('search-info');

if (window.location.href.split('?')[1]!=undefined)
{
  let s = 'Searching for “' + window.location.href.split('=')[1] + '”\.\.\.';
  heading.textContent = s.replace(/[+]/g, " ");
}




const searchForm = document.querySelector('.search-form');
searchForm.addEventListener('submit', )


async function getItems(values){
    const url = "https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&q=" + values;
    const response = await fetch(url);
    const json = await response.json();
    const arr = json.objectIDs;
    const gallery = document.getElementById('gallery');
    gallery.innerHTML = "";
    count = 0;
    if (arr != null){
      for (const objectID of arr){
        let oldKey = localStorage.getItem(objectID);
        if (!oldKey)
        else {
          let item = JSON.parse(localStorage.getItem(objectID));

          const thumbElement = document.createElement('div');
          thumbElement.classList.add('thumb');

          const object0Element = document.createElement('a');
          object0Element.classList.add('object-0');
          object0Element.setAttribute('id','object-0');
          object0Element.setAttribute('href', 'config.html?objectID=' + objectID);
          thumbElement.appendChild(object0Element);

          const objectImage0Element = document.createElement('img');
          objectImage0Element.src = item.primaryImageSmall;
          objectImage0Element.classList.add('object-image-0');
          objectImage0Element.setAttribute('id','object-image-0');
          object0Element.appendChild(objectImage0Element);

          const museumLabelElement = document.createElement('div');
          museumLabelElement.classList.add('museum-label');
          object0Element.appendChild(museumLabelElement);

          const artistElement = document.createElement('span');
          artistElement.classList.add('artist');
          var artist = document.createTextNode(item.artistDisplayName);
          artistElement.appendChild(artist);
          museumLabelElement.appendChild(artistElement);

          const titleElement = document.createElement('span');
          titleElement.classList.add('title');
          var title = document.createTextNode(item.title + ", ");
          titleElement.appendChild(title);
          museumLabelElement.appendChild(titleElement);

          const dateElement = document.createElement('span');
          dateElement.classList.add('date');
          var date = document.createTextNode(item.objectDate);
          dateElement.appendChild(date);
          museumLabelElement.appendChild(dateElement);

          pictureElement.appendChild(thumbElement);
          count = count + 1;
          if (count==100)
            
        }
      }
    }
  if (count!=1)
    heading.textContent = "Found " + count + " artworks for “" + values + "”";
}

function parseNamesFromInput(namesString){
  return namesString.split(',');
}

document.addEventListener('DOMContentLoaded', event => {
  const params = (new URL (document.location)).searchParams;
  const pictureQuery = params.get('q');

  if (!pictureQuery)

  getItems(parseNamesFromInput(pictureQuery));

});


