import { render, calculatePrice } from "./frame.js";
class ArtworkFull {
  
}
window.onload = () => {
  let configs = JSON.parse(localStorage.getItem('cart'));
  base();
  if (configs) {
    if (configs.length > 0) 
  }
};
function base() {
  document.getElementById('cart').innerHTML = '<div id="empty-cart">There are no items in your shopping cart.</div>';
  document.getElementById('cart').appendChild(createTotalPrice(false));
  setHeader(0);
}






function createTotalPrice(active) {
  let div = document.createElement('div');
  div.className = 'cart-total';
  div.innerHTML =
    `<div class="price">Total: € <span id="price-total">0.00</span></div>
             <button type="button" id="checkout-button" ${active  : 'disabled'} >Checkout</button>`;
  div.childNodes[2].addEventListener('click', );
  return div;
}
function setHeader(length) {
  document.getElementById('cart-link').innerText = `Cart ${length > 0  : ''}`;
}

import * as frameFunc from './frame.js';

class Artwork {
  constructor(objectID, printSize, frameWidth, frameStyle, matWidth, matColor, price, totalSize) {
    this.objectID = objectID;
    this.printSize = printSize;
    this.frameWidth = frameWidth;
    this.frameStyle = frameStyle;
    this.matWidth = matWidth;
    this.matColor = matColor;
    this.price = price;
    this.totalsize = totalSize;
  }
}

let oid;
let params;
const artwork = new Artwork(0, "M", "4", "natural", "5.5", "mint");
const frametxt = document.getElementsByName("frameWidth")[0];
const mattxt = document.getElementsByName("matWidth")[0];
const frameslider = document.getElementsByName("frameWidthR")[0];
const matslider = document.getElementsByName("matWidthR")[0];
const form = document.getElementById("config-form");

mattxt.addEventListener('change', );
frametxt.addEventListener('change', );
frameslider.addEventListener('input', );
matslider.addEventListener('input', );
window.onload = function () {
  params = new URLSearchParams(window.location.search);
  if (params.has("objectID")) {
    oid = params.get("objectID");
  }
  if (params.has("frameStyle")) 
  if (params.has("matColor")) 
  if (params.has("printSize")) 
  if (params.has("frameWidth")) 
  if (params.has("matWidth")) 
  retrievePic(oid);
  let cart = document.getElementById('cart-link');
  let cartsize = JSON.parse(localStorage.getItem('cart')).length;
  if (cartsize > 0)  else {
    cart.innerText = `Cart`;
  }
};

function setValues(item) {
  document.getElementById("preview-image").src = item.primaryImageSmall;
  document.getElementById("image-label").innerHTML = "<b>" + item.title + "</b><br>" + item.artistDisplayName + " " + item.objectDate;
  let printsizes = frameFunc.getPrintSizes(document.getElementById("preview-image"));
  document.getElementById("print-size-s-label").innerHTML = "Small<br>" + (printsizes.S[0] / 10) + " &times; " + (printsizes.S[1] / 10) + " cm";
  document.getElementById("print-size-m-label").innerHTML = "Medium<br>" + (printsizes.M[0] / 10) + " &times; " + (printsizes.M[1] / 10) + " cm";
  document.getElementById("print-size-l-label").innerHTML = "Large<br>" + (printsizes.L[0] / 10) + " &times; " + (printsizes.L[1] / 10) + " cm";
  updateArtwork();
}

function retrievePic() {
  if (localStorage.getItem(oid) !== null) {
    let item = JSON.parse(localStorage.getItem(oid));
    setValues(item);
  }
}

const printsize = document.getElementsByName("printSize");
for (let i = 0; i < printsize.length; i++) {
  printsize[i].addEventListener('change', );
}
const matrow = document.getElementsByClassName("mat-color-item");
for (let i = 0; i < matrow.length; i++) {
  matrow[i].children[0].addEventListener('change', );
}
const framerow = document.getElementsByClassName("frame-style-item");
for (let i = 0; i < framerow.length; i++) {
  framerow[i].children[0].addEventListener('change', );
}



function updateArtwork() {
  frameFunc.render(document.getElementById("preview-image"),
    document.getElementById("preview-container"),
    artwork.printSize,
    artwork.frameStyle,
    artwork.frameWidth,
    artwork.matColor,
    artwork.matWidth);
  artwork.price = frameFunc.calculatePrice(artwork.printSize, artwork.frameStyle, artwork.frameWidth, artwork.matWidth);
  document.getElementById("price").innerText = `€ ${artwork.price.toFixed(2)}`;
  let size = frameFunc.getPrintSizes(document.getElementById("preview-image"));
  let totalsize = [0, 0];
  if (artwork.printSize === "S") 
  if (artwork.printSize === "M") { totalsize[0] = size.M[0]; totalsize[1] = size.M[1]; }
  if (artwork.printSize === "L") 
  totalsize[0] = (totalsize[0] / 10) + parseFloat(artwork.frameWidth) + parseFloat(artwork.matWidth);
  totalsize[1] = (totalsize[1] / 10) + parseFloat(artwork.frameWidth) + parseFloat(artwork.matWidth);
  artwork.totalsize = totalsize;
  document.getElementById("total-size").innerHTML = (totalsize[0]).toFixed(2) + " &times; " + (totalsize[1]).toFixed(2);
}

form.addEventListener('submit', )
export 

export 

export 


        const highlights = [39799, 459055, 437853, 435809, 436535, 360018, 634108, 459080, 435882, 271890, 459054, 436105];
        const gallery = document.getElementById('gallery');
        const form = document.querySelector('.search-form');
        const searchText = document.getElementById('search-info');

        class Picture {
            
        }


        window.onload = () => { updateHeader(); };

        document.addEventListener('DOMContentLoaded', event => {
            const params = (new URL(document.location)).searchParams;
            const Query = params.get('q');
            console.log("Query is:" + Query);
            if (!Query) {
                defaultSite(gallery);
                return;
            }});

        form.addEventListener('submit', );

        

        function defaultSite(gallery) {
            for (let pic of highlights) {
                console.log(pic);
                const result = cachedRetrieveById(pic);
                result.then(function (res2) {
                    gallery.appendChild(createPictureNode(res2));
                });
            }
        }

        

        

        async function cachedRetrieveById(object) {
            const cache = localStorage.getItem(object);
            if (cache) {
                console.log("Loading Cached entry: " + object);
                return JSON.parse(cache);
            }}

        

        

        

        

        function createPictureNode(picture) {
            var objectID = "object-" + picture.objectID;
            var imageID = "object-image-" + picture.objectID;
            var imageURL = "./config.html?objectID=" + picture.objectID;
            const div = document.createElement('div')
            div.innerHTML +=
                `<a href="${imageURL}" id="${objectID}">
          <img src="${picture.primaryImageSmall}" alt="${picture.title}" id="${imageID}">
          <div class="museum-label">
            <span class="artist">${picture.artistDisplayName}</span>
            <span class="title">${picture.title}</span>,
            <span class="date">${picture.objectDate}</span>
          </div>
        </a>`;
            return div;
        }

        

        

        

        

        

        function updateHeader() {
            let cartsize = JSON.parse(localStorage.getItem('cart')).length;
            if (cartsize) 
        }

        
    