import {fetchArtwork} from './common.js';
import {render} from './frame.js';
import {calculatePrice} from './frame.js';

function showItems() {
    items = 0;
    priceTotal = 0;
    const cart = JSON.parse(localStorage.getItem('cart'));
    if (!Array.isArray(cart) || cart.length === 0) {
        document.getElementById('cart-link').innerHTML = 'Cart';
        document.getElementById('cart').insertAdjacentHTML('afterbegin', '<p>There are no items in your shopping cart.</p>');
        document.getElementById('checkout-button').disabled = true;
        document.getElementById('price-total').innerHTML = '0.00';
    }
}





let items;
let priceTotal;
showItems();
document.getElementById('checkout-button').addEventListener('click', );
export const ARTMART_BASE_URL = 'https://web-engineering.big.tuwien.ac.at/s20/a2/';
export const MET_BASE_URL = 'https://collectionapi.metmuseum.org/public/collection/v1/';

class CartItem{
    
}

const CART_TEST = [{
    "objectID": 768979,
    "printSize": "L",
    "frameStyle": "shabby",
    "frameWidth": 21,
    "matColor": "wine",
    "matWidth": 6
}];

const setCartStorage = ;

const OBJ_TEST = {
    "objectID": 45734,
    "isHighlight": false,
    "accessionNumber": "36.100.45",
    "accessionYear": "1936",
    "isPublicDomain": true,
    "primaryImage": "https://images.metmuseum.org/CRDImages/as/original/DP251139.jpg",
    "primaryImageSmall": "https://images.metmuseum.org/CRDImages/as/web-large/DP251139.jpg",
    "additionalImages": [
        "https://images.metmuseum.org/CRDImages/as/original/DP251138.jpg",
        "https://images.metmuseum.org/CRDImages/as/original/DP251120.jpg"
    ],
    "constituents": [
        {
            "role": "Artist",
            "name": "Kiyohara Yukinobu",
            "constituentULAN_URL": "https://vocab.getty.edu/page/ulan/500034433",
            "constituentWikidata_URL": "https://www.wikidata.org/wiki/Q11560527",
            "gender": "Female"
        }
    ],
    "department": "Asian Art",
    "objectName": "Hanging scroll",
    "title": "Quail and Millet",
    "culture": "Japan",
    "period": "Edo period (1615–1868)",
    "dynasty": "",
    "reign": "",
    "portfolio": "",
    "artistRole": "Artist",
    "artistPrefix": "",
    "artistDisplayName": "Kiyohara Yukinobu",
    "artistDisplayBio": "Japanese, 1643–1682",
    "artistSuffix": "",
    "artistAlphaSort": "Kiyohara Yukinobu",
    "artistNationality": "Japanese",
    "artistBeginDate": "1643",
    "artistEndDate": "1682",
    "artistGender": "Female",
    "artistWikidata_URL": "https://www.wikidata.org/wiki/Q11560527",
    "artistULAN_URL": "https://vocab.getty.edu/page/ulan/500034433",
    "objectDate": "late 17th century",
    "objectBeginDate": 1667,
    "objectEndDate": 1682,
    "medium": "Hanging scroll; ink and color on silk",
    "dimensions": "46 5/8 x 18 3/4 in. (118.4 x 47.6 cm)",
    "creditLine": "The Howard Mansfield Collection, Purchase, Rogers Fund, 1936",
    "geographyType": "",
    "city": "",
    "state": "",
    "county": "",
    "country": "",
    "region": "",
    "subregion": "",
    "locale": "",
    "locus": "",
    "excavation": "",
    "river": "",
    "classification": "Paintings",
    "rightsAndReproduction": "",
    "linkResource": "",
    "metadataDate": "2020-02-07T15:50:59.677Z",
    "repository": "Metropolitan Museum of Art, New York, NY",
    "objectURL": "https://wwwstg.metmuseum.org/art/collection/search/45734",
    "tags": [
        {
            "term": "Birds",
            "AAT_URL": "https://vocab.getty.edu/page/aat/300266506"
        },
        {
            "term": "Leaves",
            "AAT_URL": "https://vocab.getty.edu/page/aat/300011892"
        }
    ],
    "objectWikidata_URL": "https://www.wikidata.org/wiki/Q29910832",
    "isTimelineWork": false
};

const setObjStorage = ;

export 

export 

export {setCartStorage, CartItem, setObjStorage}
import {CartItem} from "./common.js"
import {showCartNumber} from "./common.js";
import {fetchArtwork} from "./common.js";
import {getPrintSizes} from "./frame.js";
import {render} from "./frame.js";
import {calculatePrice} from "./frame.js";

class Configurator{
    constructor() {
        const urlParams = new URLSearchParams(location.search);
        this.cartItem = new CartItem(urlParams.get("objectID"),
            nullToUndefined(urlParams.get("printSize")),
            nullToUndefined(urlParams.get("frameStyle")),
            cmToMM(nullToUndefined(urlParams.get("frameWidth"))),
            nullToUndefined(urlParams.get("matColor")),
            cmToMM(nullToUndefined(urlParams.get("matWidth"))));
    }
    updateValuesinHTML() {
        const printSizeEl = document.getElementById(`print-size-${this.cartItem.printSize.toLowerCase()}`);
        printSizeEl.checked = true;

        const frameInputEl = document.getElementsByName('frameWidth')[0];
        frameInputEl.value = this.cartItem.frameWidth;
        frameInputEl.dispatchEvent(new Event('change'));

        const frameStyleEl = document.getElementById(`frame-style-${this.cartItem.frameStyle.toLowerCase()}`);
        frameStyleEl.checked = true;

        const matInputEl = document.getElementsByName('matWidth')[0];
        matInputEl.value = this.cartItem.matWidth;
        matInputEl.dispatchEvent(new Event('change'));

        const matColorEl = document.getElementById(`mat-color-${this.cartItem.matColor.toLowerCase()}`);
        matColorEl.checked = true;
    }
}

function cmToMM(cmValue){
    if (cmValue )  else {
        return undefined;
    }
}
function nullToUndefined(param1) {
    if (param1 === null) {
        return undefined;
    }
}

function setIfInRange(el1, el2, lower, upper, cartItemKey) {
    el1.value = (Math.round((parseFloat(el1.value) + Number.EPSILON) * 10) / 10);
    el2.value = (Math.round((parseFloat(el2.value) + Number.EPSILON) * 10) / 10);

    if (el1.value >= lower && el1.value <= upper) {
        el2.value = el1.value;
    }
    if (cartItemKey) {
        conf.cartItem[cartItemKey] = el1.value;
    }
}

function updateForm() {
    if (imageLoaded) {
        render(document.getElementById("preview-image"), document.getElementById("preview-container"), conf.cartItem.printSize, conf.cartItem.frameStyle, conf.cartItem.frameWidth * 10, conf.cartItem.matColor, conf.cartItem.matWidth * 10);
    }
    setPrice();
    setTotalSize();
}

function setPrice() {
    const total = calculatePrice(conf.cartItem.printSize, conf.cartItem.frameStyle, conf.cartItem.frameWidth * 10, conf.cartItem.matWidth * 10);
    document.getElementById('price').innerText = "€ " + total.toFixed(2);
}

function setTotalSize() {
    const size = getPrintSizes(document.getElementById('preview-image'));
    const width = Math.floor(size[conf.cartItem.printSize][0] + 20 * (parseFloat(conf.cartItem.frameWidth) + parseFloat(conf.cartItem.matWidth))) / 10;
    const height = Math.floor(size[conf.cartItem.printSize][1] + 20 * (parseFloat(conf.cartItem.frameWidth) + parseFloat(conf.cartItem.matWidth))) / 10;
    document.getElementById('total-size').innerHTML = `${width} × ${height} cm`;
}



showCartNumber();

const conf = new Configurator();

let imageLoaded = false;

const frameSlider = document.getElementsByName('frameWidthR')[0];
const frameInput = document.getElementsByName('frameWidth')[0];
const matSlider = document.getElementsByName('matWidthR')[0];
const matInput = document.getElementsByName('matWidth')[0];

frameSlider.addEventListener('change', );
frameInput.addEventListener('change', () => {
    setIfInRange(frameInput, frameSlider, 2.0, 5.0, "frameWidth");
    updateForm();
});
matSlider.addEventListener('change', );
matInput.addEventListener('change', () => {
    setIfInRange(matInput, matSlider, 0.0, 10.0, "matWidth");
    updateForm();
});

conf.updateValuesinHTML();

const printSize = document.getElementsByClassName("segmented")[0];
const frameStyle = document.getElementsByClassName("frame-style-row")[0];
const matColor = document.getElementsByClassName("mat-color-row")[0];

printSize.addEventListener('change', );
frameStyle.addEventListener('change', );
matColor.addEventListener('change', );

document.getElementsByClassName('buy')[0].addEventListener('click', addItem);

if (!conf.cartItem.objectID)  else {
    fetchArtwork(conf.cartItem.objectID, obj => {
        if (!obj) 

        const previewImgEl = document.getElementById("preview-image");
        previewImgEl.setAttribute("src", obj.primaryImageSmall);

        const imgLabelEL = document.getElementById("image-label");

        let imgArtistEl = document.createElement("p");
        imgArtistEl.setAttribute("class", "artist");
        imgArtistEl.innerText = obj.artistDisplayName;

        let imgLabelDescriptionEl = document.createElement("p");

        let imgLabelDescriptionTitleEl = document.createElement("span");
        imgLabelDescriptionTitleEl.setAttribute("class", "title");
        imgLabelDescriptionTitleEl.innerText = obj.title;

        const imgLabelDescriptionDateEl = document.createTextNode(', ' + obj.objectDate);

        imgLabelDescriptionEl.appendChild(imgLabelDescriptionTitleEl);
        imgLabelDescriptionEl.appendChild(imgLabelDescriptionDateEl);

        imgLabelEL.appendChild(imgArtistEl);
        imgLabelEL.appendChild(imgLabelDescriptionEl);

        previewImgEl.addEventListener('load', () => {
            imageLoaded = true;
            const sizes = getPrintSizes(previewImgEl);
            document.getElementById('print-size-s-label').innerHTML = `Small<br>${sizes.S[0] / 10} × ${sizes.S[1] / 10} cm`;
            document.getElementById('print-size-m-label').innerHTML = `Medium<br>${sizes.M[0] / 10} × ${sizes.M[1] / 10} cm`;
            document.getElementById('print-size-l-label').innerHTML = `Large<br>${sizes.L[0] / 10} × ${sizes.L[1] / 10} cm`;
            updateForm();
        });
    })
}
export 

export 

export 

export const priceMapping = { 'classic': 1, 'natural': 0.8, 'shabby': 0.9, 'elegant': 0.85, 'S': 1.0, 'M': 2.0, 'L': 3.5 }





import {showCartNumber} from './common.js';

async function getArtworks(query) {
    let respJson;
    if (query == null  ) {
        respJson = {total: 12, objectIDs: [39799, 459055, 437853, 435809, 436535, 360018, 634108, 459080, 435882, 271890, 459054, 436105]};
    }

    let maxItems = respJson.total;
    if (maxItems > 100) 

    setSearchInfoFoundItems(respJson.total, query);

    for (let i = 0; i < maxItems; i++) {
        let artwork = await getArtworkById(respJson.objectIDs[i]);
        addArtworkToDOM(artwork);
    }
}

async function getArtworkById(id) {
    let cache = JSON.parse(localStorage.getItem('cache'));
    if (cache !== null) {
        const data = cache.find(obj => obj.objectID === id);
        if (data !== undefined) return data;

    }}


function addArtworkToDOM(artwork) {
    let gallery = document.getElementById("gallery");

    let artworkThumb = document.createElement("div");
    artworkThumb.className = "thumb";
    let artworkElement = document.createElement("a");
    artworkElement.id = artwork.objectID;
    artworkElement.href = `config.html?objectID=${artwork.objectID}`;
    let artworkImg = document.createElement("img");
    artworkImg.id = artwork.objectID + "-image";
    artworkImg.src = artwork.primaryImageSmall;
    let label = document.createElement("div");
    label.className = "museum-label";
    let artist = document.createElement("span");
    artist.className = "artist";
    artist.innerText = artwork.artistDisplayName;
    let title = document.createElement("span");
    title.className = "title";
    title.innerText = artwork.title;
    let date = document.createElement("span");
    date.className = "date";
    date.innerText = artwork.objectDate;


    label.appendChild(artist);
    label.appendChild(title);
    let commaText = document.createTextNode(', ');
    label.appendChild(commaText);
    label.appendChild(date);

    artworkElement.appendChild(artworkImg);
    artworkElement.appendChild(label);
    artworkThumb.appendChild(artworkElement);
    gallery.appendChild(artworkThumb);


}

function setSearchInfoFoundItems(itemAmount, searchValue) {
    const searchInfo = document.getElementById("search-info");
    if (searchValue == null  ) {
        searchInfo.innerText = `Search our collection of more than 400,000 artworks.`;
    }

}

function setSearchInfo(searchValue) {
    const searchInfo = document.getElementById("search-info");
    searchInfo.innerText = `Searching for “${searchValue}”...`;
}


showCartNumber();

document.addEventListener('DOMContentLoaded', () => {
    const params = (new URL(document.location)).searchParams;
    const searchValue = params.get('q');

    setSearchInfo(searchValue);

    getArtworks(searchValue)
        .then()
        .catch();
});
