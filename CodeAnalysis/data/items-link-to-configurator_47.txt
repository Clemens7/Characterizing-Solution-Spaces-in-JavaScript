


        import {calculatePrice, render} from "./frame.js";

        const wrapper = document.getElementById('cart');

        let sumTotal = 0;


        const checkoutButton = document.getElementById('checkout-button');
        const total = document.getElementById('price-total');
        const empty = document.createElement('h1');
        empty.innerHTML = 'There are no items in your shopping cart. <br><br>';
        const cartLink = document.getElementById('cart-link');
        const objectAPI = 'https://collectionapi.metmuseum.org/public/collection/v1/objects/';




        checkoutButton.addEventListener('click', );

        document.addEventListener('DOMContentLoaded', event => {

            if (!isEmpty()) {
                showItems();
            }

        });


        function isEmpty() {
            console.log(JSON.parse(localStorage.getItem('cart')));
            if (localStorage.getItem('cart') == null || JSON.parse(localStorage.getItem('cart')).length === 0) 
            return false;
        }


        async function getImageObject(imgID) {
            let picture = JSON.parse(localStorage.getItem(imgID));

            if (!picture) {
                let response = await fetch(objectAPI + imgID);
                picture = await response.json();

                localStorage.setItem(imgID, JSON.stringify(picture));
            }
            return picture;
        }


        async function showItems() {
            const currentCart = JSON.parse(localStorage.getItem('cart'));
            cartLink.innerText = "Cart (" + currentCart.length + ")"
            for (let object of currentCart) {

                let img = await getImageObject(object.objectID);

                console.log(object.printSize);
                console.log(object.frameStyle);
                console.log(object.frameWidth);
                console.log(object.matWidth);
                let imgPrice = calculatePrice(object.printSize, object.frameStyle, object.frameWidth, object.matWidth);
                sumTotal += imgPrice;
                total.textContent = sumTotal.toFixed(2) + "";

                const cartItem = document.createElement('div');
                cartItem.className = 'cart-item';

                const picture = document.createElement('img');
                picture.className = "cart-thumb";
                picture.setAttribute("src", img.primaryImageSmall);
                picture.setAttribute("id", "preview-" + img.objectID);

                const preview = document.createElement('div');
                preview.className = "cart-preview";
                preview.setAttribute("id", "preview-container-" + img.objectID);

                picture.addEventListener('load', () => render(picture, preview, object.printSize, object.frameStyle, object.frameWidth, object.matColor, object.matWidth));

                const link = document.createElement('a');
                link.setAttribute("href", "config.html?objectID=" + img.objectID + "&printSize=" + object.printSize + "&frameStyle=" + object.frameStyle + "&frameWidth=" + object.frameWidth + "&matColor=" + object.matColor + "&matWidth=" + object.matWidth);

                link.appendChild(picture);
                preview.appendChild(link);
                cartItem.appendChild(preview);

                const label = document.createElement('div');
                label.className = 'museum-label';
                label.innerHTML = `<div class="cart-price">â‚¬ <span id="price-${img.objectID}">${imgPrice.toFixed(2)}</span></div>`;

                const info = document.createElement('div');
                info.innerHTML = `
                    <span class="artist">${img.artistDisplayName}</span>
                    <span class="title">${img.title}</span>,
                    <span class="date">${img.objectDate}</span>
                    <br><br>`;

                let pSize = "";
                if (object.printSize == "S")
                    pSize = "Small";
                else if (object.printSize == "M")
                    pSize = "Medium";
                else
                    pSize = "Large";

                let descr = pSize + " print in a " + object.frameWidth/10 + " cm " + object.frameStyle + " frame";
                if (object.matWidth != 0)
                    descr += " with a " + object.matWidth/10 + " cm " + object.matColor + " mat";
                descr += ".";

                const description = document.createElement('span');
                description.className = "frame-description";
                description.innerText = descr;
                info.appendChild(description);
                label.insertBefore(info, label.firstChild);

                console.log(description.innerText);


                const removeButton = document.createElement('button');
                removeButton.className = 'cart-remove';
                removeButton.onclick = ;

                label.appendChild(removeButton);
                cartItem.appendChild(label);
                wrapper.insertBefore(cartItem, wrapper.firstChild);

            }
        }

        

        

    export function getPrintSizes(img) {
    let S = [297, 297]; // A4
    let M = [420, 420]; // A3
    let L = [594, 594]; // A2

    const w = img.naturalWidth;
    const h = img.naturalHeight;

    if (h > w)  else {
        S[1] = Math.floor(h * S[0] / w);
        M[1] = Math.floor(h * M[0] / w);
        L[1] = Math.floor(h * L[0] / w);
    }

    return { S: S, M: M, L: L };
}

export function render(img, container, printSize, frameStyle, frameWidth, matColor, matWidth) {
    const printSizes = getPrintSizes(img);
    const w = printSizes[printSize][0];
    const h = printSizes[printSize][1];

    let x;
    if (w > h) {
        x = container.offsetWidth / (w + 2 * matWidth + 2 * frameWidth);
    }

    const frameImageSlices = {
        classic: 115,
        natural: 75,
        shabby: 120,
        elegant: 107
    };

    const matColors = {
        ivory: '#fffff0',
        mint: '#e0e6d4',
        wine: '#50222d',
        indigo: '#29434c',
        coal: '#333a3d',
    };

    img.style.boxSizing = 'border-box';
    img.width = (w + 2 * matWidth + 2 * frameWidth) * x;
    img.height = (h + 2 * matWidth + 2 * frameWidth) * x;
    img.style.borderImageSource = `url(frame-styles/${frameStyle}.jpg)`;
    img.style.borderImageSlice = frameImageSlices[frameStyle];
    img.style.borderWidth = `${frameWidth * x}px`;
    img.style.backgroundColor = matColors[matColor];
    img.style.padding = `${matWidth * x}px`;
}

export function calculatePrice(printSize, frameStyle, frameWidth, matWidth) {
    let price = 30.0;

    const stylePrices = {
        classic: 1.00,
        natural: 0.80,
        shabby: 0.90,
        elegant: 0.85
    };

    const sizePrices = {
        S: 1.0,
        M: 2.0,
        L: 3.5
    };

    let woodCost = stylePrices[frameStyle] * (frameWidth/10);
    let matCost = 0.05 * (matWidth/10);

    price += woodCost + matCost;

    return (Math.round((price*sizePrices[printSize] + Number.EPSILON) * 100) / 100);
}
