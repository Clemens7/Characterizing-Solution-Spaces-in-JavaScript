import * as Frame from './frame.js';
import * as Cache from './cache.js';

export function generateThumbnail(object, container) {
    let id = object.objectID;
    let thumbNode = document.createElement("div");
    thumbNode.className = "thumb";

    let linkNode = document.createElement("a");
    linkNode.setAttribute("href", `config.html?objectID=${id}`);
    linkNode.setAttribute("id", `object-${id}`);
    thumbNode.appendChild(linkNode);

    let imgNode = document.createElement("img");
    imgNode.setAttribute("src", object.primaryImageSmall)
    imgNode.setAttribute("id", `object-image-${id}`);
    imgNode.setAttribute("alt", object.title)
    linkNode.appendChild(imgNode);

    let museumNode = document.createElement("div");
    museumNode.className = "museum-label";
    linkNode.appendChild(museumNode);

    generateArtLabel(object, museumNode);

    container.appendChild(thumbNode);
}

export function generateArtLabel(object, container) {
    let artistsNode = document.createElement("span");
    artistsNode.className = "artist";
    artistsNode.innerHTML = object.artistDisplayName;
    container.appendChild(artistsNode);

    let titleNode = document.createElement("span");
    titleNode.className = "title"
    titleNode.innerHTML = object.title + ", ";
    container.appendChild(titleNode);

    let dateNode = document.createElement("span");
    dateNode.className = "date";
    dateNode.innerHTML = object.objectDate;
    container.appendChild(dateNode);
}


export 



export 
import { calculatePrice } from './frame.js';

const searchLimit = 100;
const cartKey = 'cart';

export async function searchArt(queryString) {
    let searchObj = retrieve(queryString);

    if (searchObj == 'undefined') {
        searchObj = await apiSearch(queryString);
        store(queryString, searchObj);
    }
    return searchObj;
};

export async function getObjectData(id) {
    let artObj = retrieve(id);

    if (artObj == 'undefined') {
        artObj = await apiObject(id);
        store(id, artObj);
    }
    return artObj;
}

async function apiSearch(queryString) {
    console.log(`Retrieving objects associated with ${queryString} from external API`);
    const response = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?q=${queryString}&hasImages=true`);
    let responseData = await response.json();

    if (responseData.total > searchLimit) 

    return responseData;
};

async function apiObject(id) {
    console.log(`Retrieving object associated with ID: ${id} from external API`);
    const response = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${id}`);
    const responseData = await response.json();
    return responseData;
}


export 

export function getCart() {

    let cart = JSON.parse(window.localStorage.getItem(cartKey));

    if (cart === null ) {
        return null;
    }}

export 


function store(key, object) {
    console.log(`Storing object with id ${key} in localStorage`);
    localStorage[key] = JSON.stringify(object);
}

function retrieve(objectID) {
    if (objectID in localStorage)  else {
        return 'undefined';
    }
}

export 


export function generateCartString(){
    let cart = getCart();

    if (cart == null ){
        return "Cart";
    }
}export 

export 

export 
import * as Cache from './cache.js';
import { generateThumbnail } from './artmart-dom.js';

const query = window.location.search;
const queryParametrs = new URLSearchParams(query);
const searchString = queryParametrs.get('q');

if (typeof searchString != 'string' || searchString.length === 0) 

else {
  document.getElementById("search").value = searchString;
  document.getElementById("search-info").innerHTML = `Searching for \u201C${searchString}\u201D...`;

  console.log(searchString);
  Cache.searchArt(searchString).then(response => {
    const number = response.total;
    let artworks;
    if (number == 1)  else {
      artworks = "artworks";
    }
    document.getElementById("search-info").innerHTML = `Found ${number} ${artworks} for \u201C${searchString}\u201D`;
    generateThumbnails(response.objectIDs);
  });
}

function generateThumbnails(ids) {
  let galleryElement = document.getElementById("gallery");

  for (const id of ids) {
    Cache.getObjectData(id).then(res => generateThumbnail(res, galleryElement));
  }
}

document.getElementById("cart-link").innerHTML = Cache.generateCartString();