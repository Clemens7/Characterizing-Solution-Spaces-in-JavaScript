

    import * as Frame from './frame.js';

    function reset_shopping_cart(){
      document.getElementById("checkout-button").onclick = ;
      document.getElementById("checkout-button").disabled = false;
      document.getElementById("price-total").innerText = "0";
      document.querySelectorAll(".cart-item").forEach();
      document.getElementById('cart-link').innerText = `Cart`;

      if (!('cart' in localStorage) || localStorage.cart === "" || localStorage.cart === "[]"){
        document.getElementById("cart").insertAdjacentText('afterbegin', 'There are no items in your shopping cart.');

        document.getElementById("checkout-button").disabled = true;
      }
    }

    

    async function fill_shopping_cart(){

      const cart_container = document.getElementById("cart");

      if ("cart" in localStorage && localStorage.cart !== "") {
        const my_cart = JSON.parse(localStorage.cart);
        for (let c of my_cart) 
      }

    }

    

    




    
    
    

    window.onload = function(){
      reset_shopping_cart();
      fill_shopping_cart();
    };

  
  import * as Frame from './frame.js';

  function updateFrame(){
    Frame.render( img, img_container, printSize, frameStyle, frameWidth*10, matColor, matWidth*10 );

    const price = document.getElementById('price');
    const price_value =  Frame.calculatePrice(printSize, frameStyle, frameWidth*10, matWidth*10);
    price.innerHTML = "â‚¬ " + price_value.toFixed(2);

    const totalSize = document.getElementById('total-size');
    let x = Frame.getPrintSizes(img);
    totalSize.innerHTML = (x[printSize][0] + frameWidth*10 + matWidth*10)/10 + " x " + (x[printSize][1] + frameWidth*10 + matWidth*10)/10 + " cm";
  }

  function readDefault( key, def ) {
    let urlParams = new URLSearchParams(window.location.search);
    let res = urlParams.get(key);
    if( res ) return res;
    else      return def;
  }

  var objectID   = readDefault('objectID', 0);
  var printSize  = readDefault('printSize','M');
  var frameStyle = readDefault('frameStyle','natural');
  var frameWidth = readDefault('frameWidth',40)/10;
  var matColor   = readDefault('matColor','mint');
  var matWidth   = readDefault('matWidth',55)/10;

  document.addEventListener("DOMContentLoaded", function() {
    let width;

    if( frameWidth )
    {
      width = document.querySelector('#frameWidthR');
      width.value = minMaxRound(2,5,frameWidth);
      width = document.querySelector('#frameWidthN');
      width.value = minMaxRound(2,5,frameWidth);
    }

    if( matWidth )
    {
      width = document.querySelector('#matWidthR');
      width.value = minMaxRound(0,10,matWidth);
      width = document.querySelector('#matWidthN');
      width.value = minMaxRound(0,10,matWidth);
    }

    for( let sizes of document.getElementsByName("printSize") ) {
      if( sizes.value === printSize ) {
        sizes.checked = true;
      }
    }

    for( let frames of document.getElementsByName("frameStyle") ) {
      if( frames.value === frameStyle ) {
        frames.checked = true;
      }
    }
    for( let mats of document.getElementsByName("matColor") ) {
      if( mats.value === matColor ) {
        mats.checked = true;
      }
    }

    let cart_items = JSON.parse(localStorage.getItem("cart"));
    if( cart_items ) {
      let cart_label = document.getElementById("cart-link");
      cart_label.innerHTML = "Cart (" + cart_items.length + ")";
    }
  });

  var img = document.getElementById('preview-image');
  var img_container = document.getElementById("preview-container");
  img.onload = function() {
    writeCorrectSize( Frame.getPrintSizes(img) );
    updateFrame();
  };

  async function retrievePainting(objectID) {
    if( !localStorage.getItem('ObjectID') || localStorage.getItem('ObjectID') !== objectID ) 

    console.log(JSON.parse(localStorage.getItem('rawData')));
    return JSON.parse(localStorage.getItem('rawData'));
  }

  function writePaintingLable( painting ) {
    let img_label = document.getElementById('image-label');
    img_label.innerHTML = "<b>" + painting.artistDisplayName + "</b><br>" + painting.title + " " + painting.objectDate;
  }

  async function loadPainting() {
    if( !objectID ) 
    const painting = await retrievePainting(objectID);
    if( painting.message === "ObjectID not found" ) 

    img.src = painting.primaryImageSmall;
    writePaintingLable( painting );
  }

  loadPainting();

  function writeCorrectSize( correctSize ) {
    var sizeElementS = document.getElementById("print-size-s-label");
    sizeElementS.innerHTML = "Small<br>" + correctSize.S[0]/10 + " x " + correctSize.S[1]/10 + " cm";
    var sizeElementM = document.getElementById("print-size-m-label");
    sizeElementM.innerHTML = "Medium<br>" + correctSize.M[0]/10 + " x " + correctSize.M[1]/10 + " cm";
    var sizeElementL = document.getElementById("print-size-l-label");
    sizeElementL.innerHTML = "Large<br>" + correctSize.L[0]/10 + " x " + correctSize.L[1]/10 + " cm";
  }

  function minMaxRound(min,max,val){
    if( val < min ) else if ( val > max ) else if ( (val*100)%10 )
    return val;
  }

  const frameWidthR = document.querySelector('#frameWidthR');
  const frameWidthN = document.querySelector('#frameWidthN');
  frameWidthR.addEventListener("change",);
  frameWidthN.addEventListener("change",);

  const matWidthR = document.querySelector('#matWidthR');
  const matWidthN = document.querySelector('#matWidthN');
  matWidthR.addEventListener("change",);
  matWidthN.addEventListener("change",);

  const allPrintSizes = document.getElementsByName("printSize");
  allPrintSizes[0].addEventListener('change', );
  allPrintSizes[1].addEventListener('change', );
  allPrintSizes[2].addEventListener('change', );

  const allFrameStyles = document.getElementsByName("frameStyle");
  allFrameStyles[0].addEventListener('change', );
  allFrameStyles[1].addEventListener('change', );
  allFrameStyles[2].addEventListener('change', );
  allFrameStyles[3].addEventListener('change', );

  const allMatColors = document.getElementsByName("matColor");
  allMatColors[0].addEventListener('change', );
  allMatColors[1].addEventListener('change', );
  allMatColors[2].addEventListener('change', );
  allMatColors[3].addEventListener('change', );
  allMatColors[4].addEventListener('change', );

  

  document.getElementById("buy").addEventListener("click", );

export 

export 

export 
        class Artwork {
            
        }

        const gallery = document.getElementById('gallery');
        const heading = document.getElementById('search-info');
        if (searchValue()) 


        document.addEventListener('DOMContentLoaded', event => {
            console.log('Dom content fully loaded');
            const q = searchValue();
            gallery.innerHTML = '';
            let cart = getCart();
            if(cart) {
                if(cart.length > 0) 
            }
            if (!q) {
                initializeWindow(gallery);
                return;
            }});

        const form = document.getElementById('search-form');
        form.addEventListener('submit', );

        

        function searchValue() {
            const params = (new URL(document.location)).searchParams;
            console.log('q' + params.get('q'));
            return params.get('q');
        }


        async function initializeWindow() {
            gallery.innerHTML = '';
            fetch('highlights.json').then(
                response => response.json().then(
                    ids => {
                        console.log(ids.highlights);
                        ids.highlights.forEach(
                            e => retrieveById(e).then(
                                result => gallery.appendChild(buildArtworkEntity(result))
                            ));
                    }));
        }

        async function retrieveById(id) {
            let artworkStored = retrieveFromLocalStorage(id);
            if (artworkStored) {
                console.log(`Retrieve artwork with id ${id} from local storage`);
                return artworkStored;
            }}

        function retrieveFromLocalStorage(id) {
            if (id in localStorage) {
                return JSON.parse(localStorage[id]);
            }
        }

        

        function getCart() {
            console.log('Load artworks in card');
            return JSON.parse(localStorage.getItem('cart'));
        }


        function buildArtworkEntity(artwork) {
            const outerContainer = document.createElement('div');
            outerContainer.className = "thumb";

            const aTag = document.createElement('a');
            aTag.id = artwork.id;
            aTag.href = `./config.html?objectID=${artwork.id}`;

            const image = document.createElement('img');
            image.src = artwork.image;
            image.id = 'object-image-' + artwork.id;

            const innerContainer = document.createElement('div');
            innerContainer.className = 'museum-label';
            innerContainer.appendChild(buildElement('span', artwork.artist, 'artist'));
            innerContainer.appendChild(buildElement('span', artwork.title + ", ", 'title'));
            innerContainer.appendChild(buildElement('span', artwork.date, 'date'));


            aTag.appendChild(image);
            aTag.appendChild(innerContainer);

            outerContainer.appendChild(aTag);

            return outerContainer;
        }

        function buildElement(tag, value, tagClass = "") {
            const element = document.createElement(tag);
            element.innerText = value;
            element.className = tagClass;
            return element;
        }


    