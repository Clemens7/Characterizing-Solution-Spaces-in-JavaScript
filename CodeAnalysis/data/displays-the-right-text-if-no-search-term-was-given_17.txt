import {updateCartNavigationItemCount} from "./common.js";

export 

export 

export function readCart() {
    let cart = localStorage.getItem('cart');
    if (!cart) {
        return [];
    }}

export 

export class CartObject {
    
}import {readCart} from "./cart-model.js";

const BASE_URL = "https://collectionapi.metmuseum.org/public/collection/v1/";

export async function getObject(objectID) {
    let object = JSON.parse(localStorage.getItem(objectID));

    if (!object) {
        let response = await fetch(BASE_URL + "objects/" + encodeURIComponent(objectID));) }

export 

export function updateCartNavigationItemCount(items = null) {
    let elem = document.getElementById("cart-link");
    if (elem) {
        let count = getCartItemCount(items);
        let str = "Cart";
        if (count > 0) 
        elem.innerText = str;
    }
}

function getCartItemCount(items = null) {
    if (items) 
    return readCart().length
}
        import {updateCartNavigationItemCount} from "./common.js";
        import {init} from './search.js';

        updateCartNavigationItemCount();
        init();
    import {search, getObject} from './common.js'

export async function init() {
    let searchParams = new URLSearchParams(window.location.search);
    try {
        await performSearch(searchParams.get('q'));}







async function performSearch(q) {
    let searchResult;
    if (q)  else {
        let response = await fetch('highlights.json');
        if (response.status !== 200) 
        let result = await response.json();
        searchResult = {
            total: result.highlights.length,
            objectIDs: result.highlights,
        }
    }
    try {
        await Promise.all(searchResult.objectIDs.map(id => {
            return getObject(id).then(addSearchResult);
        }));}
