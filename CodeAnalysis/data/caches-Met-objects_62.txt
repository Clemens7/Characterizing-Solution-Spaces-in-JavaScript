import * as DAL from "./DAL.js";
import * as frame from "./frame.js";

loadCart();

window.document.getElementById("cart-link").innerText = `Cart${getNumOfItems()}`;

window.document.getElementById("checkout-button").addEventListener("click", );

async function loadCart() {
  let artworks = JSON.parse(window.localStorage.getItem("cart"));
  let priceTotal = 0;
  const itemContainer = document.getElementById("cart");

  if (artworks) {
    for (let i in artworks) {
      let data = await DAL.getPicture(artworks[i].objectID);
      itemContainer.insertBefore(
        createCartItem(i, data, artworks[i]),
        itemContainer.firstChild
      );
      priceTotal += frame.calculatePrice(artworks[i].printSize,
        artworks[i].frameStyle,
        artworks[i].frameWidth,
        artworks[i].matWidth);

      let img = document.getElementById("preview-"+i);
      if (img.complete)  else {
        img.addEventListener("load", () => renderArtwork(i, artworks[i]));
      }
    }

    document.getElementById("price-total").innerHTML = priceTotal;

    const removeButtons = document.getElementsByClassName("cart-remove");
    for (let removeButton of removeButtons) {
      removeButton.addEventListener("click", removeCartItem);
    }

  }
}

function getNumOfItems() {
  const cartItems = JSON.parse(window.localStorage.getItem('cart'));
  if (cartItems && cartItems.length > 0) {
    return ` (${cartItems.length})`
  }}





function createCartItem(itemNum, itemData, artwork) {
  const cartItem = document.createElement("div");
  cartItem.className = "cart-item";
  cartItem.innerHTML = `<div class="cart-preview" id="preview-container-${itemNum}">
        <a href="./config.html?objectID=${itemData.objectID}&printSize=${artwork.printSize}&frameStyle=${artwork.frameStyle}&frameWidth=${artwork.frameWidth}&matColor=${artwork.matColor}&matWidth=${artwork.matWidth}">
        <img class="cart-thumb" src="${
          itemData.primaryImageSmall
        }" id="preview-${itemNum}" alt="">
        </a>
    </div>
    <div class="museum-label">
        <div>
            <span class="artist">${itemData.artistDisplayName}</span>
            <span class="title">${itemData.title}</span>,
            <span class="date">${itemData.objectDate}</span>
            <br><br>
            <span class="frame-description">${getFrameDescription(
              artwork
            )}</span>
        </div>
        <div class="cart-price">€ <span id="price-${itemNum}">${frame.calculatePrice(artwork.printSize,
          artwork.frameStyle, artwork.frameWidth, artwork.matWidth)}</span></div>
            <button class="cart-remove" id="${itemData.objectID}"></button>
    </div>`;
  return cartItem;
}

function getFrameDescription(artwork) {
  const printSizes = {
    S: "Small",
    M: "Medium",
    L: "Large",
  };

  const printSize = printSizes[artwork.printSize];
  const matWidth = artwork.matWidth / 10;
  const matColor = artwork.matColor;
  const frameWidth = artwork.frameWidth / 10;
  const frameStyle = artwork.frameStyle;
  if (matWidth > 0) {
    return `${printSize} print in a ${frameWidth} cm ${frameStyle} frame with a ${matWidth} cm ${matColor} mat.`;
  }
}

function renderArtwork(itemNum, artwork) {
  const img = document.getElementById(`preview-${itemNum}`);
  const container = img.parentElement.parentElement;
  const printSize = artwork.printSize;
  const frameStyle = artwork.frameStyle;
  const frameWidth = artwork.frameWidth;
  const matColor = artwork.matColor;
  const matWidth = artwork.matWidth;

  frame.render(
    img,
    container,
    printSize,
    frameStyle,
    frameWidth,
    matColor,
    matWidth
  );
}
import * as DAL from "./DAL.js";
import * as frame from "./frame.js";

var objectID;
document.addEventListener('DOMContentLoaded', event => {
    document.getElementById("cart-link").innerText = `Cart${getNumOfItems()}`;
    loadConfig();

    const form = document.getElementById("config-form");
    form.addEventListener('submit', );
});

async function loadConfig() {
    const params = (new URL(document.location)).searchParams;
    console.log(params);
    objectID = params.get('objectID');
    const printSize = params.get('printSize');
    const frameStyle = params.get('frameStyle');
    const frameWidth = params.get('frameWidth');
    const matColor = params.get('matColor');
    const matWidth = params.get('matWidth');

    const form = document.getElementById("config-form");

    if (printSize) 
    if (frameStyle) 
    if (frameWidth) 
    if (matColor) 
    if (matWidth) 

    if (objectID) {
        let paintingObject = await DAL.getPicture(+objectID);

        console.log(paintingObject);
        if (paintingObject.message) 
        const img = document.getElementById("preview-image");
        img.src = paintingObject.primaryImage;

        setImageLabel(paintingObject);
        img.onload = render;

        const inputArray = document.querySelectorAll("input[type='radio']");
        inputArray.forEach(function (input) {
            input.addEventListener("input", render);
        });

        const frameInputField = document.getElementById("frameOutputId");
        const frameSlider = document.getElementById("frameInputId");
        frameSlider.addEventListener("input", );
        frameInputField.addEventListener("change", );

        const matInputField = document.getElementById("matColorOutputId");
        const matSlider = document.getElementById("matColorInputId");
        matSlider.addEventListener("input", );
        matInputField.addEventListener("change", )

    }
    return objectID;
}





function getNumOfItems() {
    const cart = JSON.parse(localStorage.getItem('cart'));
    if (cart) 
    return '';
}





function setImageLabel(paintingObject) {

    document.getElementById("image-label").innerHTML = "<b>" + paintingObject.artistDisplayName + "</b> <br> <i>" + paintingObject.title + ", " + paintingObject.objectDate + "</i>";
}


import * as PictureCache from './pictureCache.js'


export async function getPicture(id)
{
    const BASE_URL = 'https://collectionapi.metmuseum.org/public/collection/v1/objects/';
    var object_url = BASE_URL + id;

    let obj = PictureCache.retrieve(object_url);
    if (obj) return obj;}

export 

export function getPrintSizes(img) {
    let S = [297, 297]; // A4
    let M = [420, 420]; // A3
    let L = [594, 594]; // A2

    const w = img.naturalWidth;
    const h = img.naturalHeight;

    if (h > w) {
        S[0] = Math.floor(w * S[1] / h);
        M[0] = Math.floor(w * M[1] / h);
        L[0] = Math.floor(w * L[1] / h);
    } else {
        S[1] = Math.floor(h * S[0] / w);
        M[1] = Math.floor(h * M[0] / w);
        L[1] = Math.floor(h * L[0] / w);
    }

    return { S: S, M: M, L: L };
}

export function render(img, container, printSize, frameStyle, frameWidth, matColor, matWidth) {
    const printSizes = getPrintSizes(img);
    const w = printSizes[printSize][0];
    const h = printSizes[printSize][1];

    let x;
    if (w > h) {
        x = container.offsetWidth / (w + 2 * matWidth + 2 * frameWidth);
    } else {
        x = container.offsetHeight / (h + 2 * matWidth + 2 * frameWidth);
    }

    const frameImageSlices = {
        classic: 115,
        natural: 75,
        shabby: 120,
        elegant: 107
    };

    const matColors = {
        ivory: '#fffff0',
        mint: '#e0e6d4',
        wine: '#50222d',
        indigo: '#29434c',
        coal: '#333a3d',
    };

    img.style.boxSizing = 'border-box';
    img.width = (w + 2 * matWidth + 2 * frameWidth) * x;
    img.height = (h + 2 * matWidth + 2 * frameWidth) * x;
    img.style.borderImageSource = `url(frame-styles/${frameStyle}.jpg)`;
    img.style.borderImageSlice = frameImageSlices[frameStyle];
    img.style.borderWidth = `${frameWidth * x}px`;
    img.style.backgroundColor = matColors[matColor];
    img.style.padding = `${matWidth * x}px`;
}

export function calculatePrice(printSize, frameStyle, frameWidth, matWidth) {
    let price = 0.0;

    price = 30;
    console.log(frameWidth);

    switch (frameStyle) {
        
        case "natural":
            price += (frameWidth/10) * 0.8;
            break;
        
        case "elegant":
            price += (frameWidth/10) * 0.85;
            break;
        
    }

    price += (matWidth/10) * 0.05;
    
    switch (printSize) {
        case "S":
            price *= 1;
            break;
        case "M":
            price *= 2;
            break;
        
        
    }

    return (Math.round((price + Number.EPSILON) * 100) / 100);
}
export function retrieve(searchString)
{
    if(searchString in localStorage)
    {
        console.log(`Retrieve data from loacalStorage with key ${searchString}`);
        return JSON.parse(localStorage[searchString]);
    }
}

export 
import * as DAL from './DAL.js';

document.addEventListener('DOMContentLoaded', event => {
  document.getElementById("cart-link").innerText = `Cart${getNumOfItems()}`;
  const params = (new URL(document.location)).searchParams;
  const helpquery = params.get('q');
  if(!helpquery) 
  else{
    var query= helpquery.replace(/%2B/g, " ");
    document.getElementById('search').value = query;
    search(query);
  }
});

const searchInput = document.getElementById('search');
searchInput.addEventListener('click', );

const form = document.getElementById("search-form");
form.addEventListener('submit', );




  function search(queryString)
  {
    var text= `Searching for “${queryString}”...`;
    document.getElementById("search-info").innerHTML = text;
    DAL.getPictures(queryString).then(objects =>
      {
        var html="";
        for(var object of objects)
        {
          html += makeHtml(object);
        }
        if(objects.length==1)
        
        else
        {
          document.getElementById("search-info").innerHTML= `Found ${objects.length} artworks for “${queryString}”`; 
        }
                      
        document.getElementById("gallery").innerHTML = html;
      }); 
  }



function makeHtml(pic)
{
    var erg=  `<div class="thumb">
    <a href="./config.html?objectID=${pic.objectID}" id="object-${pic.objectID}">
      <img src="`+pic.primaryImageSmall+`" alt="" id="object-image-${pic.objectID}">
      <div class="museum-label">
        <span class="artist">`+pic.artistDisplayName+`</span>
        <span class="title">`+pic.title+`</span>,
        <span class="date">`+pic.objectDate+`</span>
      </div>
    </a>
  </div>`;
    
  return erg;
}

  function getNumOfItems() {
    const cart = JSON.parse(localStorage.getItem('cart'));
    if(cart)
    
   return '';
  }

