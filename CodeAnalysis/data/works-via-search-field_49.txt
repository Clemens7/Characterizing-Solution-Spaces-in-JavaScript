export class ArtObject {
    constructor(apiObject) {
        this.artObjectID = apiObject.objectID;
        this.title = apiObject.title;
        this.artist = apiObject.artistDisplayName;
        this.year = apiObject.objectDate;
        this.previewImage = apiObject.primaryImageSmall;
    }
}import { ArtObject } from './artObject.js'
import { retrieve, store } from './search-cache.js';

export 

export async function getArtworksbySearch(search){
    try{    
        let idList = retrieve(search);
        if(idList)
        const resp = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?q=${search}&hasImages=true`);
        idList = await resp.json();
        idList = idList.objectIDs ;
        let objects = await getPromises(idList);
        store(search, objects);
        return objects;
    }} 

async function getPromises(idList){
        let artworkCache = retrieve("artObjects") ;
        let list = idList.map(async id => {
            let f = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${id}`)
            return f.json().then(obj => {
                    let newApiObj = new ArtObject(obj);
                    artworkCache[obj.artObjectID] = obj;
                    return newApiObj;
                });
            });
        let objectList = await Promise.all(list);
        store("artObjects", artworkCache);
        return objectList;
}

export class CartObject {
    
}import {CartObject} from './cartObject.js';
import {calculatePrice} from "./frame.js";
import {getTotalSum} from "./cart.js";

export 

export 

export function getNumberOfObjectsInCart() {
    return loadFromCache('cart', []).length;
}

export 

export function loadFromCache(key, defaultValue) {
    return window.localStorage.getItem(key)  : defaultValue;
}



import {getNumberOfObjectsInCart, getObjectsFromCart, removeObjectFromCart} from "./cartStore.js";
import {calculatePrice, render} from "./frame.js";
import {updateCartCountInHeader} from "./header.js";
import {getArtObjectByID} from "./artStore.js";

let totalSum = 0;

export 







export export 

export 

export 
import {$} from './helper.js';
import {getNumberOfObjectsInCart} from './cartStore.js';

export function updateCartCountInHeader() {
    let text = 'Cart';
    let numberOfObjects = getNumberOfObjectsInCart();
    if (numberOfObjects > 0) 
    $('#cart-link').textContent = text;
}
export function $(selector) {
    return document.querySelector(selector);
}

export 
export function retrieve(search){
    if(search in localStorage){
        return JSON.parse(localStorage[search]);
    }
}
export function store(search, artworks){
    localStorage[search] = JSON.stringify(artworks);
}

    import {createCart} from "./cart.js";
    import{updateCartCountInHeader} from "./header.js";
    updateCartCountInHeader();
  import * as artStore from './artStore.js';
import * as searchCache from './search-cache.js';

document.addEventListener('DOMContentLoaded', event =>
{
  let q = (new URLSearchParams(location.search)).get("q");
  if (q) {
    searchArtworks(q);
  }
});

async function searchArtworks(search){
    document.getElementById('search-info').innerHTML=`Searching for “${search}”...`;

    const artworks = await artStore.getArtworksbySearch(search);
    console.log(artworks);
    const gallery = document.getElementById('gallery');
    gallery.innerHTML="";
    for (let i=0;i<Math.min(100,artworks.length);i++) {
      let artwork = artworks[i];
      gallery.appendChild(createArtworkElement(artwork));
    }
    if (artworks.length==1)
    else{
      document.getElementById('search-info').innerHTML=`Found ${artworks.length} artworks for “${search}”`;
    }
}



function createArtworkElement(artwork){
    const article = document.createElement('article');
    article.innerHTML=
    `<div class="thumb">
    <a href="config.html">
      <img src="${artwork.previewImage}" alt="${artwork.artObjectID}" id="object-image-0">
      <div class="museum-label">
        <span class="artist">${artwork.artist}</span>
        <span class="title">${artwork.title}</span>,
        <span class="date">${artwork.year}</span>
      </div>
    </a>
  </div>`;
  return article;
}