import { Artwork } from './artwork.js';
import * as ArtworkCache from './artwork-cache.js'

const MET_BASE_URL = 'https://collectionapi.metmuseum.org/public/collection/v1/';
var artworks = [];
export 
export 

export 

export async function getSingleImageData(objid) {
  let obj = await ArtworkCache.retrieve(objid);
  if (!obj) 
  return obj;
}
export 
export 

import { Artwork } from './artwork.js';

export function retrieve(key) {
    if(key in localStorage) {
        return JSON.parse(localStorage[key]);
    }
}

export export class Artwork {
  
}
    /*
    const cartlink = document.getElementById('cart-link');
    var cartAmount = 0;
    try{
      cartAmount = JSON.parse(localStorage['cart']).length;
    }catch(e){};
    cartlink.innerText= 'Cart (' + cartAmount +')';

    document.addEventListener('DOMContentLoaded', event => {
      if(localStorage.getItem('cart') === null){
        document.getElementsByClassName('cart-item')[0].innerText = 'There are no items in your shopping cart.';
        document.getElementById('checkout-button').disabled = true;
      }
    })
  
let cart = 'cart';

export function getItemsFromStorage() {
return window.localStorage[cart] ? JSON.parse(window.localStorage.getItem(cart)) ;
}

export 

export 

export function displayCartCount() {
    const cartLink = document.getElementById("cart-link");
    const count = getItemsFromStorage().length;
    if (count > 0) {
        cartLink.innerHTML = "Cart (" + count + ")";
    }
}
    import * as Frame from './frame.js';
    import { Artwork } from './artwork.js';
    import * as ArtworkAPI from './artwork-api.js';
    import * as Cart from './cart.js';
 
    var oid;
    var printSize;
    var frameWidth;
    var frameStyle;
    var matWidth;
    var matStyle;
    var IMAGE;
    var thumbnail;
    const MET_BASE_URL = 'https://collectionapi.metmuseum.org/public/collection/v1/objects/';
    const LABEL = document.getElementById('image-label');
    const CONTAINER = document.getElementById('preview-container');
 
    const cartlink = document.getElementById('cart-link');
    var cartAmount = 0;
    try{
      cartAmount = JSON.parse(localStorage['cart']).length;
    }catch(e){};
    cartlink.innerText= 'Cart (' + cartAmount +')';
 
    var object = getImage().then(data => {doFun(data);}).catch();
 
    var sliderFrame = document.querySelector('input[name=frameWidthR]');
    var frameBox = document.querySelector('input[name=frameWidth]');
 
    sliderFrame.addEventListener('input', sliderChangeFrame);
    frameBox.addEventListener('change', boxChangeFrame);
 
    var sliderMat = document.querySelector('input[name=matWidthR]');
    var matBox = document.querySelector('input[name=matWidth]');
 
    sliderMat.addEventListener('input', sliderChangeMat);
    matBox.addEventListener('change', boxChangeMat);
 
    function doFun(data){
      oid = data.objectid;
      thumbnail = data.thumbnail;
      if(!oid)
      frameSize();
      setParameteres(data);
      IMAGE.addEventListener('load', ()=> Frame.render(IMAGE, CONTAINER, printSize, frameStyle, frameWidth, matStyle, matWidth));
    }
 
    async function getImage () {
      const queryString = window.location.search;
      const urlParam = new URLSearchParams(queryString);
      var objId = urlParam.get('objectID');
      let data = await ArtworkAPI.getSingleImageData(objId);
      createElement(data);
 
      return data;
    }
    
    function createElement(data){
      const image = document.getElementById('preview-image');
      image.setAttribute('src', `${data.thumbnail}`);
      image.setAttribute('alt', `${data.title}`);
      ArtworkAPI.createMuseumLabel(data,LABEL);
      IMAGE = document.getElementById('preview-image');
    }
 
    const x = document.querySelector('form');
    x.addEventListener('change', setParameteres);
    x.addEventListener('change', updateImage);
 
    
 
    function setParameteres(){
      var s = document.getElementById('print-size-s').checked;
      var m = document.getElementById('print-size-m').checked;
      var l = document.getElementById('print-size-l').checked;
      if(s === true) 
      if(m === true) printSize = 'M';
      if(l === true) 
     
      var classic = document.getElementById('frame-style-classic').checked;
      var natural = document.getElementById('frame-style-natural').checked;
      var shabby = document.getElementById('frame-style-shabby').checked;
      var elegant = document.getElementById('frame-style-elegant').checked;
      if(classic === true) 
      if(natural === true) frameStyle = 'natural';
      if(shabby === true) 
      if(elegant === true) 
     
      var ivory = document.getElementById('mat-color-ivory').checked;
      var mint = document.getElementById('mat-color-mint').checked;
      var wine = document.getElementById('mat-color-wine').checked;
      var indigo = document.getElementById('mat-color-indigo').checked;
      var coal = document.getElementById('mat-color-coal').checked;
      if(ivory === true) 
      if(mint === true) matStyle = 'mint';
      if(wine === true) 
      if(indigo === true) 
      if(coal === true) 
     
      frameWidth = document.getElementsByName('frameWidth')[0].value * 10;
      matWidth = document.getElementsByName('matWidth')[0].value * 10;
 
      document.getElementById('price').innerHTML = '€ ' + Frame.calculatePrice(printSize, frameStyle, frameWidth, matWidth).toFixed(2);
      printTotal();
    }
   
    function printTotal(){
      const sizes = Frame.getPrintSizes(getMeta(thumbnail));
      var sizeS = sizes.S;
      var sizeM = sizes.M;
      var sizeL = sizes.L;
      var totalSize = document.getElementById('total-size');
      if(printSize === 'S')
      if(printSize === 'M'){
        totalSize.innerHTML = `${(sizeM[0] + frameWidth + matWidth)/10} x ${(sizeM[1] + frameWidth + matWidth)/10} cm`
      }
      if(printSize === 'L')
    }
 
    function frameSize(){
      const sizes = Frame.getPrintSizes(getMeta(thumbnail));
      var sizeS = sizes.S;
      var sizeM = sizes.M;
      var sizeL = sizes.L;
      var sizeSmall = document.getElementById('print-size-s-label');
      sizeSmall.innerHTML = `Small <br> ${(sizeS[0])/10} x ${(sizeS[1])/10} cm`;
      var sizeMedium = document.getElementById('print-size-m-label');
      sizeMedium.innerHTML = `Medium <br> ${(sizeM[0])/10} x ${(sizeM[1])/10} cm`;
      var sizeLarge = document.getElementById('print-size-l-label');
      sizeLarge.innerHTML = `Large <br> ${(sizeL[0])/10} x ${(sizeL[1])/10} cm`;
    };
 
    function getMeta(url){  
        var img = new Image();
        img.src = url;
        return img;
    }
 
    
 
    
 
    
 
    
 
    const form = document.querySelector('#config-form');
    form.addEventListener('submit', );
  export function getPrintSizes(img) {
    let S = [297, 297]; // A4
    let M = [420, 420]; // A3
    let L = [594, 594]; // A2

    const w = img.naturalWidth;
    const h = img.naturalHeight;

    if (h > w)  else {
        S[1] = Math.floor(h * S[0] / w);
        M[1] = Math.floor(h * M[0] / w);
        L[1] = Math.floor(h * L[0] / w);
    }

    return { S: S, M: M, L: L };
}

export function render(img, container, printSize, frameStyle, frameWidth, matColor, matWidth) {
    const printSizes = getPrintSizes(img);
    const w = printSizes[printSize][0];
    const h = printSizes[printSize][1];

    let x;
    if (w > h)  else {
        x = container.offsetHeight / (h + 2 * matWidth + 2 * frameWidth);
    }

    const frameImageSlices = {
        classic: 115,
        natural: 75,
        shabby: 120,
        elegant: 107
    };

    const matColors = {
        ivory: '#fffff0',
        mint: '#e0e6d4',
        wine: '#50222d',
        indigo: '#29434c',
        coal: '#333a3d',
    };

    img.style.boxSizing = 'border-box';
    img.width = (w + 2 * matWidth + 2 * frameWidth) * x;
    img.height = (h + 2 * matWidth + 2 * frameWidth) * x;
    img.style.borderImageSource = `url(frame-styles/${frameStyle}.jpg)`;
    img.style.borderImageSlice = frameImageSlices[frameStyle];
    img.style.borderWidth = `${frameWidth * x}px`;
    img.style.backgroundColor = matColors[matColor];
    img.style.padding = `${matWidth * x}px`;
}

export function calculatePrice(printSize, frameStyle, frameWidth, matWidth) {
    let price = 0.0;
    price += 30;
    let woodCost = 0.0;
    if(frameStyle === 'classic') 
    if(frameStyle === 'natural') woodCost = 0.8;
    if(frameStyle === 'shabby') 
    if(frameStyle === 'elegant') woodCost = 0.85;
    price += frameWidth / 10 * woodCost;
    price += matWidth / 10 * 0.05;
    if(printSize === 'M') price *= 2;
    if(printSize === 'L') 
    return (Math.round((price + Number.EPSILON) * 100) / 100);
}

/* My Functions */




    import { Artwork } from './artwork.js';
    import * as ArtworkAPI from './artwork-api.js';

    const gallery = document.getElementById('gallery');
    const searchInfo = document.getElementById('search-info');
    const cartlink = document.getElementById('cart-link');
    var cartAmount = 0;
    
    try{
      cartAmount = JSON.parse(localStorage['cart']).length;
    }catch(e){};
    
    

    cartlink.innerText= 'Cart (' + cartAmount +')';
    document.addEventListener('DOMContentLoaded', event => {
      const params = (new URL(document.location)).searchParams;
      const searchQuery = params.get('q');
      if(!searchQuery) 
      document.getElementById('search').value = searchQuery;
      artSearch(searchQuery);
    });

    const form = document.querySelector('.search-form');
    form.addEventListener('submit', );
    
    async function artSearch(searchTerm){
      gallery.innerHtml = '';
      searchInfo.innerText = 'Searching for “' + searchTerm + '”...';
      let arts = [];
      arts = await ArtworkAPI.retrieve(searchTerm);
      if(arts.length >0){
      await Promise.all(arts.map((artwork) => ArtworkAPI.createArtworkElement(artwork,gallery)));
    }
        if(arts.length==1) 
        else {
          searchInfo.innerText = 'Found ' + arts.length + ' artworks for “' + searchTerm + '”';
        }
      }
  
    
  