
    import * as frame from './frame.js';

    

    async function displayCart(cartData) {
      if (cartData.length == 0) {

        let html = '';

        html += '<div><span>There are no items in your shopping cart.</span></div>';

        html += '<div class="cart-total">';
        html += '<label class="price"></label>';
        html += '<button type="submit" class="checkout-button" id="checkout-button" disabled>Checkout</button>';
        html += '</div>';


        document.getElementById('cart').innerHTML = html;

      }
    }

    
    window.removeProductFromCart = removeProductFromCart;


    let cartData = getCartData();
    console.log(cartData);
    updateNavigationText(cartData);
    displayCart(cartData);

  
    import { render, calculatePrice, getPrintSizes } from "./frame.js";

    

    function prepareListeners() {

      let frameWidthInputs = document.getElementById("frame-width-fieldset").getElementsByTagName("input");
      for (const input of frameWidthInputs) {
        input.addEventListener("change", );
      }

      let frameStyleInputs = document.getElementById("frame-style-fieldset").getElementsByTagName("input");
      for (const input of frameStyleInputs) {
        input.addEventListener("click", updatePreview);
      }

      let matWidthInputs = document.getElementById("mat-width-fieldset").getElementsByTagName("input");
      for (const input of matWidthInputs) {
        input.addEventListener("change", );
      }

      let printSizeInputs = document.getElementById("print-size-fieldset").getElementsByTagName("input");
      for (const input of printSizeInputs) {
        input.addEventListener("click", updatePreview);
      }

      let matColorInputs = document.getElementById("mat-color-fieldset").getElementsByTagName("input");
      for (const input of matColorInputs) {
        input.addEventListener("click", updatePreview);
      }

      document.getElementById("config-form").addEventListener("submit", );
    }

    

    function getPrintSize() {
      const img = document.getElementById("preview-image");
      let printS = document.getElementById("print-size-s-label");
      let printM = document.getElementById("print-size-m-label");
      let printL = document.getElementById("print-size-l-label");
      const printSize = getPrintSizes(img);

      printS.innerHTML = `${printSize["S"][0] / 100} x ${printSize["S"][1] / 100} cm`;
      printM.innerHTML = `${printSize["M"][0] / 100} x ${printSize["M"][1] / 100} cm`;
      printL.innerHTML = `${printSize["L"][0] / 100} x ${printSize["L"][1] / 100} cm`;
    }

    function getTotalSize() {
      const size = getRadioValue(document.getElementsByName("printSize"));
      const frameWidth = document.getElementsByName("frameWidth")[0].value;
      const matWidth = document.getElementsByName("matWidth")[0].value;
      const img = document.getElementById("preview-image");
      const printSize = getPrintSizes(img);
      const totalWidth = printSize[size][0] / 100 + 2 * frameWidth + 2 * matWidth;
      const totalHeight = printSize[size][1] / 100 + 2 * frameWidth + 2 * matWidth;

      let total = document.getElementById("total-size");
      total.innerHTML = `${totalWidth} x ${totalHeight} cm`;
    }

    function getRadioValue(radio) {
      for (let i = 0; i < radio.length; i++) {
        if (radio[i].checked)
          return radio[i].value;
      }}

    function updatePreview() {
      const img = document.getElementById('preview-image');
      const container = document.getElementById('preview-container');
      const frameStyle = getRadioValue(document.getElementsByName('frameStyle'));
      const frameWidth = document.getElementsByName('frameWidth')[0].value;
      const printSize = getRadioValue(document.getElementsByName('printSize'));
      const matColor = getRadioValue(document.getElementsByName('matColor'));
      const matWidth = document.getElementsByName('matWidth')[0].value;

      render(img, container, printSize, frameStyle, frameWidth, matColor, matWidth);
      getPrintSize();
      getTotalSize();

      let price = document.getElementById("price");
      price.innerHTML = `â‚¬ ${calculatePrice(printSize, frameStyle, frameWidth, matWidth).toFixed(2)}`;
    }

    

    

    function configureFrameConfig(urlParams) {
      if (urlParams.has('printSize')) 

      if (urlParams.has('frameWidth')) 

      if (urlParams.has('frameStyle')) 

      if (urlParams.has('matWidth')) 

      if (urlParams.has('matColor')) 
    }

    async function displayFrameConfig() {
      const urlParams = new URLSearchParams(window.location.search);
      let objectFound = false;
      if (urlParams.has('objectID')) {
        let artResponse = await getObject(urlParams.get('objectID'));
        if (artResponse.title != null) {
          if (artResponse.primaryImageSmall !== "") {
            objectFound = true;
            JSON.stringify(artResponse);
            var image = document.images[1];
            var downloadingImage = new Image();
            downloadingImage.onload = function () {
              image.src = this.src;
              updatePreview();
            };
            downloadingImage.src = artResponse.primaryImageSmall;
            JSON.stringify(artResponse);
            document.getElementById('image-label').innerHTML = artResponse.creditLine + " " + artResponse.artistDisplayName + " " + artResponse.title + " " + artResponse.objectDate;
            configureFrameConfig(urlParams);
          }
        }
      }
      if (!objectFound) 
    }

    


    let cartData = getCartData();
    prepareListeners();
    displayFrameConfig();
    updateNavigationText(cartData);
    updatePreview();

  export 

export 

export 
function getCartData() {
  let storageData = localStorage.getItem('cart');
  if (!storageData) 
  return JSON.parse(storageData);
}

function updateNavigationText(cartData) {
  if (cartData.length == 0) {
    document.getElementById('cart-link').innerText = 'Cart';
  }
}





    

    async function getHighlights() {
      let result = await fetch("highlights.json");
      return result.json();
    }

    

    

    let cartData = getCartData();
    updateNavigationText(cartData);

    var parseQueryString = ;

    async function displayProducts(objects) {
      let html = '';

      await Promise.all(objects.map(async (objectID, i) => {
        if (i >= 100) 

        let product = await getObject(objectID);

        html += '<div class="thumb">';
        html += '<a href="config.html?objectID=' + product.objectID + '" id="object-' + i + '">';
        html += '<img src="' + product.primaryImageSmall + '" alt="' + product.title + '" id="object-image-' + i + '">';
        html += '<div class="museum-label">';
        html += '<span class="artist">' + product.artistDisplayName + '</span>';
        html += '<span class="title">' + product.title + '</span>, ';
        html += '<span class="date">' + product.objectDate + '</span>';
        html += '</div>';
        html += '</a>';
        html += '</div>';

        document.getElementById("gallery").innerHTML = html;

      }));
    }



    if (window.location.href.indexOf("?q=") > -1)  else {
      (async () => {
        let highlights = await getHighlights();
        console.log(highlights);
        displayProducts(highlights.highlights);
      })();
    }

  