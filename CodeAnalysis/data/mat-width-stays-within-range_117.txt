export 

export function getCartItems(){
    var cart = JSON.parse(localStorage.getItem('cart'));
    if(!cart){
        cart = []; //empty array, cart has no items
    }
    return cart;
}

export 

export function countProducts(){
    const cartLink = document.getElementById("cart-link");
    const countProd = getCartItems().length;
    if(countProd<=0){
        cartLink.innerHTML='Cart';
    }
}

export 

export 
updateMatWidth(this.value);export function getPrintSizes(img) {
    let S = [297, 297]; // A4
    let M = [420, 420]; // A3
    let L = [594, 594]; // A2

    const w = img.naturalWidth;
    const h = img.naturalHeight;

    if (h > w) {
        S[0] = Math.floor(w * S[1] / h);
        M[0] = Math.floor(w * M[1] / h);
        L[0] = Math.floor(w * L[1] / h);
    } else {
        S[1] = Math.floor(h * S[0] / w);
        M[1] = Math.floor(h * M[0] / w);
        L[1] = Math.floor(h * L[0] / w);
    }

    return { S: S, M: M, L: L };
}

export function render(img, container, printSize, frameStyle, frameWidth, matColor, matWidth) {
    const printSizes = getPrintSizes(img);
    const w = printSizes[printSize][0];
    const h = printSizes[printSize][1];

    let x;
    if (w > h)  else {
        x = container.offsetHeight / (h + 2 * matWidth + 2 * frameWidth);
    }

    const frameImageSlices = {
        classic: 115,
        natural: 75,
        shabby: 120,
        elegant: 107
    };

    const matColors = {
        ivory: '#fffff0',
        mint: '#e0e6d4',
        wine: '#50222d',
        indigo: '#29434c',
        coal: '#333a3d',
    };

    img.style.boxSizing = 'border-box';
    img.width = (w + 2 * matWidth + 2 * frameWidth) * x;
    img.height = (h + 2 * matWidth + 2 * frameWidth) * x;
    img.style.borderImageSource = `url(frame-styles/${frameStyle}.jpg)`;
    img.style.borderImageSlice = frameImageSlices[frameStyle];
    img.style.borderWidth = `${frameWidth * x}px`;
    img.style.backgroundColor = matColors[matColor];
    img.style.padding = `${matWidth * x}px`;
}

export function calculatePrice(printSize, frameStyle, frameWidth, matWidth) {

    let price1 = 0;

  var size = {
        'S' : 1,
        'M' : 2,
        'L' : 3.5
    };

    var frame_costs = {
        'classic' : 1,
        'natural' : 0.8,
        'shabby' : 0.9,
        'elegant' : 0.85
    };

    const price = (30 + frame_costs[frameStyle] * (frameWidth / 10) + 0.05 * (matWidth / 10)) * size[printSize];


    return (Math.round((price + Number.EPSILON) * 100) / 100);
}const met_url = "https://collectionapi.metmuseum.org/public/collection/v1/";

export async function getObject(objectID){
    let object = JSON.parse(localStorage.getItem(objectID));
    if(!object){
        const newUrl = met_url + 'objects/' + objectID;
        object = await fetch(newUrl).then(data => data.json());
        if(!object || object.objectID == null)
        localStorage.setItem(object.objectID, JSON.stringify(object));
    }
    return object;
}

