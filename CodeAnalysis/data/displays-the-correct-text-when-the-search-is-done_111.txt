export function retrieveJson(key) {
    if (key in localStorage) 
}
export 
export import * as CacheApi from "./cache-api.js";
import * as CONSTANTS from "./constants.js";

export function loadCartLink() {
    const cartLinkElement = document.getElementById('cart-link');
    const cartData = CacheApi.retrieveJson(CONSTANTS.CACHE_CART);
    if (cartData )  else {
        cartLinkElement.innerText = 'Cart';
    }
}

export export const ARTWORK_OBJECT_ID = 'objectID';
export const ARTWORK_PRINT_SIZE = 'printSize';
export const ARTWORK_FRAME_STYLE = 'frameStyle';
export const ARTWORK_FRAME_WIDTH = 'frameWidth';
export const ARTWORK_MAT_COLOR = 'matColor';
export const ARTWORK_MAT_WIDTH = 'matWidth';

export const CACHE_CART = 'cart';
export 
export 

export 

export import * as MuseumCache from "../cache-api.js";
import * as CONSTANTS from "./museum-constants.js";
import {Thumb} from "../thumb.js";

export 

export async function retrieveBySearchTerm(searchTerm) {
    const url = search_api_url(searchTerm);
    return await fetchObjects(url).then(result => {
        console.log("result.total for " + searchTerm + ": " + result.total);
        let newResult = {};

        if (result.total > CONSTANTS.MAX_RESULTS)  else {
            newResult.objectIDs = result.objectIDs;
        }

        newResult.total = result.total;
        return newResult;
    });
}

async function fetchObjects(url) {
    return fetch(url)
        .then(response => {
            if (!response.ok) 
            return response.json()
        })
        .then(data => {
            return data;
        })
        .catch();
}



function search_api_url(searchTerm) {
    return CONSTANTS.METMUESUM_API.SEARCH + "?q=" + searchTerm + CONSTANTS.METMUESUM_API.HAS_IMAGE;
}
export const METMUESUM_API = {
    V1: "https://collectionapi.metmuseum.org/public/collection/v1/",
    HAS_IMAGE: "&hasImages=true"
}
METMUESUM_API.OBJECTS = METMUESUM_API.V1 + "objects/";
METMUESUM_API.SEARCH = METMUESUM_API.V1 + "search";

export const MAX_RESULTS = 100;
import * as MUSEUM_API from "../museum/museum-api.js"

export async function retrieveByObjectIds(objectIDs) {
    return await Promise.all(
        objectIDs.map()
    );
}
import * as CONSTANTS from "../constants.js";

export const FRAME_CONFIG_URL = "/config.html?" + CONSTANTS.ARTWORK_OBJECT_ID + "=";
import * as DOM from '../dom-helpers.js';

export class ThumbDocumentContainer {
    
    
    
}
import { ThumbDocumentContainer } from "./search-dom.js"
import * as SearchAPI from "./search-api.js"
import * as MuseumAPI from "../museum/museum-api.js"
import { loadCartLink } from "../cart-service.js";

String.prototype.trim = function(charlist) {
    return this.trimLeft(charlist).trimRight(charlist);
};

const searchInfoElement = document.getElementById("search-info");

function checkQueryParams() {
    let params = (new URL(document.location)).searchParams;
    let q = params.get("q");
    console.log("Query params: " + q);
    if (validateSearchString(q)) {
        changeSearchInfo("Searching for “" + q + "”" + "...");
        searchForImages(q);
    }
}
checkQueryParams();

loadCartLink();

function searchForImages(searchText) {
    if (validateSearchString(searchText)) {
        changeSearchInfo("Searching for “" + searchText + "”" + "...");
        MuseumAPI.retrieveBySearchTerm(searchText).then(res => {
            searchAndDisplayByObjectIds(res.objectIDs);
            let artworkPluralize = res.total == 1  : "artworks";
            changeSearchInfo("Found " + res.total + " " + artworkPluralize + " for “" + searchText + "”");
        });
    }
}

function changeSearchInfo(str) {
    searchInfoElement.innerHTML = str;
}



function searchAndDisplayByObjectIds(objectIds) {
    SearchAPI.retrieveByObjectIds(objectIds)
        .then();
}





function validateSearchString(str) {
    if (str && str.trim()) {
        return str.trim();
    }
}import * as CONSTANTS from "./search/search-constants.js"

export class Thumb {
    

    
}
