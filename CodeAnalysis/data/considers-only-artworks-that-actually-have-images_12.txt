export const MET_API = 'https://collectionapi.metmuseum.org/public/collection/v1/'

export const fetchObject = 

export const getObject = 

export const getSearchResults = async term => {
  const request = await fetch(`${MET_API}search?hasImages=true&q=${term}`)
  return ids.splice(0, 100) // return only first 100 results
}

class Cache {
  constructor() {
    this.objects = JSON.parse(localStorage.getItem('cache') || '[]')
  }

  

  
}

export const cache = new Cache()

    import { getSearchResults, getObject, cache } from '/met-api.js'

    const search = async term => {
      const info = document.getElementById('search-info')
      info.innerText = `Searching for “${term}”...`
      renderArtworks([])

      const ids = await getSearchResults(term)}

    const showHighlights = 

    const renderArtworks = objects => {
      document.getElementById('gallery').innerHTML = objects.map().join('')
    }

    document.querySelector('.search-form').addEventListener('submit', )

    const term = new URL(window.location).searchParams.get('q')
    if (term) {
      document.getElementById('search').value = term
      search(term)
    }

    let cart = JSON.parse(localStorage.getItem('cart'));

    if(cart != null 


  