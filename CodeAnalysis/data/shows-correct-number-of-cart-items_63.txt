
const GET_OBJECT_API_URL = "https://collectionapi.metmuseum.org/public/collection/v1/objects/{ID}";
const CACHE_KEY = "cache";

let cache = {};

export function initCache(){
    if(!localStorage.getItem(CACHE_KEY))
    cache = JSON.parse(localStorage.getItem(CACHE_KEY));
}


export 

export 

export 

export 
    import { retrieve } from './cart.js';
    let cart;
    async function cartItemSearch() {
      cart = await retrieve();
      if (!cart) {
        console.log("No cart found!");
      }
    }
  
    

    
    document.addEventListener('DOMContentLoaded', (event) => {
      cartItemSearch();
      
    });
  import * as Frame from "./frame.js";
import * as API from "./api-abstraction.js";
API.initCache();
import { load } from "./config.js";
export class cart {
  
}

const API_URL = `https://collectionapi.metmuseum.org/public/collection/v1/objects/`;
export async function retrieve() {
  try {
    document.getElementById("checkout-button").disabled = true;
    let cart = JSON.parse(localStorage.getItem("cart"));
    console.log(cart);
    var price = 0;
    if (cart.length == 0) {
      console.log("Hello");
      document.getElementById("message").innerHTML = '<p>There are no items in your shopping cart.</p>';
    }
    document.getElementById("price-total").innerText = price;
    let cartlink = document.getElementById('cart-link');
    cart.length>0:cartlink.innerText = 'Cart';
  } 
}



export 




    import * as Frame from './frame.js';
    import {Config, load, save} from './config.js';

    let object;
    let config;
    const preview = {
      img : document.getElementById('preview-image'),
      container : document.getElementById('preview-container')
    };
    const form = {
      printSizes : document.getElementsByName('printSize'),
      frameStyles : document.getElementsByName('frameStyle'),
      matColors : document.getElementsByName('matColor'),

      frameWidth : document.getElementsByName('frameWidth').item(0),
      frameWidthR : document.getElementsByName('frameWidthR').item(0),

      matWidth : document.getElementsByName('matWidth').item(0),
      matWidthR : document.getElementsByName('matWidthR').item(0),

      button : document.getElementsByTagName('button')[0]
    };

    async function loadObject(objectID) {
      object = await load(objectID);
      if (!object) 
    }

    function showPreview() {
      const artist = document.getElementById("artist");
      artist.innerText = object.artistDisplayName;
      const title = document.getElementById("title");
      title.innerText = object.title;
      const date = document.getElementById("date");
      date.innerText = object.objectDate;


      preview.img.src = object.primaryImageSmall;
      preview.img.onload = event => {
        const size = Frame.getPrintSizes(preview.img);
        document.getElementById('print-size-s-label').innerHTML = `Small<br>${size['S'][0]} × ${size['S'][1]} cm`;
        document.getElementById('print-size-m-label').innerHTML = `Medium<br>${size['M'][0]} × ${size['M'][1]} cm`;
        document.getElementById('print-size-l-label').innerHTML = `Large<br>${size['L'][0]} × ${size['L'][1]} cm`;

        updateFrame();
      };
    }

    function updateFrame() {
      Frame.render(preview.img, preview.container, config.printSize, config.frameStyle, config.frameWidth, config.matColor, config.matWidth);
      const price = Frame.calculatePrice(config.printSize, config.frameStyle, config.frameWidth, config.matWidth);
      document.getElementById('price').innerText = `€ ${price.toLocaleString('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2})}`;
    }

    function initForm() {
      for (const size of form.printSizes) {
        size.addEventListener('change', );
        size.checked = size.value === config.printSize;
      }

      for (const frame of form.frameStyles) {
        frame.addEventListener('change', );
        frame.checked = frame.value === config.frameStyle;
      }

      for (const color of form.matColors) {
        color.addEventListener('change', );
        color.checked = color.value === config.matColor;
      }

      form.frameWidth.addEventListener('change', );
      form.frameWidthR.addEventListener('change', );
      form.frameWidth.value = config.frameWidth / 10;
      form.frameWidthR.value = config.frameWidth / 10;

      form.matWidth.addEventListener('change', );
      form.matWidthR.addEventListener('change', );
      form.matWidth.value = config.matWidth / 10;
      form.matWidthR.value = config.matWidth / 10;

      form.button.addEventListener('click', );
    }




    const params = (new URL(document.location)).searchParams;
    config = new Config(params.get('objectID'), params.get('printSize'), params.get('frameStyle'), params.get('frameWidth'), params.get('matColor'), params.get('matWidth'));

    initForm();

    document.addEventListener('DOMContentLoaded', async (event) => {
      let cart=JSON.parse(localStorage.getItem('cart'));
      if(cart) {
        let cartlink = document.getElementById('cart-link');
        cart.length > 0  : cartlink.innerText = 'Cart';
      }
      await loadObject(config.objectID);
      showPreview();
    });

  
import * as API from './api-abstraction.js';
API.initCache();


export 

export 

export class Config {
    

    

    

    

    

    


    

    

    

    

    
}








export 

export 

export 

import * as API from './api-abstraction.js'

const highlights= [39799, 459055, 437853, 435809, 436535, 360018, 634108, 459080, 435882, 271890, 459054, 436105]
const SEARCH_PARAM = "q";
const SEARCH_API_URL = "https://collectionapi.metmuseum.org/public/collection/v1/search?q={searchQuery}&hasImages=true";

const t0 = performance.now();

async function init(){

    API.initCache();
    let cart=JSON.parse(localStorage.getItem('cart'));
    if(cart) {
        let cartlink = document.getElementById('cart-link');
        cart.length > 0  : cartlink.innerText = 'Cart';
    }
    var urlParams = new URLSearchParams(window.location.search);
    if(urlParams.has(SEARCH_PARAM))
    else{
        await getHighlights(highlights);
    }
}




async function getHighlights(highlightIds){
    let displayedItems = 0;
    for(let id of highlightIds){
        if(displayedItems >= 100)
        let item = await API.getItem(id);   
        if(item.primaryImageSmall && displayedItems < 100){
            displayItem(item);
            console.log("displayed item");
            displayedItems++;
        }
    }
    
    var t1 = performance.now()
    console.log("Done... (" + (t1-t0) + " milliseconds).")
    return displayedItems;
}


function displayItem(item){
    let root = document.getElementById("gallery");
    let itemRoot = document.createElement("div");
    itemRoot.classList.add("thumb");
    itemRoot.innerHTML = renderItem(item, item.objectId);
    root.appendChild(itemRoot);
}

function renderItem(item, id){
    return `
    <a href="config.html?objectID=${item.objectID}" id="object-${item.objectID}">
      <img src="${item.primaryImageSmall}" alt="${item.title}" id="object-image-${item.objectID}">
      <div class="museum-label">
        <span class="artist">${item.artistDisplayName}</span>
        <span class="title">${item.title}</span>,
        <span class="date">${item.objectDate}</span>
      </div>
    </a>`;
}



init();