export function retrieve(key) {
    
    if(key in localStorage) 
}

export function store(key, artwork) {
    console.log(`Storing ${key} in local storage`);
    localStorage[key] = JSON.stringify(artwork);
}

export 

const MET_BASE_URL = 'https://collectionapi.metmuseum.org/public/collection/v1/';

export async function retrieveArtworksById (id) {
    const response = await fetch(`${MET_BASE_URL}objects/${id}`);
    if (response.status == 404)  else {
        return await response.json();
    }}

export function getNumberOfObjectsInCart () {
    if (!localStorage.getItem('cart')) {
        return 0;
    }matWidthR.value = matWidth.valueexport function getPrintSizes (img) {
    let S = [297, 297]; // A4
    let M = [420, 420]; // A3
    let L = [594, 594]; // A2

    const w = img.naturalWidth;
    const h = img.naturalHeight;

    if (h > w) {
        S[0] = Math.floor(w * S[1] / h);
        M[0] = Math.floor(w * M[1] / h);
        L[0] = Math.floor(w * L[1] / h);
    }

    return { S: S, M: M, L: L };
}

export function render (img, container, printSize, frameStyle, frameWidth, matColor, matWidth) {
    const printSizes = getPrintSizes(img);
    const w = printSizes[printSize][0];
    const h = printSizes[printSize][1];

    let x;
    if (w > h)  else {
        x = container.offsetHeight / (h + 2 * matWidth + 2 * frameWidth);
    }

    const frameImageSlices = {
        classic: 115,
        natural: 75,
        shabby: 120,
        elegant: 107
    };

    const matColors = {
        ivory: '#fffff0',
        mint: '#e0e6d4',
        wine: '#50222d',
        indigo: '#29434c',
        coal: '#333a3d',
    };

    img.style.boxSizing = 'border-box';
    img.width = (w + 2 * matWidth + 2 * frameWidth) * x;
    img.height = (h + 2 * matWidth + 2 * frameWidth) * x;
    img.style.borderImageSource = `url(frame-styles/${frameStyle}.jpg)`;
    img.style.borderImageSlice = frameImageSlices[frameStyle];
    img.style.borderWidth = `${frameWidth * x}px`;
    img.style.backgroundColor = matColors[matColor];
    img.style.padding = `${matWidth * x}px`;
}

const price_classic = 100;
const price_natural = 80;
const price_shabby = 90;
const price_elegant = 85;
const price_mat = 5;

const base_small = 3000;
const base_medium = 2 * base_small;
const base_large = 3.5 * base_small;

export function calculatePrice (printSize, frameStyle, frameWidth, matWidth) {
    let price = 0.00; //price of a small print
    let matPrice = 0.05 * (matWidth/10);

    let woodPrice = 1.00; //price of a classic frame per centimeter;

    if (frameStyle === "shabby")  else if (frameStyle === "elegant")  else if (frameStyle === "natural") {
        woodPrice = 0.80;
    }
    woodPrice *= frameWidth/10;

    price += (30 + woodPrice + matPrice); //price for a small size

    if (printSize === 'M') {
        price *= 2.00;
    }

    return 1*(Math.round((price + Number.EPSILON) * 100) / 100);
}
