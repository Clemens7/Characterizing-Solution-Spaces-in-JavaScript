import * as SearchCache from './search-cache.js';





;




async function searchIdFromApi(searchterm){
  let objData;
  const response = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?q=${searchterm}&hasImages=true`)}

export { searchIdFromApi, retrieveData, retrieveHighlights };


function retrieveFromLocal(key){
  if(key in localStorage)
}






function cartCache(){
  const cartCached = retrieveFromLocal("cart");
  if(cartCached 
}

export { retrieveFromLocal, storeInLocal, cartCache };





export{ createItem };

import { createItem } from './search-dom.js' ;
import * as SearchAPI from './search-api.js' ;
import * as SearchCache from './search-cache.js' ;

const container = document.getElementById('gallery');
const displayText = document.getElementById('search-info');

document.addEventListener('DOMContentLoaded',function(){
  SearchCache.cartCache();

  const params = (new URL(document.location)).searchParams;
  const searchQuery = params.get('q');
  if(!searchQuery);
  gallerySearch(searchQuery);
});





async function gallerySearch(searchTerm){
  displayText.innerHTML = `Searching for “${searchTerm}”...`;
  const objIdFromSearch = await SearchAPI.searchIdFromApi(searchTerm);} for “${searchTerm}” `
}






