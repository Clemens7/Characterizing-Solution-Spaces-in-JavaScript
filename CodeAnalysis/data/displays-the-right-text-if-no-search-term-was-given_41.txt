export function loadJSON(callback) {
    console.log("try loading highlights.json")
    let xhr = new XMLHttpRequest();
    xhr.overrideMimeType("application/json");
    xhr.open("GET", "./highlights.json", true);
    xhr.onreadystatechange = () => {
      if (xhr.readyState === 4 && xhr.status === 200) {
        callback(xhr.responseText);
      }
    };
    xhr.send(null);
  }/*
export function retrieveAll() {
    console.log(`Retrieving all cart objects from local storage`);
    const key = "cart";

    if(key in localStorage) 
}

/*
export 


export 

import * as CartCache from './cartCache.js';
export async function updateCartLink() {
    const items = await CartCache.retrieveAll();
    if (!items ) {
        document.getElementById("cart-link").innerText = `Cart`;
    }
}/*
export 

/*
export 

/*
export 

/*
export 
export 

export 

export 

import * as DOM from './dom-helpers.js';
import * as Frame from './frame.js';
import { retrieveObj } from './metCache.js';

export class ItemDocumentContainer {
    constructor(containerID) {
        this.container = document.getElementById(containerID);
        if(!this.container) 
    }

    clear() {
        this.container.innerHTML = '';
    }

    

    

/*
      <div class="cart-item">
        <div class="cart-preview" id="preview-container-0">
          <a href="">
            <img class="cart-thumb" src="" id="preview-0" alt="">
          </a>
        </div>
        <div class="museum-label">
          <div>
            <span class="artist"></span>
            <span class="title"></span>,
            <span class="date"></span>
            <br><br>
            <span class="frame-description"></span>
          </div>
          <div class="cart-price">€
            <span id="price-0">0</span>
          </div>
          <button class="cart-remove"></button>
        </div>
      </div>
    

    /*
      <div class="cart-total">
        <div class="price">Total: €
            <span id="price-total">0</span>
        </div>
        <button type="button" id="checkout-button">Checkout</button>
      </div>
    


}

import { MetObject } from './met.js';
import * as MetCache from './metCache.js';

const API_OBJ_URL = "https://collectionapi.metmuseum.org/public/collection/v1/objects/";
const API_SEARCH_URL = "https://collectionapi.metmuseum.org/public/collection/v1/search?q=";

export async function retrieveObj(objectID) {
	let url = API_OBJ_URL + objectID;
	let obj = MetCache.retrieveObj(objectID);

	if (obj) 

	try {
		const response = await fetch(url);
		console.log("got response");
		const rawData = await response.json();}

export 

import { MetObject } from './met.js';

export function retrieveObj(objectID) {
    if(objectID in localStorage) 
}

export export class MetObject {
    
}

		import * as MetAPI from './metAPI.js';
		import { ItemDocumentContainer } from './met-dom.js';
		import * as jsonHelper from './jsonHelper.js';
		import * as cartLinkHelper from './cartLinkHelper.js';

		let container = new ItemDocumentContainer("gallery");

		async function loadHighlights() {
			jsonHelper.loadJSON(data => {
				loadObjects(JSON.parse(data).highlights);
			});
		}

		async function loadObjects(ids) {
			container.clear();
			if (ids !== null) {
				let i = 0;
				while (i < ids.length && i < 100) {
					addMetObjToDom(await MetAPI.retrieveObj(ids[i])}

		

		

		

		document.addEventListener('DOMContentLoaded', event => {
			const params = (new URL(document.location)).searchParams;
			const searchquery = params.get('q');
			if (!searchquery) {
				loadHighlights();
			}
		});


		const form = document.querySelector('.search-form');
		form.addEventListener('submit', );

		cartLinkHelper.updateCartLink();
	