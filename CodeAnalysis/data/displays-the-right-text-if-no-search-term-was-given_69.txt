const STORAGE_KEY = 'object_';
const metApiEndpoint = 'https://collectionapi.metmuseum.org';

class ArtCollectionService {

    fetchObject = (oID) => {
        let cachedObject = window.localStorage.getItem(STORAGE_KEY + oID);
        if (cachedObject === null) {
            return fetch(metApiEndpoint + '/public/collection/v1/objects/' + oID)
                    .then(response => response.json())
                    .then(data => {
                        window.localStorage.setItem(STORAGE_KEY + oID, JSON.stringify(data));
                        return data;
                    });
        }
    };

    search = (query) => {
        if (query !== undefined && query !== null )  else {
            return fetch('highlights.json')
                .then(response => response.json())
                .then(data => Promise.all(data['highlights'].filter((artObj, x) => x < 100).map(oID => this.fetchObject(oID))));
        }
    };
}
export default new ArtCollectionService();
const STORAGE_KEY = 'cart';

class CartService {

    _cart;
    _callbacks = {};
    _lastCallbackId = 0;

    constructor() {
        const cart = this.fetchCart();
        if (cart === null) {
            this._cart = [];
        }
    }

    

    get length() {
        return this._cart.length;
    }

    

    contains = ;

    add = ;

    remove = ;

    addCallback = ;

    removeCallback = ;

    fetchCart = () => {
        return JSON.parse(window.localStorage.getItem(STORAGE_KEY));
    };

    writeCart = ;

    indexOf = ;
}

export default new CartService();

export class CartItem {
    
}
import searchService from './services/art_collection_service.js';
import cartService from './services/cart_service.js';

class Search {

    constructor() {
        const url = new URL(window.location.href);
        this.query = url.searchParams.get('q');
        this.search();
    }

    search = () => {
        if (this.query !== undefined && this.query !== null )
            
        else
            searchInfo.innerText = `Searching...`;
        searchService.search(this.query)
            .then(objects => {
                Search.displayObjects(objects);
                if (this.query !== undefined && this.query !== null )
                    
                else
                    searchInfo.innerText = `Search our collection of more than 400,000 artworks.`;
            })
            .catch();
    };

    static displayObjects = (objects) => {
        const searchTemplate = document.getElementById('search-template');
        const gallery = document.getElementById('gallery');
        for (let i = 0; i < objects.length; i++) {
            const templateNode = searchTemplate.content.cloneNode(true);
            templateNode.id = "search-template-" + i;
            templateNode.querySelector(".link-image").href = "config.html?objectID=" + objects[i].objectID;
            templateNode.querySelector(".object-image").src = objects[i].primaryImageSmall;
            templateNode.querySelector(".object-image").alt = objects[i].title;
            templateNode.querySelector(".artist").innerText = objects[i].artistDisplayName;
            templateNode.querySelector(".title").innerText = objects[i].title;
            templateNode.querySelector(".date").innerText = objects[i].objectDate;
            gallery.appendChild(templateNode);
        }
        searchTemplate.remove();
    };

}

const searchInfo = document.getElementById('search-info');
const cartSize = document.getElementById('cart-size');
cartSize.innerText = cartService.length !== 0  : '';
new Search();
