export 


export function retrieveFromStorage(queryElems) {
    const key = queryElems.join(' ');
    if (key in localStorage) 
}frameValueR.value=this.valueimport { retrieveFromStorage } from './art-cache.js';


export async function countCartItems(){
    let cartItems = retrieveFromStorage(['cart']);
    let cartCount = 0;
    if(cartItems)
    
    
}export function getPrintSizes(img) {
    let S = [297, 297]; // A4
    let M = [420, 420]; // A3
    let L = [594, 594]; // A2

    const w = img.naturalWidth;
    const h = img.naturalHeight;

    if (h > w)  else {
        S[1] = Math.floor(h * S[0] / w);
        M[1] = Math.floor(h * M[0] / w);
        L[1] = Math.floor(h * L[0] / w);
    }
    
    return { S: S, M: M, L: L };
}

export function render(img, container, printSize, frameStyle, frameWidth, matColor, matWidth) {
    const printSizes = getPrintSizes(img);
    const w = printSizes[printSize][0];
    const h = printSizes[printSize][1];
   
    
    let x;
    if (w > h) {
        x = container.offsetWidth / (w + 2 * matWidth + 2 * frameWidth);
    } else {
        x = container.offsetHeight / (h + 2 * matWidth + 2 * frameWidth);
    }

    const frameImageSlices = {
        classic: 115,
        natural: 75,
        shabby: 120,
        elegant: 107
    };

    const matColors = {
        ivory: '#fffff0',
        mint: '#e0e6d4',
        wine: '#50222d',
        indigo: '#29434c',
        coal: '#333a3d',
    };
    
    img.style.boxSizing = 'border-box';
    img.width = (w + 2 * matWidth + 2 * frameWidth) * x;
    img.height = (h + 2 * matWidth + 2 * frameWidth) * x;
    img.style.borderImageSource = `url(frame-styles/${frameStyle}.jpg)`;
    img.style.borderImageSlice = frameImageSlices[frameStyle];
    img.style.borderWidth = `${frameWidth * x}px`;
    img.style.backgroundColor = matColors[matColor];
    img.style.padding = `${matWidth * x}px`;
}

export function calculatePrice(printSize, frameStyle, frameWidth, matWidth) {
    let price = 30.0;
    if(frameStyle == 'classic') else if(frameStyle == 'natural'){
        price += (0.08*frameWidth);
    }
    price += 0.005*matWidth;
    if(printSize == 'L') else if( printSize == 'M'){
        price = price*2;
    } 
    price = (Math.round((price + Number.EPSILON) * 100) / 100);
    price = parseFloat(price.toFixed(2));
    return price;
}
export class artDocumentContainer {
  constructor(containerID = 'gallery') {
      this.container = document.getElementById(containerID);
      if (!this.container) 
  }
  





  
  addPreviewToDocument(artElem) {
      this.container.innerHTML = `
      <img src="${artElem.primaryImageSmall}" alt="${artElem.title}" id="preview-image">
      <div class="museum-label" id="image-label">
        <span class="artist">${artElem.artistDisplayName}</span>
        <span class="title">${artElem.title}</span>,
        <span class="date">${artElem.objectDate}</span>
      </div>`;
  }


  

  
}


export 