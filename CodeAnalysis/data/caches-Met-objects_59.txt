
        import * as Frame from './frame.js';

        let cartItems = JSON.parse(localStorage.getItem('cart'));
        if (!cartItems) 

        const cartNav = document.getElementById("cart-link");
        if (cartItems.length > 0) {
            cartNav.innerHTML = `Cart (${cartItems.length})`;
        }

        const cartSection = document.getElementById('cart');
        if (!cartSection) 
        cartSection.innerHTML = '';

        let priceTotal = 0;

        for (let index = 0; index < cartItems.length; index++) {
            const item = cartItems[index];
            cartSection.insertBefore(createItemElements(item, index), cartSection.firstChild);
        }

        const cartTotalContainer = document.createElement('div');
        cartTotalContainer.setAttribute('class', 'cart-total');

        const priceTotalContainer = document.createElement('div');
        priceTotalContainer.setAttribute('class', 'price');
        priceTotalContainer.innerText = 'Total: € ';

        const priceTotalSpan = document.createElement('span');
        priceTotalSpan.setAttribute('id', 'price-total');
        priceTotalSpan.innerText = priceTotal;

        priceTotalContainer.appendChild(priceTotalSpan);

        const checkoutBtn = document.createElement('button');
        checkoutBtn.setAttribute('type', 'button');
        checkoutBtn.setAttribute('id', 'checkout-button');
        checkoutBtn.setAttribute('onclick', 'procede()')
        checkoutBtn.innerText = 'Checkout';

        cartTotalContainer.appendChild(priceTotalContainer);
        cartTotalContainer.appendChild(checkoutBtn);
        cartSection.appendChild(cartTotalContainer);

        if(cartItems.length == 0)

        function createItemElements(cartItem, index) {
            const cartItemContainer = document.createElement('div');
            cartItemContainer.setAttribute('class', 'cart-item');

            getObjectById(cartItem.objectID).then(function(artObject){

                const cartPreviewContainer = document.createElement('div');
                cartPreviewContainer.setAttribute('class', 'cart-preview');
                cartPreviewContainer.setAttribute('id', `preview-container-${index}`)

                const link = document.createElement('a');
                link.setAttribute('href', `./config.html?${new URLSearchParams(cartItem)}`);


                const image = document.createElement('img');
                image.setAttribute('class', 'art-thumb');
                image.setAttribute('id', `preview-${index}`);
                image.setAttribute('src', `${artObject.primaryImageSmall}`);
                image.setAttribute('alt', `${artObject.title}`);

                link.appendChild(image);
                cartPreviewContainer.appendChild(link);

                const labelContainer = document.createElement('div');
                labelContainer.setAttribute('class', 'museum-label');

                const spanContainer = document.createElement('div');
                const artistSpan = document.createElement('span');
                artistSpan.setAttribute('class', 'artist');
                artistSpan.innerText = artObject.artistDisplayName;
                spanContainer.appendChild(artistSpan);
                const titleSpan = document.createElement('span');
                titleSpan.setAttribute('class', 'title');
                titleSpan.innerText = `${artObject.title}, `;
                spanContainer.appendChild(titleSpan);
                const dateSpan = document.createElement('span');
                dateSpan.setAttribute('class', 'date');
                dateSpan.innerText = artObject.objectDate;
                spanContainer.appendChild(dateSpan);
                const lineBreak = document.createElement('br');
                spanContainer.appendChild(lineBreak);
                const frameSpan = document.createElement('span');
                frameSpan.setAttribute('class', 'frame-description');
                const sizes = {'S': 'Small', 'M': 'Medium', 'L': 'Large'};
                const frameDesc = sizes[cartItem.printSize] + ` print in a ${cartItem.frameWidth / 10} cm ` + cartItem.frameStyle + " frame";
                const matDesc = cartItem.matWidth > 0 ?  ` with a ${cartItem.matWidth / 10} cm ` + cartItem.matColor + " mat." ;
                frameSpan.innerText = frameDesc + matDesc;
                spanContainer.appendChild(frameSpan);

                const priceContainer = document.createElement('div');
                priceContainer.setAttribute('class', 'cart-price');
                const priceSpan = document.createElement('span');
                priceSpan.setAttribute('id', `price-${index}`);
                priceContainer.appendChild(priceSpan);

                const itemPrice = Frame.calculatePrice(cartItem.printSize, cartItem.frameStyle, cartItem.frameWidth, cartItem.matWidth);
                priceSpan.innerText = "€ " + itemPrice.toFixed(2);
                priceTotal += itemPrice;

                document.getElementById('price-total').innerText = priceTotal;

                const removeBtn = document.createElement('button');
                removeBtn.setAttribute('class', 'cart-remove');
                removeBtn.setAttribute('onclick', `removeItem(${index})`)

                labelContainer.appendChild(spanContainer);
                labelContainer.appendChild(priceContainer);
                labelContainer.appendChild(removeBtn);
                cartItemContainer.appendChild(cartPreviewContainer);
                cartItemContainer.appendChild(labelContainer);


                let previewContainer = document.getElementById(`preview-container-${index}`);
                let previewImage = document.getElementById(`preview-${index}`)
                Frame.render(previewImage, previewContainer, cartItem.printSize, cartItem.frameStyle, cartItem.frameWidth, cartItem.matColor, cartItem.matWidth);
            })

            return cartItemContainer;
        };

        async function getObjectById(id){
            let artwork = JSON.parse(localStorage.getItem(id));
            if(!artwork)
            return artwork;
        };

        window.removeItem = 

        window.procede = 

    

    import * as Frame from "./frame.js";

    const cart = document.getElementById("cart-link");
    var cartArr = JSON.parse(localStorage.getItem("cart"));
    if(cartArr != null 

    const queryParams = new URLSearchParams(window.location.search);
    const objID = queryParams.get("objectID");
    const form = document.getElementById("config-form");

    form["printSize"].value = queryParams.get("printSize") || "M";
    form["frameStyle"].value = queryParams.get("frameStyle") || "classic";
    form["matColor"].value = queryParams.get("matColor") || "mint";
    form["frameWidth"].value = queryParams.get("frameWidth") / 10 || 4;
    form["frameWidthR"].value = form["frameWidth"].value;
    form["matWidth"].value = queryParams.get("matWidth") / 10 || 5.5;
    form["matWidthR"].value = form["matWidth"].value;

    getObjectByID(objID).then(obj => {
      if(obj == null) 
      document.getElementById("object-id").value = obj.objectID;

      const previewImg = document.getElementById("preview-image");
      previewImg.src = obj.primaryImageSmall;
      const imageLabel = document.getElementById("image-label");
      imageLabel.innerHTML = '<span class="artist">' +obj.artistDisplayName+ '</span>' +
              ' <span class="title">'+obj.title+'</span> ' +
              '<span class="date">'+obj.objectDate+'</span>';

      render();
    });

    async function getObjectByID(objID){
      let obj = JSON.parse(localStorage.getItem(objID));
      if(!obj)
      return obj;
    }

    window.render = function render(){
      const container = document.getElementById("preview-container");
      const previewImg = document.getElementById("preview-image");
      const form = document.getElementById("config-form");
      const printSize = form["printSize"].value;
      const frameStyle = form["frameStyle"].value;
      const frameWidth = form["frameWidth"].value * 10;
      const matColor = form["matColor"].value;
      const matWidth = form["matWidth"].value * 10;
      Frame.render(previewImg, container, printSize, frameStyle, frameWidth, matColor, matWidth);

      const printSizes = Frame.getPrintSizes(previewImg);
      const totalWidth = printSizes[printSize][0] + 2 * frameWidth + 2 * matWidth;
      const totalHeight = printSizes[printSize][1] + 2 * frameWidth + 2 * matWidth;
      document.getElementById("print-size-s-label").innerHTML = 'Small <br>'+ (printSizes['S'][0] / 10)+ '×'+ (printSizes['S'][1] / 10) +'cm';
      document.getElementById("print-size-m-label").innerHTML = 'Medium<br>'+ (printSizes['M'][0] / 10)+ '×'+ (printSizes['M'][1] / 10) +'cm';
      document.getElementById("print-size-l-label").innerHTML = 'Large <br>'+ (printSizes['L'][0] / 10)+ '×'+ (printSizes['L'][1] / 10) +'cm';
      document.getElementById("total-size").innerHTML = totalWidth / 10 + '×' + totalHeight / 10 +'cm';

      const price = Frame.calculatePrice(printSize, frameStyle, frameWidth, matWidth);
      document.getElementById('price').innerHTML = '€ '+price.toFixed(2);
    }

    window.updateMatSlider =  
  
    window.updateFrameSlider = 

    window.addToCart = 
  
  export function getPrintSizes(img) {
    let S = [297, 297]; // A4
    let M = [420, 420]; // A3
    let L = [594, 594]; // A2

    const w = img.naturalWidth;
    const h = img.naturalHeight;

    if (h > w)  else {
        S[1] = Math.floor(h * S[0] / w);
        M[1] = Math.floor(h * M[0] / w);
        L[1] = Math.floor(h * L[0] / w);
    }

    return { S: S, M: M, L: L };
}

export function render(img, container, printSize, frameStyle, frameWidth, matColor, matWidth) {
    const printSizes = getPrintSizes(img);
    const w = printSizes[printSize][0];
    const h = printSizes[printSize][1];

    let x;
    if (w > h)  else {
        x = container.offsetHeight / (h + 2 * matWidth + 2 * frameWidth);
    }

    const frameImageSlices = {
        classic: 115,
        natural: 75,
        shabby: 120,
        elegant: 107
    };

    const matColors = {
        ivory: '#fffff0',
        mint: '#e0e6d4',
        wine: '#50222d',
        indigo: '#29434c',
        coal: '#333a3d',
    };

    img.style.boxSizing = 'border-box';
    img.width = (w + 2 * matWidth + 2 * frameWidth) * x;
    img.height = (h + 2 * matWidth + 2 * frameWidth) * x;
    img.style.borderImageSource = `url(frame-styles/${frameStyle}.jpg)`;
    img.style.borderImageSlice = frameImageSlices[frameStyle];
    img.style.borderWidth = `${frameWidth * x}px`;
    img.style.backgroundColor = matColors[matColor];
    img.style.padding = `${matWidth * x}px`;
}

export function calculatePrice(printSize, frameStyle, frameWidth, matWidth) {
    let price = 0.0;
    const sizeMultiplier = {
        'S': 1,
        'M': 2,
        'L': 3.5
    };
    const frameCost = {
        'classic': 1,
        'natural': 0.8,
        'shabby': 0.9,
        'elegant': 0.85,
    };
    price = (frameCost[frameStyle] * (frameWidth / 10) + 0.05 * (matWidth / 10) + 30) * sizeMultiplier[printSize];
    return (Math.round((price + Number.EPSILON) * 100) / 100);
}

    const urlParams = new URLSearchParams(window.location.search);
    const qv = urlParams.get('q');
    
  
    if(qv){
      const sinfo = document.getElementById("search-info");
      sinfo.innerHTML = `Searching for &ldquo;${qv}&rdquo;...`;
      
      getObjects(qv).then(function(res){
        const arr = res.objectIDs.slice(0, 100);
        const count = arr.length;
        if(count == 1)else{
          sinfo.innerHTML = `Found ${count} artworks for &ldquo;${qv}&rdquo;`;
        }
        arr.forEach(element => {
          buildItem(element);
        });
      });
    }

    const cart = document.getElementById("cart-link");
    var cartArr = JSON.parse(localStorage.getItem("cart"));
    if(cartArr.length > 0)
    
  
    function buildItem(id){
      getObjectById(id).then(function(obj){
          const gallery = document.getElementById("gallery");
          const container = document.createElement("div");
          container.classList.add("thumb");
          container.innerHTML = `
              <a href="./config.html?objectID=${obj.objectID}" id="object-${obj.objectID}">
                <img src="${obj.primaryImageSmall}" alt="${obj.title}" id="object-image-${obj.objectID}">
                <div class="museum-label">
                  <span class="artist">${obj.artistDisplayName}</span>
                  <span class="title">${obj.title}</span>,
                  <span class="date">${obj.objectDate}</span>
                </div>
              </a>
            `;
          gallery.appendChild(container);
      })
      
    }
  
    async function getObjects(query){
      const url = 'https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&q=' + query;
      var res = await fetch(url).then(function(response){
        return response.json();
      })
      if (!res || res.total < 1) 
      return res;
    }
  
    async function getObjectById(id){
      let res = JSON.parse(localStorage.getItem(id));
      if(!res)
      return res;
    }
  
  