const CACHE_PREFIX = 'artworkCache_'

export 

export 
export class Artwork {
    
}window.addEventListener('load', () => {
    let cart = JSON.parse(localStorage.getItem('cart')) ;
    document.getElementById('cart-link').innerHTML = `Cart (${cart.length})`;
});
import { Artwork } from "./artwork.js";
import { render, calculatePrice } from "./frame.js";
import * as artworkCache from './artwork-cache.js';

renderCart();

function renderCart() {
    let cart = JSON.parse(localStorage.getItem('cart')) ;

    Promise.all(cart.map()).then((data) => {
        let insertStrings = data.map();

        let totalPrice = 0;
        data.forEach();

        document.getElementById('cart').innerHTML = insertStrings.join('\n') +
        `${cart.length === 0 ? '<h2>There are no items in your shopping cart.</h2>' }
        <div class="cart-total">
            <div class="price">Total: € <span id="price-total">${totalPrice.toFixed(2)}</span></div>
            <button type="button" id="checkout-button" href="checkout.html" ${cart.length === 0 ? 'disabled' }>Checkout</button>
        </div>`;


        data.forEach();

        document.getElementById('checkout-button').addEventListener('click', );
    });
}


import * as artworkCache from './artwork-cache.js';
import * as frameUtil from './frame.js';
import { Artwork } from './artwork.js';

let queryString = window.location.search;
let queries = {
    objectID: null,
    printSize: null,
    frameStyle: null,
    frameWidth: null,
    matColor: null,
    matWidth: null
};
for (const [key, value] of new URLSearchParams(queryString)) {
    queries = { ...queries, [key]: value };
}

if (!queries.objectID) 


window.addEventListener('load', () => {
    document.getElementById("config-form").addEventListener("submit", addToCart);

    if (queries.printSize) 
    if (queries.frameStyle) 
    if (queries.frameWidth) 
    if (queries.matColor) 
    if (queries.matWidth) 

    let artwork = artworkCache.retrieve(queries.objectID);
    if (artwork) {
        insertImageData(artwork);
        update();
    }

    document.querySelectorAll('input[type=range], input[type=number]').forEach(element => {
        let event = element.getAttribute('type') === 'range' ? 'input' : 'change';
        element.addEventListener(event, );
    });

    document.querySelectorAll('input').forEach((element) => {
        element.addEventListener('change', update);
    });
});

const changeRangeValues = 

const insertImageData = (artwork) => {
    document.getElementById('preview-image').setAttribute('src', artwork.image);
    document.getElementById('image-label').innerHTML = `<span class="artist">${artwork.artist}</span>
<span class="title">${artwork.title}</span>,
<span class="date">${artwork.date}</span>`;
}

const update = () => {
    let img = document.getElementById('preview-image');
    let container = document.getElementById('preview-container');
    let printSize = document.querySelector('input[name="printSize"]:checked').value;
    let frameStyle = document.querySelector('input[name="frameStyle"]:checked').value;
    let frameWidth = document.querySelector('input[name="frameWidth"]').value;
    let matColor = document.querySelector('input[name="matColor"]:checked').value;
    let matWidth = document.querySelector('input[name="matWidth"]').value;

    let ps = frameUtil.getPrintSizes(img);

    document.getElementById('print-size-s-label').innerHTML = `Small<br>${ps.S[0]} × ${ps.S[1]} cm`;
    document.getElementById('print-size-m-label').innerHTML = `Medium<br>${ps.M[0]} × ${ps.M[1]} cm`;
    document.getElementById('print-size-l-label').innerHTML = `Large<br>${ps.L[0]} × ${ps.L[1]} cm`;

    document.getElementById('price').innerHTML = `€ ${frameUtil.calculatePrice(printSize, frameStyle, frameWidth, matWidth).toFixed(2)}`;

    let totalHeight = ps[printSize][0] + (2 * parseFloat(frameWidth)) + (2 * parseFloat(matWidth));
    let totalWidth = ps[printSize][1] + (2 * parseFloat(frameWidth)) + (2 * parseFloat(matWidth));
    document.getElementById('total-size').innerHTML = `${totalHeight} × ${totalWidth} cm`;

    frameUtil.render(img, container, printSize, frameStyle, frameWidth, matColor, matWidth);
}


export 

export 

export import { Artwork } from "./artwork.js";
import * as ArtworkCache from "./artwork-cache.js";

const BASE_URL = "https://collectionapi.metmuseum.org/public/collection/v1/";
const HIGHLIGHTS_SRC = "./highlights.json";

const SEARCH_BOX = document.getElementById("search");
SEARCH_BOX.addEventListener('input', )

document.addEventListener('DOMContentLoaded', event => {
    if ((window.location.href).includes("?q="))  else {
        showHiglights();
    }
});

async function showHiglights() {
    fetch(HIGHLIGHTS_SRC)
        .then(response => response.json())
        .then((highlights) => {
            console.log(highlights.highlights);
            fetchAndShowArtworks(highlights.highlights);
        });
}

export 

async function fetchAndShowArtworks(objectIDs) {
    for (const ID of objectIDs) {
        fetchArtwork(ID)
            .then((artwork) => {
                appendArtworkToGallery(ID, artwork);
            }).catch();
    }
}

async function fetchArtwork(artworkID) {
    return new Promise((resolve, reject) => {
        let artwork = ArtworkCache.retrieve(artworkID);
        if (artwork) {
            resolve(artwork);
        }
    });
}

function appendArtworkToGallery(ID, artwork) {
    const gallery = document.getElementById("gallery");
    var artworkContainer = document.createElement('div');
    artworkContainer.classList.add("thumb");
    artworkContainer.innerHTML =
`<a href="config.html?objectID=${ID}">
    <img src="${artwork.image}" alt="${artwork.title}" id="object-image-0">
    <div class="museum-label">
        <span class="artist">${artwork.artist}</span>
        <span class="title">${artwork.title}</span>,
        <span class="date">${artwork.date}</span>
    </div>
</a>`;
    gallery.appendChild(artworkContainer);
}
